<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SpaceEngineers.Game</name>
    </assembly>
    <members>
        <member name="T:SpaceEngineers.Game.ModAPI.Ingame.IMyAirVent">
            <summary>
            AirVent block for pressurizing and depresurizing rooms
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyAirVent.IsPressurized">
            <summary>
            Room can be pressurized
            </summary>
            <returns>true if containing room is airtight</returns>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyAirVent.GetOxygenLevel">
            <summary>
            Oxygen level in room
            </summary>
            <returns>Oxygen fill level as decimal (0.5 = 50%)</returns>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyAirVent.CanPressurize">
            <summary>
            Can fill room with air 
            true - room is airtight
            false - room is not airtight
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyAirVent.IsDepressurizing">
            <summary>
            Vent mode
            false - pressurize (filling room)
            true - depressurize (sucking air out)
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyAirVent.Depressurize">
            <summary>
            Vent mode
            false - pressurize (filling room)
            true - depressurize (sucking air out)
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyAirVent.Status">
            <summary>
            Gets current air vent status
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.IMyAirVent.GasOutputPerSecond">
            <summary>
            How much gas can be pushed out per second
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.IMyAirVent.GasInputPerSecond">
            <summary>
            How much gas can be pulled in per second
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.IMyAirVent.OxygenSinkInfo">
            <summary>
            Resource sink component for gas
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.IMyAirVent.SourceComp">
            <summary>
            Resource source component
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.Entities.Blocks.MyAirVent.IsPressurized">
            <summary>
            Compatibility method
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyButtonPanel.GetButtonName(System.Int32)">
            <summary>
            Gets the button name.
            </summary>
            <param name="index">Zero-based button position</param>
            <returns></returns>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyButtonPanel.SetCustomButtonName(System.Int32,System.String)">
            <summary>
            Sets the custom button name.
            </summary>
            <param name="index">Zero-base button position</param>
            <param name="name">Name of button</param>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyButtonPanel.HasCustomButtonName(System.Int32)">
            <summary>
            Gets if the specified button has a custom name set.
            </summary>
            <param name="index">Zero-base button position</param>
            <returns></returns>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyButtonPanel.ClearCustomButtonName(System.Int32)">
            <summary>
            Clears the custom name of the specified button.
            </summary>
            <param name="index">Zero-base button position</param>
            <remarks>This is safe to call even if there is no custom name assigned.</remarks>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyButtonPanel.IsButtonAssigned(System.Int32)">
            <summary>
            Gets if the specified button is assigned an action.
            </summary>
            <param name="index">Zero-base button position</param>
            <returns></returns>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyButtonPanel.AnyoneCanUse">
            <summary>
            Gets or sets if anyone is allowed to activate the buttons.
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyGravityGeneratorBase.IsPositionInRange(VRageMath.Vector3D)">
            <summary>
            Tests if the specified point is within the gravity of this entity.
            </summary>
            <param name="worldPoint">Point to test</param>
            <returns><b>true</b> if in range; <b>false</b> if not</returns>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyGravityGeneratorBase.Gravity">
            <summary>
            Gets the gravity acceleration
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyGravityGeneratorBase.GravityAcceleration">
            <summary>
            Gets or sets the gravity acceleration in m/s^2.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.IMyGravityGeneratorBase.GravityAcceleration">
            <summary>
            Gets or sets the gravity acceleration in m/s^2.
            </summary>
            <remarks>This is not clamped like the Ingame one is.</remarks>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyGravityGenerator.FieldSize">
            <summary>
            Gets or sets the gravity field as a Vector3(W,H,D).
            </summary>
            <remarks>
            X is Width
            Y is Height
            Z is Depth
            </remarks>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.IMyGravityGenerator.FieldSize">
            <summary>
            Gets or sets the gravity field as a Vector3(W,H,D).
            </summary>
            <remarks>
            X is Width
            Y is Height
            Z is Depth
            This is not clamped like the Ingame one is.
            </remarks>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyGravityGeneratorSphere.Radius">
            <summary>
            Radius of the gravity field, in meters
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.IMyGravityGeneratorSphere.Radius">
            <summary>
            Radius of the gravity field, in meters
            </summary>
            <remarks>This is not clamped like the Ingame one is.</remarks>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyLandingGear.Lock">
            <summary>
            Locks the landing gear.
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyLandingGear.ToggleLock">
            <summary>
            Toggles the landing gear lock.
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyLandingGear.Unlock">
            <summary>
            Unlocks the landing gear.
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyLandingGear.ResetAutoLock">
            <summary>
            Resets autolock timer
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyLandingGear.IsBreakable">
            <summary>
            Gets if the landing gear lock can be broken with force.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyLandingGear.IsLocked">
            <summary>
            Gets whether the landing gear is currently locked.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyLandingGear.AutoLock">
            <summary>
            Toggles the autolock of the landing gear.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyLandingGear.LockMode">
            <summary>
            Gets the current lock state of the landing gear.
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.IMyLandingGear.GetAttachedEntity">
            <summary>
            Returns the entity the landing gear is attached to.
            </summary>
            <returns></returns>
        </member>
        <member name="E:SpaceEngineers.Game.ModAPI.IMyLandingGear.LockModeChanged">
            <summary>
            Event triggered when the lock mode changes.
            </summary>
        </member>
        <member name="E:SpaceEngineers.Game.ModAPI.IMyLandingGear.StateChanged">
            <summary>
            The lock state changes (locked or unlocked).
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.Entities.Blocks.MyMedicalRoom.HealingAllowed">
            <summary>
            Disabling prevents healing characters.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.Entities.Blocks.MyMedicalRoom.RefuelAllowed">
            <summary>
            Disabling prevents refueling suits.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.Entities.Blocks.MyMedicalRoom.RespawnAllowed">
            <summary>
            Disable to remove respawn component from medical room.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.Entities.Blocks.MyMedicalRoom.SuitChangeAllowed">
            <summary>
            Disable to prevent players from changing their suits.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.Entities.Blocks.MyMedicalRoom.CustomWardrobesEnabled">
            <summary>
            If set to true CustomWardrobeNames are used instead of all definitions when instantiating WardrobeScreen.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.Entities.Blocks.MyMedicalRoom.CustomWardrobeNames">
            <summary>
            Used when CustomWardrobes are enabled.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.Entities.Blocks.MyMedicalRoom.ForceSuitChangeOnRespawn">
            <summary>
            Use when you want to force suit change on respawn. Wont turn to true if RespawnSuitName is null.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.Entities.Blocks.MyMedicalRoom.RespawnSuitName">
            <summary>
            Name of suit into which would player be forced upon respawn.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.Entities.Blocks.MyMedicalRoom.SpawnWithoutOxygenEnabled">
            <summary>
            Players wont be able to spawn in rooms that are not pressurised.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyOxygenFarm.CanProduce">
            <summary>
            Gets if the block can produce gas.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyShipMergeBlock.IsConnected">
            <summary>
            Gets if the merge block is connected to another one.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.IMyShipMergeBlock.Other">
            <summary>
            The other merge block this is connected to.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.IMyShipMergeBlock.GridCount">
            <summary>
            Gets the number of grids connected.
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.Entities.Blocks.MyShipWelder.IsWithinWorldLimits(Sandbox.Game.Entities.Blocks.MyProjectorBase,System.String)">
            <summary>
            Determines whether the projected grid still fits within block limits set by server after a new block is added
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMySolarPanel.CurrentOutput">
            <summary>
            Current output of solar panel in Megawatts
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMySolarPanel.MaxOutput">
            <summary>
            Maximum output of solar panel in Megawatts
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.IMySolarPanel.SourceComp">
            <summary>
            Resource (power) Source
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMySoundBlock.Play">
            <summary>
            Plays the currently selected sound.
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMySoundBlock.Stop">
            <summary>
            Stops the currently playing sound.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMySoundBlock.Volume">
            <summary>
            Gets or sets the volume level of sound
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMySoundBlock.Range">
            <summary>
            Gets or sets the range the sound is audible.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMySoundBlock.IsSoundSelected">
            <summary>
            Gets if a sound is currently selected.
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMySoundBlock.LoopPeriod">
            <summary>
            Gets or sets the loop period of a loopable sound, in seconds.
            </summary>
            <remarks>This value is ignored if the selected sound is not loopable.</remarks>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMySoundBlock.SelectedSound">
            <summary>
            Gets or sets the selected sound.
            </summary>
            <remarks>The sound can be selected either by using the unique hash name, or the user visible text.<p/>
            Fetching the name will always return the unique hash name.
            </remarks>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.IMySoundBlock.Volume">
            <summary>
            Gets or sets the volume level of sound
            </summary>
            <remarks>This is not clamped like the Ingame one.</remarks>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.IMySoundBlock.Range">
            <summary>
            Gets or sets the range the sound is audible.
            </summary>
            <remarks>This is not clamped like the Ingame one.</remarks>
        </member>
        <member name="T:SpaceEngineers.Game.ModAPI.IMySpaceBall">
            <summary>
            ModAPI Spaceball interface
            </summary>
        </member>
        <member name="T:SpaceEngineers.Game.ModAPI.IMyVirtualMass">
            <summary>
            ModAPI VirtualMass Interface
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyVirtualMass.VirtualMass">
            <summary>
            Virtualmass weight
            </summary>
        </member>
        <member name="T:SpaceEngineers.Game.ModAPI.Ingame.IMySpaceBall">
            <summary>
            Spaceball interface
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMySpaceBall.Friction">
            <summary>
            Ball friction
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMySpaceBall.Restitution">
            <summary>
            Ball restitution
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMySpaceBall.IsBroadcasting">
            <summary>
            Is broadcasting
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMySpaceBall.Broadcasting">
            <summary>
            Gets or sets broadcasting
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMySpaceBall.VirtualMass">
            <summary>
            Virtual mass of ball, in kg
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyTimerBlock.Trigger">
            <summary>
            Trigger immediately, skips countdown
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyTimerBlock.StartCountdown">
            <summary>
            Begin countdown
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyTimerBlock.StopCountdown">
            <summary>
            Stops current countdown
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyTimerBlock.IsCountingDown">
            <summary>
            Gets if the timer block is active and counting down
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyTimerBlock.TriggerDelay">
            <summary>
            Gets or sets the countdown time, in seconds
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyTimerBlock.Silent">
            <summary>
            Gets or sets if the countdown is silent
            </summary>
        </member>
        <member name="T:SpaceEngineers.Game.ModAPI.IMyUpgradeModule">
            <summary>
            Interface to access upgrade module properties <see cref="T:SpaceEngineers.Game.ModAPI.Ingame.IMyUpgradeModule"/>
            </summary>
        </member>
        <member name="T:SpaceEngineers.Game.ModAPI.Ingame.IMyUpgradeModule">
            <summary>
            Interface to access module upgrades properties
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.ModAPI.Ingame.IMyUpgradeModule.GetUpgradeList(System.Collections.Generic.List{SpaceEngineers.ObjectBuilders.Definitions.MyUpgradeModuleInfo}@)">
            <summary>
            Retrieve list of upgrades from this block (r/o), see <see cref="!:Sandbox.Common.ObjectBuilders.Definitions.MyUpgradeModuleInfo">MyUpgradeModuleInfo</see> for details
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyUpgradeModule.UpgradeCount">
            <summary>
            Retrieve number of upgrade effects this block has (r/o)
            </summary>
        </member>
        <member name="P:SpaceEngineers.Game.ModAPI.Ingame.IMyUpgradeModule.Connections">
            <summary>
            Retrieve number of blocks this block is connected to (r/o)
            </summary>
        </member>
        <member name="F:SpaceEngineers.Game.Entities.Blocks.MyUpgradeModule.m_dummies">
            <summary>
            These are sorted so that dummy index and emissivity index match
            </summary>
        </member>
        <member name="T:SpaceEngineers.Game.ModAPI.IMyArtificialMassBlock">
            <summary>
            ModAPI Artificial Mass Block Interface
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.GUI.MyGuiScreenOptionsGraphics.ReadSettingsFromControls(Sandbox.Engine.Platform.VideoMode.MyGraphicsSettings@)">
            <returns>Bool indicating a game restart is required</returns>
        </member>
        <member name="T:SpaceEngineers.Game.GUI.MyGuiScreenPerformanceWarnings.WarningLine">
            <summary>
            Each of the performance problems on the screen
            </summary>
        </member>
        <member name="T:SpaceEngineers.Game.GUI.MyGuiScreenPerformanceWarnings.WarningArea">
            <summary>
            Used to contain each of the areas (graphics, blocks, other). Also holds the headings.
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.GUI.MyGuiScreenPerformanceWarnings.WarningArea.Add(Sandbox.Graphics.GUI.MyGuiControlList,System.Boolean)">
            <summary>
            Add this area into a list
            </summary>
        </member>
        <member name="F:SpaceEngineers.Game.ModAPI.Ingame.VentStatus.Depressurized">
            <summary>
            Air vent is depressurized
            </summary>
        </member>
        <member name="F:SpaceEngineers.Game.ModAPI.Ingame.VentStatus.Depressurizing">
            <summary>
            Air vent is in process of depressurizing
            </summary>
        </member>
        <member name="F:SpaceEngineers.Game.ModAPI.Ingame.VentStatus.Pressurized">
            <summary>
            Air vent is pressurized
            </summary>
        </member>
        <member name="F:SpaceEngineers.Game.ModAPI.Ingame.VentStatus.Pressurizing">
            <summary>
            Air vent is in process of pressurizing
            </summary>
        </member>
        <member name="M:SpaceEngineers.Game.Weapons.Guns.Barrels.MyLargeGatlingBarrel.ShowReloadNotification(System.Int32)">
            <summary>
            Will show the reload notification for the specified duration.
            </summary>
            <param name="duration">The time in MS it should show reloading.</param>
        </member>
        <member name="M:SpaceEngineers.Game.Weapons.Guns.Barrels.MyLargeMissileBarrel.ShowReloadNotification(System.Int32)">
            <summary>
            Will show the reload notification for the specified duration.
            </summary>
            <param name="duration">The time in MS it should show reloading.</param>
        </member>
        <member name="M:SpaceEngineers.Game.World.MySpaceRespawnComponent.GetSpawnPositionNearPlanet(Sandbox.Game.Entities.MyPlanet,System.Single,VRageMath.Vector3D@,VRageMath.Vector3D@,VRageMath.Vector3D@,System.Single,System.Single,System.Single)">
            <summary>
            Returns a position adjusted for planets that should be safe to spawn at given the radius and position.
            </summary>
            <param name="collisionRadius">The radius of the object that is trying to spawn.</param>
            <param name="position">The position the object would like to spawn at.</param>
            <param name="forward">(Out) The forward vector the object should spawn with.</param>
            <param name="up">(Out) The up vector the object should spawn with.</param>
            <param name="planetAtmosphereRatio">The ratio within the planet's max radius and atmosphere radius you are positioned in.</param>
            <param name="randomRangeMin">The minimum randomized distance that is added.</param>
            <param name="randomRangeMax">The minimum randomized distance that is added.</param>
        </member>
        <member name="M:SpaceEngineers.Game.World.MySpaceRespawnComponent.GetSpawnPosition(System.Single,VRageMath.Vector3D@,VRageMath.Vector3D@,VRageMath.Vector3D@,System.Single,System.Single,System.Single)">
            <summary>
            Returns a position that should be safe to spawn at given the radius and position.
            </summary>
            <param name="collisionRadius">The radius of the object that is trying to spawn.</param>
            <param name="position">The position the object would like to spawn at.</param>
            <param name="forward">(Out) The forward vector the object should spawn with.</param>
            <param name="up">(Out) The up vector the object should spawn with.</param>
            <param name="planetSpawnHeightRatio">The ratio within the planet's max radius and atmosphere radius you are positioned in.</param>
            <param name="randomRangeMin">The minimum randomized distance that is added.</param>
            <param name="randomRangeMax">The minimum randomized distance that is added.</param>
        </member>
    </members>
</doc>
