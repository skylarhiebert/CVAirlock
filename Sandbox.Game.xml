<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sandbox.Game</name>
    </assembly>
    <members>
        <member name="F:Sandbox.Definitions.MyCubeBlockDefinition.Components">
            <summary>
            Index 0 is first component on stack, the one which is build first and destroyed last.
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyCubeBlockDefinition.BuildType">
            <summary>
            Building type - always lower case (wall, ...).
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyCubeBlockDefinition.BuildMaterial">
            <summary>
            Build material - always lower case (for walls - "stone", "wood"). 
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyCubeBlockDefinition.BuildProgressToPlaceGeneratedBlocks">
            <summary>
            Value of build progress when generated blocks start to generate.
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyCubeBlockDefinition.SubBlockDefinitions">
            <summary>
            Map from dummy name subblock definition.
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyCubeBlockDefinition.BlockStages">
            <summary>
            Array of block stages. Stage represents other block definition which have different UV mapping, mirrored model, etc (stone rounded corner...). Stages can be cycled when building cubes. 
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyCubeBlockDefinition.BuildProgressModels">
            <summary>
            Models used when building. They are sorted in ascending order according to their percentage.
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyCubeBlockDefinition.VoxelPlacement">
            <summary>
            Defines how much block can penetrate voxel.
            </summary>
        </member>
        <member name="M:Sandbox.Definitions.MyCubeBlockDefinition.ModelChangeIsNeeded(System.Single,System.Single)">
            <summary>
            Tells, whether a model change is needed, if the block changes integrity from A to B or vice versa.
            </summary>
        </member>
        <member name="P:Sandbox.Definitions.MyCubeBlockDefinition.Direction">
            <summary>
            Allowed cube block directions.
            </summary>
        </member>
        <member name="P:Sandbox.Definitions.MyCubeBlockDefinition.Rotation">
            <summary>
            Allowed cube block rotations.
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyCubeBlockDefinition.BuildProgressModel.BuildRatioUpperBound">
            <summary>
            Upper bound when the model is no longer shown. If model is first in array
            and has build percentage of 0.33, it will be shown between 0% and 33% of
            build progress.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Sandbox.Definitions.MyCubeBlockDefinition.MountPoint.ExclusionMask" -->
        <!-- Badly formed XML comment ignored for member "F:Sandbox.Definitions.MyCubeBlockDefinition.MountPoint.PropertiesMask" -->
        <member name="F:Sandbox.Definitions.MyCubeBlockDefinition.MountPoint.Enabled">
            <summary>
            Disabled mount points always return false when checking for connectivity
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyCubeBlockDefinition.MountPoint.Default">
            <summary>
            Mark mount point as default for autorotate.
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyBlueprintDefinitionBase.BaseProductionTimeInSeconds">
            <summary>
            Base production time in seconds, which is affected by speed increase of
            refinery or assembler.
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyBlueprintDefinitionBase.OutputVolume">
            <summary>
            Total volume of products created by one unit of blueprint. This is for production calculation purposes.
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyBlueprintDefinitionBase.Atomic">
            <summary>
            Whether the the blueprint's outputs have to be produced as a whole at once (because you cannot divide some output items)
            </summary>
        </member>
        <member name="M:Sandbox.Definitions.MyBlueprintDefinitionBase.Postprocess">
            <summary>
            Postprocess initialization. Should set PostprocessNeeded to false if initialization was successful.
            </summary>
        </member>
        <member name="M:Sandbox.Definitions.MyBlueprintDefinitionBase.GetBlueprints(System.Collections.Generic.List{Sandbox.Definitions.MyBlueprintDefinitionBase.ProductionInfo})">
            <summary>
            Should return the number of added blueprints (to make building hierarchical blueprint production infos easier)
            </summary>
        </member>
        <member name="P:Sandbox.Definitions.MyBlueprintDefinitionBase.PostprocessNeeded">
            <summary>
            Whether the Postprocess method still needs to be called.
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyBlueprintDefinitionBase.Item.Amount">
            <summary>
            Amount of item required or produced. For discrete objects this refers to
            pieces. For ingots and ore, this refers to volume in m^3.
            </summary>
        </member>
        <member name="P:Sandbox.Definitions.MyVoxelMaterialDefinition.Index">
            <summary>
            Value generated at runtime to ensure correctness. Do not serialize or deserialize.
            This is what the old cast to int used to result into, but now numbers depend on order in XML file.
            TODO Serialize to XML and ensure upon loading that these values are starting from 0 and continuous.
            </summary>
        </member>
        <member name="M:Sandbox.Definitions.MyDefinitionManager.CheckCharacterPickup">
            <summary>
            This is here only for a while to warn modders about the pickup component change that we did.
            </summary>
        </member>
        <member name="M:Sandbox.Definitions.MyDefinitionManager.GetDefaultFactions">
            <summary>
            Gets default factions.
            </summary>
            <returns>List of default factions.</returns>
        </member>
        <member name="M:Sandbox.Definitions.MyDefinitionManager.TryGetComponentSubstitutionDefinition(VRage.Game.MyDefinitionId,Sandbox.Definitions.MyComponentSubstitutionDefinition@)">
            <summary>
            Returns the substitution definition for a "base" (i.e. required) component that has multiple other components (i.e. providing components) substituting it
            </summary>
        </member>
        <member name="M:Sandbox.Definitions.MyDefinitionManager.TryGetProvidingComponentDefinition(VRage.Game.MyDefinitionId,Sandbox.Definitions.MyComponentSubstitutionDefinition@)">
            <summary>
            Returns the substitution definition for a component that can serve as a providing component for some other "base" (required) component
            </summary>
        </member>
        <member name="P:Sandbox.Definitions.MyDefinitionManager.LoadingSet">
            Return the definition set currently being loaded.
        </member>
        <member name="F:Sandbox.Definitions.MyDefinitionManager.DefinitionSet.m_blockGroups">
            <summary>
            Block pairs Small,Large
            </summary>
        </member>
        <member name="P:Sandbox.Definitions.MyCharacterDefinition.UseNewAnimationSystem">
            <summary>
            VRAGE TODO: TEMPORARY!
            </summary>
        </member>
        <member name="T:Sandbox.Definitions.MyEnvironmentDefinition">
            <summary>
            Global (environment) mergeable definitions
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyAssemblerDefinition.m_assemblySpeed">
            <summary>
            Assembly speed multiplier
            </summary>,
        </member>
        <member name="F:Sandbox.Definitions.MyComponentDefinition.MaxIntegrity">
            <summary>
            HP of the component. Used when calculating overall HP of block from its components.
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyComponentDefinition.DropProbability">
            <summary>
            Chance that the damaged component will be dropped when damage is inflicted to a component stack.
            Percentage given as value from 0 to 1.
            </summary>
        </member>
        <member name="M:Sandbox.Definitions.MyCubeGridDefinitions.FillRotationsForTopology(VRage.Game.MyCubeTopology,System.Int32)">
            <summary>
            Fills rotation table for topology. Any arbitrary 90deg. rotation can then be converted to one unique rotation
            </summary>
            <param name="topology"></param>
            <param name="male">Tile which normal is tested to find unique rotations. If -1, all rotations are allowed</param>
        </member>
        <member name="M:Sandbox.Definitions.MyCubeGridDefinitions.GetTopologyUniqueOrientation(VRage.Game.MyCubeTopology,VRageMath.MyBlockOrientation)">
            <summary>
            From 90degrees rotations combinations returns one unique topology orientation, which can differ
            from input, but the resulted shape of topology is same
            </summary>
            <param name="myCubeTopology">cube topology</param>
            <param name="rotation">input rotation</param>
            <returns></returns>
        </member>
        <member name="F:Sandbox.Definitions.MyRefineryDefinition.RefineSpeed">
            <summary>
            Speed of refining ore in kg per hour.
            </summary>
        </member>
        <member name="F:Sandbox.Definitions.MyRefineryDefinition.MaterialEfficiency">
            <summary>
            Percentage of material kept after refining process. Value is in range from
            0 to 1, where 0.7 means that 30% of material is lost and 70% is kept.
            </summary>
        </member>
        <member name="M:Sandbox.Definitions.MyPlanetEnvironmentMapping.GetItemRated(System.Single)">
            Given a value between 0 and 1 this will return the id of a vegetation item in which's
            range the value falls.
            
            If the value of rate is uniformly distributed then the definitions will be distributed
            according to their defined densities.
        </member>
        <member name="P:Sandbox.Definitions.MyPlanetEnvironmentMapping.Valid">
            Weather this mapping is valid.
        </member>
        <member name="T:Sandbox.Engine.Analytics.MyAnalyticsHelper">
            <summary>
            Helper class to call used analytics in a game (implementation of IMyAnalytics interface)
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Analytics.MyAnalyticsHelper.SetEntry(Sandbox.Engine.Analytics.MyGameEntryEnum)">
            <summary>
            Sets the entry of the game
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Analytics.MyAnalyticsHelper.StoreLoadingStartTime">
            <summary>
            Stores the time loading was started
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Analytics.MySpaceAnalytics.ReportTutorialEnd">
            <summary>
            This will report end of the tutorial only, if previously was called the ReportTutorialStep
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Multiplayer.MyClientState">
            <summary>
            Client state, can be defined per-game.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyClientState.WriteShared(VRage.Library.Collections.BitStream,VRage.Game.Entity.MyEntity,System.Boolean)">
            <summary>
            Shared area for SE and ME. So far it writes whether you have a controlled entity or not. In the latter case you get the spectator position
            </summary>
            <param name="stream"></param>
            <param name="validControlledEntity"></param>
        </member>
        <member name="P:Sandbox.Engine.Multiplayer.MyClientState.Context">
            <summary>
            Client point of interest, used on server to replicate nearby entities
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayerBase.StartProcessingClientMessages">
            <summary>
            Call when downloaded world is loaded
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayerBase.StartProcessingClientMessagesWithEmptyWorld">
            <summary>
            Call when empty world is created (battle lobby)
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayerServerBase.#ctor(Sandbox.Game.Multiplayer.MySyncLayer,System.Nullable{VRage.Network.EndpointId})">
            <summary>
            Initializes a new instance of the MyMultiplayerServerBase class.
            </summary>
            <param name="localClientEndpoint">Local client endpoint (for single player or lobby host) or null (for dedicated server)</param>
        </member>
        <member name="T:Sandbox.Engine.Multiplayer.MyMultiplayerLobbyClient">
            <summary>
            Container of multiplayer classes
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Models.MyModelOctreeNode.CHILD_BOUNDING_BOX_EXPAND">
            <summary>
            Expand child bounding boxex, expand by 30% on one side of each axis (child BB never get out of parents BB)
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Multiplayer.MyMultiplayerLobby">
            <summary>
            Container of multiplayer classes
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Analytics.IMyAnalytics">
            <summary>
            Generic interface for all analytics library integrations
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MyEShop.CheckServerAndUpdateStatus">
            <summary>
            Checks the server in order to update the Newsletter status
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MyEShop.ReadPlayerStatus(System.String)">
            <summary>
            Consume Server response about player newsletter status
            </summary>
            <param name="jsonString"></param>
        </member>
        <member name="F:Sandbox.Engine.Voxels.MyPrecalcJob.IsValid">
            <summary>
            Invalid tasks finishes normally and restarts afterwards. Even if results
            are not valid, they may still be useful.
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Physics.MyPhysicsBody">
            <summary>
            Abstract engine physics body object.
            </summary>
            <summary>
            Abstract engine physics body object.
            </summary>
            <summary>
            Abstract engine physics body object.
            </summary>
            <summary>
            Abstract engine physics body object.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysicsBody.SetRagdollDefaults">
            <summary>
             Sets default values for ragdoll bodies and constraints - useful if ragdoll model is not correct
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyPhysicsBody.InitialSolverDeactivation">
            <summary>
            Must be set before creating rigid body
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysicsBody.#ctor(VRage.ModAPI.IMyEntity,VRage.Game.Components.RigidBodyFlag)">
            <summary>
            Initializes a new instance of the <see cref="T:Sandbox.Engine.Physics.MyPhysicsBody"/> class.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysicsBody.AddForce(VRage.Game.Components.MyPhysicsForceType,System.Nullable{VRageMath.Vector3},System.Nullable{VRageMath.Vector3D},System.Nullable{VRageMath.Vector3})">
            <summary>
            Applies external force to the physics object.
            </summary>
            <param name="type">The type.</param>
            <param name="force">The force.</param>
            <param name="position">The position.</param>
            <param name="torque">The torque.</param>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysicsBody.ApplyImpulse(VRageMath.Vector3,VRageMath.Vector3D)">
            <summary>
            Applies the impulse.
            </summary>
            <param name="impulse">The dir.</param>
            <param name="pos">The pos.</param>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysicsBody.ClearSpeed">
            <summary>
            Clears the speeds.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysicsBody.Clear">
            <summary>
            Clear all dynamic values of physics object.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysicsBody.Deactivate">
            <summary>
            Deactivates this rigid body in physics.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Sandbox.Engine.Physics.MyPhysicsBody.ForceActivate" -->
        <member name="M:Sandbox.Engine.Physics.MyPhysicsBody.OnMotion(Havok.HkRigidBody,System.Single,System.Boolean)">
            <summary>
            Called when [motion].
            </summary>
            <param name="rbo">The rbo.</param>
            <param name="step">The step.</param>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysicsBody.OnWorldPositionChanged(System.Object)">
            <summary>
            Called when [world position changed].
            </summary>
            <param name="source">The source object that caused this event.</param>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysicsBody.Activate">
            <summary>
            Activates this rigid body in physics.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysicsBody.GetShape">
            <summary>
            Gets shape of this physics body even if its welded with other
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sandbox.Engine.Physics.MyPhysicsBody.RagdollSystemGroupCollisionFilterID">
            This System Collision ID is used for ragdoll in non-dead mode to avoid collision with character's rigid body
        </member>
        <member name="P:Sandbox.Engine.Physics.MyPhysicsBody.IsRagdollModeActive">
            <summary>
            Returns true when ragdoll is in world
            </summary>
        </member>
        <member name="P:Sandbox.Engine.Physics.MyPhysicsBody.Mass">
            <summary>
            Gets or sets the mass.
            </summary>
            <value>
            The mass.
            </value>
        </member>
        <member name="P:Sandbox.Engine.Physics.MyPhysicsBody.Speed">
            <summary>
            Gets or sets the speed.
            </summary>
            <value>
            The speed.
            </value>
        </member>
        <member name="P:Sandbox.Engine.Physics.MyPhysicsBody.CharacterSystemGroupCollisionFilterID">
            This system group id will is used to set's this character rigid bodies collision filters        
        </member>
        <member name="P:Sandbox.Engine.Physics.MyPhysicsBody.CharacterCollisionFilter">
            This is character collision filter, use this to avoid collisions with character and character holding bodies
        </member>
        <member name="P:Sandbox.Engine.Physics.MyPhysicsBody.LinearVelocity">
            <summary>
            Gets or sets the linear velocity.
            </summary>
            <value>
            The linear velocity.
            </value>
        </member>
        <member name="P:Sandbox.Engine.Physics.MyPhysicsBody.LinearDamping">
            <summary>
            Gets or sets the linear damping.
            </summary>
            <value>
            The linear damping.
            </value>
        </member>
        <member name="P:Sandbox.Engine.Physics.MyPhysicsBody.AngularDamping">
            <summary>
            Gets or sets the angular damping.
            </summary>
            <value>
            The angular damping.
            </value>
        </member>
        <member name="P:Sandbox.Engine.Physics.MyPhysicsBody.AngularVelocity">
            <summary>
            Gets or sets the angular velocity.
            </summary>
            <value>
            The angular velocity.
            </value>
        </member>
        <member name="P:Sandbox.Engine.Physics.MyPhysicsBody.IsMoving">
            <summary>
            Returns true when linear velocity or angular velocity is non-zero.
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyPhysicsBody.MyWeldInfo.Children">
            <summary>
            This does NOT contain all welded bodies, see @MyWeldGroupData
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyDestructionHelper.IsBodyWithoutGeneratedFracturedPieces(Havok.HkdBreakableBody,Sandbox.Game.Entities.MyCubeBlock)">
            <summary>
            Returns true if the body does not generate fractured pieces.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyDestructionHelper.ContainsBlockWithoutGeneratedFracturedPieces(Sandbox.Game.Entities.MyCubeBlock)">
            <summary>
            Returns true if the block (or any block in compound) does not generate generate fractured pieces.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyDestructionHelper.CreateFracturePiece(Havok.HkdBreakableShape,VRageMath.MatrixD@,System.Boolean,System.Nullable{VRage.Game.MyDefinitionId},System.Boolean)">
            <summary>
            
            </summary>
            <param name="shape">Piece takes ownership of shape so clone it first</param>
            <param name="worldMatrix"></param>
            <param name="definition"> without definition the piece wont save</param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysicsHelper.InitModelPhysics(VRage.ModAPI.IMyEntity,VRage.Game.Components.RigidBodyFlag,System.Int32)">
            <summary>
            Initialize entity physics using the model's collision shapes.
            </summary>
            <param name="entity">Entity to create physics for</param>
            <param name="rbFlags">One or more of <see cref="T:VRage.Game.Components.RigidBodyFlag"/> flags</param>
            <param name="collisionLayers">Collision layer physics operates on, see <see cref="T:Sandbox.Engine.Physics.MyPhysics.CollisionLayers"/></param>
            <returns><b>true</b> if new physics was initialized. <b>false</b> otherwise.</returns>
        </member>
        <member name="T:Sandbox.Engine.Physics.MyRagdollMapper">
            <summary>
            Maps Ragdoll instance to Character Bones
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.m_rigidBodiesToBonesIndices">
            <summary>
            Dictionary map of rigid body indices to the corresponding list of the bones binded to the specific rigid body
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.m_character">
            <summary>
            Character associated with this ragdoll
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.m_bones">
            <summary>
            Reference to bones which are used for mapping
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.m_ragdollRigidBodiesAbsoluteTransforms">
            <summary>
            List for storing matrices between method calls
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.BodiesRigTransfoms">
            <summary>
            Rigid Body transform matrices as on load
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.BonesRigTransforms">
            <summary>
            Bodies absolute rig transforms
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.BodiesRigTransfomsInverted">
            <summary>
            Bodies rig tranfsforms inverted
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.BonesRigTransformsInverted">
            <summary>
            Bones absolute rig transforms inverted
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.m_bodyToBoneRigTransforms">
            <summary>
            List of rig transfomrs from ragdoll rigid body to a correspondig bone. This is used to eliminate artiffacts, when rigid bodie's shape centers are not always aligned with the bones.
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.m_boneToBodyRigTransforms">
            <summary>
            Inversion of m_bodyToBoneRigTransforms
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.m_rigidBodies">
            <summary>
            Dictionary of rigid body names to their indices
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.PositionChanged">
            <summary>
            true if position of ragdoll changed after simulation
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.m_inicialized">
            <summary>
            Indicates whether this mapper was inicialized
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.m_keyframedBodies">
            <summary>
            List of Ragdoll Rigid Bodies indices which are set to be keyframed in simulation
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.m_dynamicBodies">
            <summary>
            List of Ragdoll Rigid Bodies indices which are set to be dynamic in simulation
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyRagdollMapper.m_ragdollBonesMappings">
            <summary>
            List of mappings bodies to bones list
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyRagdollMapper.#ctor(Sandbox.Game.Entities.Character.MyCharacter,VRageRender.Animations.MyCharacterBone[])">
            <summary>
            Constructs the new mapper
            </summary>
            <param name="ragdoll">The ragdoll model</param>
            <param name="bones">List of the mapped bones</param>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyRagdollMapper.Init(System.Collections.Generic.Dictionary{System.String,Sandbox.Definitions.MyCharacterDefinition.RagdollBoneSet})">
            <summary>
            Initializes the mapper
            </summary>
            <param name="ragdollBonesMappings">Dictionary containing rigid body names and the corresponding character bones names list</param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyRagdollMapper.InitRigTransforms">
            <summary>
            This computes the rig transforms from rigid bodies to ragdoll bones. Must be called before any transforms are made on rigid bodies!
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyRagdollMapper.AddRigidBodyToBonesMap(System.Int32,System.Collections.Generic.List{System.Int32},System.String)">
            <summary>
            Adds mappings
            </summary>
            <param name="rigidBodyIndex"></param>
            <param name="bonesIndices"></param>
            <param name="rigidBodyName"></param>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyRagdollMapper.UpdateRagdollPose">
            <summary>
            Sets the pose of the ragdoll to match the pose of the bones
            </summary>        
        </member>
        <member name="M:Sandbox.Engine.Physics.MyRagdollMapper.CalculateRagdollTransformsFromBones">
            <summary>
            Compute the transforms that should be used for rigid bodies based on current bones tranforms in the havokWorld
            </summary>
            <param name="worldMatrix"></param>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyRagdollMapper.UpdateRagdollRigidBodies">
            <summary>
            Set the ragdolls rigid bodies to computed transforms
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyRagdollMapper.UpdateCharacterPose(System.Single,System.Single)">
            <summary>
            Sets the character's bones to the ragdoll's pose
            </summary>
            <param name="weight">transform influence weight on dynamic bodies</param>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyRagdollMapper.UpdateRagdollPosition">
            <summary>
            Update Ragdoll position in the Havok world to copy the Physics position
            </summary>
        </member>
        <member name="P:Sandbox.Engine.Physics.MyRagdollMapper.IsKeyFramed">
            <summary>
            Indicates whether ragdoll associated with this mapper was set to keyframed or not
            </summary>
        </member>
        <member name="P:Sandbox.Engine.Physics.MyRagdollMapper.IsPartiallySimulated">
            <summary>
            True if at least some of the bones are simulated and ragdoll was added to world. Partly = some bodies set to dynamic, some keyframed
            </summary>
        </member>
        <member name="P:Sandbox.Engine.Physics.MyRagdollMapper.RigidBodiesToBonesIndices">
            <summary>
            Dictionary of rigid bodies indices to the list of bones that should be bound to these bodies
            </summary>
        </member>
        <member name="P:Sandbox.Engine.Physics.MyRagdollMapper.IsActive">
            <summary>
            True if the mapper was set to be active and can be used
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyWeldingGroups.ReplaceParent(VRage.Groups.MyGroups{VRage.Game.Entity.MyEntity,Sandbox.Engine.Physics.MyWeldGroupData}.Group,VRage.Game.Entity.MyEntity,VRage.Game.Entity.MyEntity)">
            <summary>
            Replace common parent in weld group
            old parent is not considered part of weld group anymore (isnt welded to new parent)
            </summary>
            <param name="group">weld group</param>
            <param name="oldParent">old parent</param>
            <param name="newParent">new parent (can be null)</param>
            <returns>chosen new parent</returns>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyDebugWorkTrackerExtensions.Stats(Sandbox.Engine.Utils.MyDebugWorkTracker{System.Int32})">
            Returns last/min/avg/max out of the history
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyCubemapHelpers.ProjectToNearestFace(VRageMath.Vector3D@,VRageMath.Vector3@)">
            Project a position to a face of the (-1, -1, -1)(1, 1, 1) cube.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyCubemapHelpers.GetCubeFace(VRageMath.Vector3@,System.Int32@)">
            Given a position in 3D space find which face of cubemap it falls on.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyCubemapHelpers.GetCubeFaceDirection(VRageMath.Vector3@,VRageMath.Vector3B@)">
            Given a position in 3D space find the direction of the face of cubemap it falls on.
        </member>
        <member name="M:Sandbox.Engine.Voxels.Planet.MyHeightmapFace.GetRowStart(System.Int32)">
            Compute that starting position of a row in the heightmap.
        </member>
        <member name="M:Sandbox.Engine.Voxels.Planet.MyHeightmapFace.QueryHeight(VRageMath.BoundingBox@)">
            Scan pruning tree for intersection with a bounding box.
            
            This method is a iterative implementation of the following algorithm:
            
            procedure scan(level, box, result)
            for each $cell in $level
                $inter = intersects($cell, $box)
              
                if $inter = INTERSECTS and $cell is not contained and $level != 0
                    $inter = scan($level -1, box, $result)
            
                switch on $inter
                    case INTERSECTS
                        return INTERSECTS
            
                    case CONTAINED
                        if $result == DISJOINT
                            return INTERSECTS
                        $result = CONTAINED
            
                    case DISJOINT
                        if $result == CONTAINED
                            return INTERSECTS
                        $result = DISJOINT
            return $result
        </member>
        <member name="M:Sandbox.Engine.Voxels.Planet.MyHeightmapFace.QueryLine(VRageMath.Vector3@,VRageMath.Vector3@,System.Single@,System.Single@)">
            Query a line over the heightmap for intersection.
            
            The line is the segment that starts in 'from' and ends in 'to'
            
            'xy' components of the vectors are the texture coordinates.
            The 'z' component is the height in [0,1] range.
            
            If either height is above or bellow the plane more than int16.MaxValue units
            this algorithm may yield incorrect results.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyPlanetMaterialProvider.PlanetMaterialRule.Check(System.Single,System.Single,System.Single,System.Single)">
            Check that a rule matches terrain properties.
            
            @param height Height ration to the height map.
            @param latitude Latitude cosine
            @param slope Surface dominant angle sine.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyPlanetShapeProvider.PrepareCache">
            The cache does not store in it's cells which map does one cell belong to, so before using it we
            have to invalidate all entries.
            
            Maybe at some point we can come up with a more elegant solution for multiple planets.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyPlanetShapeProvider.CalculateCacheCell(Sandbox.Engine.Voxels.Planet.MyHeightmapFace,Sandbox.Engine.Voxels.MyPlanetShapeProvider.Cache.Cell*,System.Boolean)">
            Calculate cell for the coefficient cache.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyPlanetShapeProvider.SampleHeightBicubic(System.Single,System.Single,VRageMath.Matrix@,VRageMath.Vector3@)">
             Catmull-Rom Patch:
            
             Given a matrix of points C = [(a0, a1, a2, a3), (a4, a5, a6, a7), (a8, a9, a10, a11), (a12, a13, a14, a15)]
             where each a_i is a controll point with coordinates (x,y,z). The patch is then parametrized by steps s and t.
            
             We can divide the operation into per dimension operations using the coordinate matrices Cx, Cy, Cz.
            
             For any given s and t the position on the curve is given by S * CR * C * CRt * T, where CR is the catmull-rom coefficient matrix,
             CRt is the transpose of the coefficient matrix and S = (1, s, s^2, s^3), T = (1, t, t^2, t^3).
             
             Frequently the matrix CR * C * CRT is called G, and it's submatrices Gx, Gy, Gz.
            
             When the controll points are in a regular grid we can map s and t to x and y.
              Then we can calculate the height using only Gz and the normal using Gz and the scale of the grid.
             
             Notice that the difference between this method and Bézier or B-Spline is simply the coefficient matrix.
             
             Also the CR matrix is parametrizable, we use the centripetal form (a = .5). This form provides the best smoothing.
             
             With this explanation in mind I have optimized the code heavily to remove redundant or unnecessary multiplications.
            
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyPlanetShapeProvider.GetValueForPositionCacheless(System.Int32,VRageMath.Vector2@,VRageMath.Vector3@)">
             Gets the elevation for a position.
            
             Does not use the cache, does not consider details.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyPlanetShapeProvider.SignedDistanceWithSample(System.Single,System.Single,System.Single)">
            Use a heightmap sample to produce signed distance.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyPlanetShapeProvider.ProjectToSurface(VRageMath.Vector3,VRageMath.Vector3@)">
            Project a position in space to the surface of the heightmap.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyPlanetShapeProvider.GetDistanceToSurfaceWithCache(VRageMath.Vector3)">
            Get the height for a position using the coefficient cache. Calculated position is for LOD0.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyPlanetShapeProvider.GetDistanceToSurfaceCacheless(VRageMath.Vector3)">
            Get the height for a position using the coefficient cache. Calculated position is for LOD0.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyPlanetShapeProvider.GetValueForPositionWithCache(System.Int32,VRageMath.Vector2@,VRageMath.Vector3@)">
            Get the height for a position using the coefficient cache. Calculated position is for LOD0.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyPlanetShapeProvider.GetBounds(VRageMath.Vector3*,System.Int32,System.Single@,System.Single@)">
            <summary>
            Get the minimum and maximum ranges of terrain height in the area determined by the provided points.
            </summary>
            <param name="localPoints">List of points to query</param>
            <param name="pointCount">Number of points</param>
            <param name="minHeight">The calculated minimum possible height of terrain</param>
            <param name="maxHeight">The calculated maximum possible height of terrain</param>
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyPlanetShapeProvider.GetBounds(VRageMath.BoundingBox@)">
             Takes the x and y bounds of the box and queries the heightmap for the minimum and maximum height in the box.
            
             The values are returned in the query box itself as the Z bounds.
            
             This only works if all vertices of the box are in the same face.
        </member>
        <member name="T:Sandbox.Engine.Voxels.MyPlanetShapeProvider.Cache">
            Coefficient cache.
            
            Bicubic sampling is computationally expensive because of the many floating point operations involved
            (mostly matrix multiplications which are 64 muls and 48 adds). To optimize that we cache the
            coefficients matrix (Gz) since it is re-used multiple times with different steps.
            
            
            Additionally we also compute bounds for each pixel based on the conversion from CR to Bézier control
            points (using the property that Bz curves lie within the convex hull of the controll points).
            
            Further we have performance tracking for this cache (via ::CacheStats).
        </member>
        <member name="T:Sandbox.Engine.Voxels.MyCsgBox">
            <summary>
            Creates simple axis aligned box with no noise applied to it. Meant to be simple
            example of how to implement CSG shape.
            
            NOTE: Using this box might not always produce sharp edges due to rasterization
            of distance function. They will be sharp when box aligns with raster grid (which
            is, simply put, for positions and sizes that are power of two).
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Voxels.MyCsgShapeBase">
            <summary>
            Shape used in CSG operations in MyCompositeShapeProvider.
            It can provide signed distance from the surface of the shape as culling if this signed distance
            will not be within certain range of the surface given a query range. For simple implementation,
            see MyCsgBox.
            
            For information on signed distance of some simple shapes go to http://www.iquilezles.org/www/articles/distfunctions/distfunctions.htm .
            In general, signed distance is distance to the closest point on the surface of the shape,
            with sign depending on whether it is outside (positive) or inside (negative).
            You can think of it as a step parameter for raymarching which determines how far and in which direction (forward +, backward -) you can move
            before hitting surface along the normalized ray direction from sampled point, assuming the origin is outside the shape.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyCsgShapeBase.Contains(VRageMath.BoundingBox@,VRageMath.BoundingSphere@,System.Single)">
            <summary>
            Test whether points sampled inside AABB would be affected by this CSG shape.
            Some shapes might only be able to perform efficient culling against sphere,
            so bounding sphere of AABB is also provided. AABB is usually more accurate though.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyCsgShapeBase.SignedDistance(VRageMath.Vector3@,System.Single,VRage.Noise.IMyModule,VRage.Noise.IMyModule)">
            <summary>
            Returns signed distance (or approximation, when exact result is not possible).
            mk:TODO: Both functions do exactly the same thing, but "SignedDistance" clamps the result to -1;1 range. Consider changing semantics so they can be combined.
            </summary>
            <param name="position">Sample position</param>
            <param name="lodVoxelSize">Normalization range. Resulting signed distance will be normalized such that range from -lodVoxelSize to lodVoxelSize falls into -1 to 1 range.</param>
            <param name="macroModulator">Noise function for modifying surface on large scale.</param>
            <param name="detailModulator">Noise function for modifying surface on small scale.</param>
            <returns>Signed distance normalized using lodVoxelSize.</returns>
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyCsgShapeBase.ShrinkTo(System.Single)">
            <param name="percentage">Percentage given as value in range 0 to 1.</param>
        </member>
        <member name="M:Sandbox.Engine.Voxels.IMyStorageDataProvider.ReadRange(Sandbox.Engine.Voxels.MyVoxelDataRequest@)">
            Read range of data.
            
            The data for the request, providing any optimizations that are requested in there.
        </member>
        <member name="M:Sandbox.Engine.Voxels.IMyStorageDataProvider.SupportedFlags">
            What optimizations this storage supports, the caller will never request for an optimization the storage does not support.
        </member>
        <member name="M:Sandbox.Engine.Voxels.IMyStorageDataProvider.GetMaterialAtPosition(VRageMath.Vector3D@)">
            Get the material at a given position in the voxel storage.
            
            Position is in storage local space.
        </member>
        <member name="M:Sandbox.Engine.Voxels.IMyStorageDataProvider.Intersect(VRageMath.LineD@,System.Double@,System.Double@)">
            Intersect line with storage.
            
            Returnas the tightest line interval that does intersect the storage.
            The precision of this method varies from storage to storage.
            
            The offsets are normalised.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyPlanetStorageProvider.ComputeCombinedMaterialAndSurface(VRageMath.Vector3,System.Boolean,Sandbox.Game.WorldEnvironment.MySurfaceParams@)">
            All mighty method for computing material, surface position and surface parameters in a single pass.
            
            If material and surface position are required this is the best way to obtain that information.
            
            When using the coefficient cache be sure to have it properly set up. (MyPlanetShapeProvider.PrepareCache())
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyPlanetStorageProvider.ComputeCombinedMaterialAndSurfaceExtended(VRageMath.Vector3,Sandbox.Engine.Voxels.MyPlanetStorageProvider.SurfacePropertiesExtended@)">
            All mighty method for computing material, surface position and surface parameters in a single pass.
            
            If material and surface position are required this is the best way to obtain that information.
            
            When using the coefficient cache be sure to have it properly set up. (MyPlanetShapeProvider.PrepareCache())
            
            This versio provides extremelly detailed data about a surface position and should be used for debugging only.
        </member>
        <member name="T:Sandbox.Engine.Voxels.MyPlanetStorageProvider.SurfacePropertiesExtended">
            Combined surface properties for the planet.
            
            This object stores very detailed information about a point in the planet's surface.
            
        </member>
        <member name="M:Sandbox.Engine.Voxels.IMyOctreeLeafNode.ReadRange(VRage.Voxels.MyStorageData,VRage.Voxels.MyStorageDataTypeFlags,VRageMath.Vector3I@,System.Int32,VRageMath.Vector3I@,VRageMath.Vector3I@,VRage.Voxels.MyVoxelRequestFlags@)">
            <param name="minInLod">Inclusive.</param>
            <param name="maxInLod">Inclusive.</param>
        </member>
        <member name="M:Sandbox.Engine.Voxels.IMyOctreeLeafNode.WriteRange(VRage.Voxels.MyStorageData,VRageMath.Vector3I@,VRageMath.Vector3I@,VRageMath.Vector3I@)">
            <param name="minInLod">Inclusive.</param>
            <param name="maxInLod">Inclusive.</param>
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyOctreeNode.SignedDistanceFilterInternal(System.Byte*,System.Int32)">
            <summary>
            Treats value as normalized signed distance in given LOD. Since LOD size doubles, distance halves for all cases except max value.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyOctreeNode.AverageValueFilterInternal(System.Byte*,System.Int32)">
            <summary>
            Chooses average of all values.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyOctreeNode.IsoSurfaceFilterInternal(System.Byte*,System.Int32)">
            <summary>
            Chooses value which is the closest to isosurface level. Whether
            from above, or from below is chosen depending on which is majority.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyOctreeNode.HistogramFilterInternal(System.Byte*,System.Int32)">
            <summary>
            Chooses the most common value.
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Voxels.MyOctreeNode.FilterFunction">
            <summary>
            Computes filtered value given 8 values in child.
            </summary>
            <param name="pData">Pointer to 8 values. Do NOT go further than that.</param>
        </member>
        <member name="M:Sandbox.Engine.Voxels.IMyStorage.ReadRange(VRage.Voxels.MyStorageData,VRage.Voxels.MyStorageDataTypeFlags,System.Int32,VRageMath.Vector3I@,VRageMath.Vector3I@)">
            <summary>
            Reads range of content and/or materials from specified LOD. If you want to write data back later, you must read LOD0 as that is the only writable one.
            </summary>
            <param name="lodVoxelRangeMin">Inclusive.</param>
            <param name="lodVoxelRangeMax">Inclusive.</param>
        </member>
        <member name="M:Sandbox.Engine.Voxels.IMyStorage.ReadRange(VRage.Voxels.MyStorageData,VRage.Voxels.MyStorageDataTypeFlags,System.Int32,VRageMath.Vector3I@,VRageMath.Vector3I@,VRage.Voxels.MyVoxelRequestFlags@)">
            Read from the storage accepting the optimizations provided in requestFlags.
            
            After this call requestFlags will inform of which optimization were in fact employed on the request.
        </member>
        <member name="M:Sandbox.Engine.Voxels.IMyStorage.WriteRange(VRage.Voxels.MyStorageData,VRage.Voxels.MyStorageDataTypeFlags,VRageMath.Vector3I@,VRageMath.Vector3I@)">
            <summary>
            Writes range of content and/or materials from cache to storage. Note that this can only write to LOD0 (higher LODs must be computed based on that).
            </summary>
            <param name="voxelRangeMin">Inclusive.</param>
            <param name="voxelRangeMax">Inclusive.</param>
        </member>
        <member name="M:Sandbox.Engine.Voxels.IMyStorage.Intersect(VRageMath.BoundingBox@,System.Boolean)">
            Check for intersection with a bounding box.
            
            The bounding box must be in local space (LLB corner origin).
            
            If lazy is true the method is faster but may return Intersects when the box is actually contained.
        </member>
        <member name="M:Sandbox.Engine.Voxels.IMyStorage.Intersect(VRageMath.LineD@)">
            Find the smallest continuous segment from the provided line that may intersect the storage
            (within some storage dependent margin).
            
            The coordinates must be in local space (LLB corner origin).
            
            The provided segment is replaced with the intersecting segment.
            
            This returns true when there is intersection, false otherwise.
        </member>
        <member name="M:Sandbox.Engine.Voxels.IMyStorage.Pin">
            Pin storage.
            
            Prevent the storage from closing while the pin is alive.
        </member>
        <member name="E:Sandbox.Engine.Voxels.IMyStorage.RangeChanged">
            <summary>
            please use RangeChanged on voxelbase if possible
            </summary>
        </member>
        <member name="P:Sandbox.Engine.Voxels.IMyStorage.Closed">
            Weather the storage is closed.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyStorageBase.Reset(VRage.Voxels.MyStorageDataTypeFlags)">
            <summary>
            Resets the data specified by flags to values from data provider, or default if no provider is assigned.
            </summary>
            <param name="dataToReset"></param>
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyOctreeStorage.Voxelize(VRage.Voxels.MyStorageDataTypeFlags)">
            <summary>
            For debugging/testing only! This can be very slow for large storage.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyRenderCellBuilder.EndMultiMaterial(Sandbox.Engine.Voxels.MyRenderCellBuilder.MultiMaterialHelper,System.Collections.Generic.List{VRage.Voxels.MyClipmapCellBatch})">
            <summary>
            Multimaterial vertices are not removing duplicities using indices.
            They just add indexing on top of duplicating vertices.
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Voxels.MyRenderCellBuilder.VertexInBatchLookup">
            <summary>
            Helper for mapping original vertex indices (within geometry cells?)
            to indices for vertex buffers. This is because render cell can
            require more batches even for single material (when number of
            vertices exceeds MAX_VERTICES_COUNT).
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Voxels.MyRenderCellBuilder.VertexInBatchLookup.m_idCounter">
            <summary>
            Incremented at the beginning of geometry cell and when ending single material.
            Compared to CalcCounter in Data for a vertex and when different, vertex is added to buffer and CalcCounter updated so it's not added again.
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Voxels.MyTileTexture`1">
            Textures used for tilesets (tiled texture joints maps).
            
            Each texture contains a set of tiles or cells, one for each combination of same textured
            cells in the corners of a square.
            
            This system allows for fast blending of textures on grid vertices.
        </member>
        <member name="F:Sandbox.Engine.Voxels.MyTileTexture`1.s_baseCellCoords">
            Cell coordinates indexed by cell corner values
            
            Corners are assigned to bits which index into the array
             bits:
              tl tr bl br
            
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyTileTexture`1.GetValue(System.Int32,VRageMath.Vector2I,`0@)">
            Get the value at a given position for a given configuration.
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyTileTexture`1.GetValue(System.Int32,VRageMath.Vector2,`0@)">
            Get the value at a given position for a given configuration.
        </member>
        <member name="M:Medieval.AI.MyAnimalBotActions.IdleDanger">
            <summary>
            Changes the state to an idle state sensing danger
            </summary>
        </member>
        <member name="F:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.MAX_TILES_TO_GENERATE">
            <summary>
            The maximum number of tiles that, each time, can be added to navmesh generation
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.InvalidateArea(VRageMath.BoundingBoxD)">
            <summary>
            Checks if the manager intersects the given OBB.
            </summary>
            <param name="areaAABB"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.ContainsPosition(VRageMath.Vector3D)">
            <summary>
            Checks if the given point is within the bounds of the navmesh
            </summary>
            <param name="position"></param>
            <returns>Returns true if the point is within bounds</returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.TilesToGenerate(VRageMath.Vector3D,VRageMath.Vector3D)">
            <summary>
            Saves the tiles that need to be generated
            </summary>
            <param name="initialPosition"></param>
            <param name="targetPosition"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.GetPathPoints(VRageMath.Vector3D,VRageMath.Vector3D,System.Collections.Generic.List{VRageMath.Vector3D}@,System.Boolean@)">
            <summary>
            Delivers the path and returns true if the path contains the target position
            </summary>
            <param name="initialPosition"></param>
            <param name="targetPosition"></param>
            <param name="path"></param>
            <param name="finalPath">The returned path is final - "targetPosition was reached" OR "cannot be reached"</param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.Update">
            <summary>
            Updates the navmesh manager by generating the next necessary tile and updates the debug mesh.
            Returns false if the manager is no longer valid - it was unloaded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.UnloadData">
            <summary>
            Clears the data
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.Heartbeat">
            <summary>
            Updates the heartbeat in order to keep the manager alive
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.CheckManagerHeartbeat">
            <summary>
            Returns true if the manager is still alive 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.GetPathDistance(System.Collections.Generic.List{VRageMath.Vector3D})">
            <summary>
            Returns the distance of the given path
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.Intersects(VRageMath.BoundingBoxD)">
            <summary>
            Checks if the manager intersects the given OBB.
            </summary>
            <param name="obb"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.TryGenerateTilesAroundPosition(VRageMath.Vector3D)">
            <summary>
            Generated tiles around position. EPIC COMMENT. I LIKE BANANAS (Who wrote this?!)
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.TryGenerateNeighbourTiles(Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.OBBCoords,System.Int32)">
            <summary>
            Generate tiles around the obbCoord. Each time, a bigger "circle" around it.
            </summary>
            <param name="obbCoord"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.TilesToGenerateInternal(VRageMath.Vector3D,VRageMath.Vector3D,System.Int32@)">
            <summary>
            Saves the tiles that need to be generated and returns the full intersected OBB list
            </summary>
            <param name="initialPosition"></param>
            <param name="targetPosition"></param>
            /// <param name="tilesAddedToGeneration"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.AddTileToGeneration(Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.OBBCoords)">
            <summary>
            Adds the file the be generation, if it wasn't generated before.
            </summary>
            <param name="obbCoord"></param>
            <returns>True if it was added to the list of the tiles to be generated</returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.GetPositionAtDistanceFromPlanetCenter(VRageMath.Vector3D,System.Double)">
            <summary>
            Returns a new position moved along the gravity vector by distance amount
            </summary>
            <param name="position"></param>
            <param name="distance"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.GetPlanet(VRageMath.Vector3D)">
            <summary>
            Returns the planet closest to the given position
            </summary>
            <param name="position">3D Point from where the search is started</param>
            <returns>The closest planet</returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.GenerateNextQueuedTile">
            <summary>
            Generates the next tile in the queue
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshManager.GenerateTile(Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.OBBCoords)">
            <summary>
            Generates a navmesh tile
            </summary>
            <param name="obbCoord"></param>
        </member>
        <member name="T:Sandbox.Game.AI.Pathfinding.IMyDestinationShape">
            <summary>
            A shape describing the destination of a pathfinding query. It is abstracted like this, so that the destination
            for an agent can be anything from a simple point to the space inside a building or a perimeter around an object.
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyDestinationShape.SetRelativeTransform(VRageMath.MatrixD)">
            <summary>
            Should set the relative transform (matrix, relative vector or whatever is needed) from the world position.
            This will then allow the shape to be updated using UpdateWorldTransform.
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyDestinationShape.UpdateWorldTransform(VRageMath.MatrixD)">
            <summary>
            Should update world transform of this shape from the transform previously saved by SetRelativeTransform
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyDestinationShape.PointAdmissibility(VRageMath.Vector3D,System.Single)">
            <summary>
            Should return the distance of the given point from the ideal position in the destination shape.
            If the point is outside of the destination shape, PositiveInfinity should be returned.
            Tolerance can be provided to allow points that lie further from the shape.
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyDestinationShape.GetClosestPoint(VRageMath.Vector3D)">
            <summary>
            Returns the point from the shape that is closest to the query point
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyDestinationShape.GetBestPoint(VRageMath.Vector3D)">
            <summary>
            Returns the ideal point towards the pathfinding should steer when starting from the query point.
            The difference between GetClosestPoint and this method can be shown on an example of a sphere shape:
            For outside points, GetClosestPoint will return points on the sphere's surface, whereas this method will
            always return the center of the sphere.
            
            Note that for more complicated shapes (e.g. donut), this method returns different point that GetCenter.
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyDestinationShape.GetDestination">
            <summary>
            Returns center of the shape for pathfinding heuristics
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Navigation.MyBotNavigation.Goto(Sandbox.Game.AI.Pathfinding.IMyDestinationShape,VRage.Game.Entity.MyEntity)">
            <summary>
            Tells the bot to go to the given world coordinate.
            If the relative entity is set, the coordinate is updated automatically as the entity moves
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Navigation.MyBotNavigation.Flyto(VRageMath.Vector3D,VRage.Game.Entity.MyEntity)">
            <summary>
            Tells the bot to fly to the given world coordinate.
            If the relative entity is set, the coordinate is updated automatically as the entity moves
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Navigation.MyBotNavigation.Stop">
            <summary>
            Stop the bot from moving.
            </summary>
        </member>
        <member name="P:Sandbox.Game.AI.Navigation.MyBotNavigation.ForwardVector">
            <summary>
            Current wanted forward vector
            </summary>
        </member>
        <member name="P:Sandbox.Game.AI.Navigation.MyBotNavigation.UpVector">
            <summary>
            Current wanted up vector
            </summary>
        </member>
        <member name="P:Sandbox.Game.AI.Navigation.MyBotNavigation.Speed">
            <summary>
            Current wanted Speed
            </summary>
        </member>
        <member name="P:Sandbox.Game.AI.Navigation.MyBotNavigation.Navigating">
            <summary>
            Whether the navigation is moving the bot towards a target. Beware: the bot could still be stuck
            </summary>
        </member>
        <member name="P:Sandbox.Game.AI.Navigation.MyBotNavigation.PositionAndOrientation">
            <summary>
            Current position and orientation of the controlled entity
            </summary>
        </member>
        <member name="T:Sandbox.Game.AI.Pathfinding.IMyPathfindingLog">
            <summary>
            For BW compatibility only to allow separation of Cestmir's pathfinding
            </summary>
        </member>
        <member name="T:Sandbox.Game.AI.Pathfinding.IMyHighLevelComponent">
            <summary>
            This class contains information about the high-level components of a navigation group.
            
            High-level navigation groups should not know about the implementation of their low-level counterparts, so this
            is done as an interface that the specific navigation groups can implement as they see fit.
            </summary>
        </member>
        <member name="T:Sandbox.Game.AI.Pathfinding.IMyPath">
            <summary>
            An interface for describing a path for an agent
            It can be used by the bot navigation to steer the bot along a path, regardless of the underlying pathfinding implementation.
            This is what you should return from a pathfinding system to abstract away the implementation details of that system.
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyPath.Invalidate">
            <summary>
            Will be called on the path if it should be invalidated for any reason.
            Also, it the path is no longer needed, it should be invalidated to prevent holding references etc.
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyPath.GetNextTarget(VRageMath.Vector3D,VRageMath.Vector3D@,System.Single@,VRage.ModAPI.IMyEntity@)">
            <summary>
            Returns the next target along the path, provided that the agent is currently on the given position
            </summary>
            <param name="position">Current position of the agent</param>
            <param name="target">Next target for the agent to go to</param>
            <param name="targetRadius">Destination radius allowing some tolerance for steering</param>
            <param name="relativeEntity">If the target is relative to an entity, the entity will be returned in this argument (currently unused).</param>
            <returns>True if the next target was successfully found</returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyPath.Reinit(VRageMath.Vector3D)">
            <summary>
            Reinitializes the path, starting from the given position. The target stays the same.
            The purpose of this is to try to move towards the goal again if PathCompleted returns true, but the target moved while going towards it.
            </summary>
            <param name="position">The current position from which we want the pathfinding to be performed</param>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyPath.DebugDraw">
            <summary>
            Gets called every frame for the purposes of debug draw
            </summary>
        </member>
        <member name="P:Sandbox.Game.AI.Pathfinding.IMyPath.Destination">
            <summary>
            Current destination (goal) for the path 
            </summary>
        </member>
        <member name="P:Sandbox.Game.AI.Pathfinding.IMyPath.EndEntity">
            <summary>
            Entity towards which the path is going
            </summary>
        </member>
        <member name="P:Sandbox.Game.AI.Pathfinding.IMyPath.IsValid">
            <summary>
            Says, whether the path is in a valid and consistent state.
            As an example, a path can be invalid when no path could be found or when the underlying data structues changed while using the path
            </summary>
        </member>
        <member name="P:Sandbox.Game.AI.Pathfinding.IMyPath.PathCompleted">
            <summary>
            Will be true when the previously set path is successfully completed
            </summary>
        </member>
        <member name="T:Sandbox.Game.AI.Pathfinding.IMyPathfinding">
            <summary>
            A gateway to all the pathfinding tasks and queries
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyPathfinding.FindPathGlobal(VRageMath.Vector3D,Sandbox.Game.AI.Pathfinding.IMyDestinationShape,VRage.Game.Entity.MyEntity)">
            <summary>
            Finds a path from the world-space point begin to the given destination shape.
            </summary>
            <param name="begin">From where to do the pathfinding</param>
            <param name="end">The destination shape for this pathfinding query</param>
            <param name="relativeEntity">If not null, the begin parameter is not in world space, but in local space relative to this entity</param>
            <returns>The found path if any, null otherwise</returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyPathfinding.ReachableUnderThreshold(VRageMath.Vector3D,Sandbox.Game.AI.Pathfinding.IMyDestinationShape,System.Single)">
            <summary>
            Checks, whether the given destination is reachable, but stops the search after some threshold distance.
            </summary>
            <param name="begin">Where to start the search from</param>
            <param name="end">The destination for the reachability query</param>
            <param name="thresholdDistance">The distance after which the query should stop</param>
            <returns>True if the destination is reachable, false if it could not be found after the given threshold distance</returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyPathfinding.GetPathfindingLog">
            <summary>
            For BW compatibility only. You most certainly don't need to implement this!
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyPathfinding.Update">
            <summary>
            Recieves periodic updates from the game loop
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyPathfinding.UnloadData">
            <summary>
            Gets called when the MyAIComponent is unloaded
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.IMyPathfinding.DebugDraw">
            <summary>
            All the debug draw code should go here
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyExternalPathfinding.GetPathfindingLog">
            <summary>
            Backwards compatibility
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyExternalPathfinding.DebugDrawPhysicalShapes">
            <summary>
            Draws physical mesh
            </summary>
        </member>
        <member name="F:Sandbox.Game.AI.Pathfinding.MyExternalPathfinding.m_drawNavmeshID">
            <summary>
            Draws happy green mesh
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyExternalPathfinding.GetMiddleOBBPoints(VRageMath.MyOrientedBoundingBoxD,VRageMath.Vector3*@)">
            <summary>
            Just for debuggggggg
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyExternalPathfinding.DrawTerrainLimits(Sandbox.Game.Entities.MyPlanet,VRageMath.MyOrientedBoundingBoxD)">
            <summary>
            Just for debuggggggg
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavigationMesh.ErasePools">
            <summary>
            Gets rid of the vertex and edge preallocation pools. You MUST NOT add any more triangles or edges after calling this method.
            It is here only to save memory when the mesh won't be modified any more.
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyGridNavigationMesh.FindPath(VRageMath.Vector3,VRageMath.Vector3)">
            <summary>
            All coords should be in the grid local coordinates
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavigationInputMesh.GetWorldVertices(System.Single,VRageMath.Vector3D,VRageMath.MyOrientedBoundingBoxD,System.Collections.Generic.List{VRageMath.BoundingBoxD},System.Collections.Generic.List{Sandbox.Game.Entities.MyVoxelMap})">
            <summary>
            Gets the ground vertices and the target grid vertices
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavigationInputMesh.AddGridVerticesInsideOBB(Sandbox.Game.Entities.MyCubeGrid,VRageMath.MyOrientedBoundingBoxD)">
            <summary>
            Adds the vertices from the grid blocks that are inside the given OBB
            </summary>
            <param name="grid"></param>
            <param name="obb"></param>
            <param name="vertices"></param>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavigationInputMesh.AddVoxelVertices(Sandbox.Game.Entities.MyVoxelMap,System.Single,VRageMath.Vector3D,VRageMath.MyOrientedBoundingBoxD,System.Collections.Generic.List{VRageMath.BoundingBoxD})">
            <summary>
            Adds the vertices from the physical body (rock) that is inside the given OBB
            </summary>
            <param name="voxelMap"></param>
            <param name="border"></param>
            <param name="originPosition"></param>
            <param name="obb"></param>
            <param name="bbList"></param>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavigationInputMesh.SetTerrainLimits(VRageMath.MyOrientedBoundingBoxD@)">
            <summary>
            Changes the given OBB so it is Y bounded by the range where surface may exist
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavigationTriangle.IsEdgeVertexDangerous(System.Int32,System.Boolean)">
            <summary>
            Whether it's dangerous for the bot to navigate close to this edge
            </summary>
        </member>
        <member name="P:Sandbox.Game.AI.Pathfinding.MyNavigationTriangle.Index">
            <summary>
            Face index of this triangle in the winged-edge mesh
            </summary>
        </member>
        <member name="T:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs">
            <summary>
            Class that contains the OBBs that are used to obtain tiled mesh (ground and grid), used by Pathfinding
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.GetOBB(System.Int32,System.Int32)">
            <summary>
            Return the OBB at the specific coordinate or null, if is out of bounds
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.GetOBB(VRageMath.Vector3D)">
            <summary>
            Return the OBB at the specific position, or null, if is out of bounds
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.GetOBBCoord(System.Int32,System.Int32)">
            <summary>
            Return the OBB coord at the specific coordinate or null, if is out of bounds
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.GetOBBCoord(VRageMath.Vector3D)">
            <summary>
            Return the OBB coord at the specific position, or null, if is out of bounds
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.GetIntersectedOBB(VRageMath.LineD)">
            <summary>
            Returns a list of OBBs intersected by a line
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.DebugDraw">
            <summary>
            Debug draws the OBBs
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.Initialize(VRageMath.Vector3D,VRageMath.Vector3D)">
            <summary>
            Initializes the matrix of OBBs
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.Fill(System.Double)">
            <summary>
            Fills OBBs matrix
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.FillOBBHorizontalLine(VRageMath.MyOrientedBoundingBoxD,VRageMath.Vector2I,System.Double)">
            <summary>
            Fills a "horizontal" line of OBBs
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.GetCenterOBB(VRageMath.Vector3D,VRageMath.Vector3D,System.Double@)">
            <summary>
            Returns the initial OBB, which is below the initialPoint (the "side" points are the ones that touch surface)
            Returns also the angle to the others OBB centers, in radians
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.NewTransformedPoint(VRageMath.Vector3D,VRageMath.Vector3,System.Single)">
            <summary>
            Returns a transformed point, rotated angle radians around rotation vector
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.CreateOBB(VRageMath.Vector3D,VRageMath.Vector3D)">
            <summary>
            Creates and returns an OBB with the center at the specified position, with the gravity vector from that point and with the given perpendicular vector
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.GetBaseOBB">
            <summary>
            Returns the base of the OBBs as new OBB, connecting its 4 corner bottom points.
            </summary>
            <returns>The base as a OBB</returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.SetNeigboursCenter(System.Double)">
            <summary>
            Sets the 8 neighbour center points
            </summary>
            <param name="angle"></param>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.GetOBBCorner(VRageMath.MyOrientedBoundingBoxD,Sandbox.Game.AI.Pathfinding.MyNavmeshOBBs.OBBCorner)">
            <summary>
            Returns the specified corner from the OBB.
            </summary>
            <param name="obb"></param>
            <param name="corner"></param>
            <returns>Returns the </returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyRDPath.GetClosestPlanet(VRageMath.Vector3D)">
            <summary>
            Returns the planet closest to the given position
            </summary>
            <param name="position">3D Point from where the search is started</param>
            <returns>The closest planet</returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyRDPathfinding.GetPathfindingLog">
            <summary>
            Backwards compatibility
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyRDPathfinding.GetPath(Sandbox.Game.Entities.MyPlanet,VRageMath.Vector3D,VRageMath.Vector3D)">
            <summary>
            Returns the path between given positions.
            </summary>
            <param name="initialPosition"></param>
            <param name="targetPosition"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyRDPathfinding.AddToTrackedGrids(Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Adds to the tracked grids so the changes to it are followed
            </summary>
            <param name="cubeGrid"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyRDPathfinding.InvalidateArea(VRageMath.BoundingBoxD)">
            <summary>
            Invalidates intersected tiles of navmesh managers, if they were generated
            </summary>
            <param name="areaBox"></param>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyRDPathfinding.SetDrawNavmesh(System.Boolean)">
            <summary>
            Enables or disables the drawing of the navmesh.
            </summary>
            <param name="drawNavmesh"></param>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyRDPathfinding.GetPlanet(VRageMath.Vector3D)">
            <summary>
            Returns the planet closest to the given position
            </summary>
            <param name="position">3D Point from where the search is centered</param>
            <returns>The closest planet</returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyRDPathfinding.AreaChanged(Sandbox.Game.Entities.MyPlanet,VRageMath.BoundingBoxD)">
            <summary>
            Signals the navigation that the area changed and needs update.
            </summary>
            <param name="areaBox"></param>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyRDPathfinding.GetBestPathFromManagers(Sandbox.Game.Entities.MyPlanet,VRageMath.Vector3D,VRageMath.Vector3D)">
            <summary>
            Returns the best path from managers according to both initial and target positions
            </summary>
            <param name="planet"></param>
            <param name="initialPosition"></param>
            <param name="targetPosition"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyRDPathfinding.CreateManager(VRageMath.Vector3D,System.Nullable{VRageMath.Vector3D})">
            <summary>
            Creates a new manager centered in targetPosition and adds it to the list of managers
            </summary>
            <param name="initialPosition"></param>
            <param name="targetPosition"></param>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyRDPathfinding.GetRecastOptions(Sandbox.Game.Entities.Character.MyCharacter)">
            <summary>
            Returns the Recast options to the navmesh is generating appropriately to this character
            </summary>
            <param name="character">The character </param>
            <returns>The options for navmesh creation</returns>
        </member>
        <member name="T:Sandbox.Game.AI.Pathfinding.MyRDPathfinding.RequestedPath">
            <summary>
            Class for the debug drawing of the path
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyVoxelHighLevelHelper.OpenNewCell(VRage.Voxels.MyCellCoord)">
            <summary>
            Begins processing a voxel geometry cell
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyVoxelHighLevelHelper.CloseCell">
            <summary>
            Ends processing the currently open cell
            </summary>
        </member>
        <member name="M:Sandbox.Game.AI.Pathfinding.MyVoxelNavigationMesh.FindPath(VRageMath.Vector3,VRageMath.Vector3)">
            <summary>
            All coords should be in the voxel local coordinates
            </summary>
        </member>
        <member name="T:Sandbox.Game.AI.Pathfinding.MyNavmeshComponents">
            <summary>
            A helper class to store mapping from triangles (represented by their int index)
            to components (represented by their int index) and cells (ulong), given following conditions:
            
            a) Each triangle belongs to a cell, which is assigned a ulong coordinate, and to a component
            b) A component cannot span more cells - that is, if two triangles are in the same component, they must also be in the same cell
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Inventory.MyTriggerAggregate.TriggerCount">
            <summary>
            Returns number of inventories of MyInventory type contained in this aggregate
            </summary>
        </member>
        <member name="T:Sandbox.Game.GameSystems.MyDroneStrafeBehaviour">
            <summary>
            Improved strafe drone behavior
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.FriendlyWithBlock(Sandbox.Game.Entities.MyCubeBlock)">
            <summary>
            Whether the two blocks are friendly. This relation is base on their owners and is symmetrical
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyCubeBlock.m_IDModule">
            <summary>
            Detectors contains inverted matrices
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyCubeBlock.SubBlocks">
            <summary>
            Map from dummy name to subblock (subgrid, note that after grid split the subblock instance will be the same)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyCubeBlock.m_loadedSubBlocks">
            <summary>
            Loaded subblocks from object builder. Cached for getting grid entity when loaded.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.OnConstraintAdded(Sandbox.Game.Entities.GridLinkTypeEnum,VRage.ModAPI.IMyEntity)">
            <summary>
            Called by constraint owner
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.OnConstraintRemoved(Sandbox.Game.Entities.GridLinkTypeEnum,VRage.ModAPI.IMyEntity)">
            <summary>
            Called by constraint owner
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.ConnectionAllowed(VRageMath.Vector3I@,VRageMath.Vector3I@,Sandbox.Definitions.MyCubeBlockDefinition)">
            <summary>
            Returns true if this block can connect to another block (of the given type) in the given position.
            This is called only if CheckConnectionAllowed == true.
            If this method would return true for any position, set CheckConnectionAllowed to false to avoid
            unnecessary overhead. It is the block's responsibility to call CubeGrid.UpdateBlockNeighbors every time the
            conditions that are checked by this method change.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.ConnectionAllowed(VRageMath.Vector3I@,VRageMath.Vector3I@,VRageMath.Vector3I@,Sandbox.Definitions.MyCubeBlockDefinition)">
            <summary>
            Whether connection is allowed to any of the positions between otherBlockMinPos and otherBlockMaxPos (both inclusive).
            Default implementation calls ConnectionAllowed(ref Vector3I otherBlockPos, ref Vector3I faceNormal) in a for loop.
            Override this in a subclass if this is not needed (for example, because all calls would return the same value for the same face)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.OnBuildSuccess(System.Int64)">
            <summary>
            Method called when a block has been built (after adding to the grid).
            This is called right after placing the block and it doesn't matter whether
            it is fully built (creative mode) or is only construction site.
            Note that it is not called for blocks which do not create FatBlock at that moment.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.OnRemovedByCubeBuilder">
            <summary>
            Method called when user removes a cube block from grid. Useful when block
            has to remove some other attached block (like motors).
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.OnRegisteredToGridSystems">
            <summary>
            Called at the end of registration from grid systems (after block has been registered).
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.OnUnregisteredFromGridSystems">
            <summary>
            Called at the end of unregistration from grid systems (after block has been unregistered).
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.ContactPointCallback(Sandbox.Game.Entities.Cube.MyGridContactInfo@)">
            <summary>
            Return true when contact is valid
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.OnDestroy">
            <summary>
            Called when block is destroyed before being removed from grid
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.OnModelChange">
            <summary>
            Called when the model referred by the block is changed
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.OnCubeGridChanged(Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Notifies about grid change with old grid in parameter (new grid is available in property).
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.SubBlocksInitialized(System.Boolean)">
            <summary>
            Function called when all subblocks have been initialized.
            </summary>
            <param name="spawned">true if subblocks have been just spawned on server, otherwise false (load)</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.RemoveSubBlock(System.String,System.Boolean)">
            <summary>
            Removes subblock with the given name from the block. 
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.GetBlockGridOffset(Sandbox.Definitions.MyCubeBlockDefinition)">
            <summary>
            Returns block offset in spawned grid.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBlock.GetSubBlockDataFromDummy(Sandbox.Definitions.MyCubeBlockDefinition,System.String,VRageRender.Import.MyModelDummy,System.Boolean,Sandbox.Definitions.MyCubeBlockDefinition@,VRageMath.MatrixD@,VRageMath.Vector3@)">
            <summary>
            Returns subblock data from dummy, subblock matrix can be offset (according to useOffset parameter) so the dummy position output is also provided.
            </summary>
            <returns>true when dummy is subblock otherwise false</returns>
        </member>
        <member name="P:Sandbox.Game.Entities.MyCubeBlock.IsFunctional">
            <summary>
            Shortcut to component stack property.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyCubeBlock.SubBlockName">
            <summary>
            Name of subblock (key in the owner's subblocks map).
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyCubeBlock.OwnerBlock">
            <summary>
            If the block is subblock then OwnerBlock is set to block which owns (spawns) subblocks (subgrids)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyTerminalBlock.RaiseCustomNameChanged">
            <summary>
            Call this when you change the name
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyTerminalBlock.RaisePropertiesChanged">
            <summary>
            Call this when you change detailed info or other terminal properties
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyTerminalBlock.RaiseVisibilityChanged">
            <summary>
            Call this when you change the properties that modify the visibility of this block's controls
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyTerminalBlock.CreateTerminalControls">
            <summary>
            Control creation was moved from the static ctor into this static function.  Control creation should still be static, but static ctors
            only ever get called once, which means we can never modify these controls (remove), since they will be removed forever.  All classes
            that inherit MyTerminalBlock should put terminal control creation in a function called CreateTerminalControls, as MyTerminalControlFactory 
            will properly ensure their base classes' controls are added in.  I can't make this virtual because terminal controls don't deal with instances
            directly (this should probably change)
            
            GR: Had to change this from static due to parallelization issues with multuple threads. Now it should run only once.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Cube.MyTerminalBlock.CustomName">
            <summary>
            Name in terminal
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Cube.MyTerminalBlock.DetailedInfo">
            <summary>
            Detailed text in terminal (on right side)
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Cube.MyTerminalBlock.CustomInfo">
            <summary>
            Moddable part of detailed text in terminal.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.IMyControllableEntity.BeginShoot(Sandbox.Game.Entities.MyShootActionEnum)">
            <summary>
            This will be called locally to start shooting with the given action
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.IMyControllableEntity.EndShoot(Sandbox.Game.Entities.MyShootActionEnum)">
            <summary>
            This will be called locally to start shooting with the given action
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.IMyControllableEntity.OnBeginShoot(Sandbox.Game.Entities.MyShootActionEnum)">
            <summary>
            This will be called back from the sync object both on local and remote clients
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.IMyControllableEntity.OnEndShoot(Sandbox.Game.Entities.MyShootActionEnum)">
            <summary>
            This will be called back from the sync object both on local and remote clients
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyShipController.raycaster">
            <summary>
            Raycaster used for showing block info when active.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyShipController.HandleBuldingMode">
            <summary>
            Handles logic related with 'building from cockpit'.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.UseObject.IMyUsableEntity">
            <summary>
            Simple interface for entities so they don't have to implement IMyUseObject.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.UseObject.IMyUsableEntity.CanUse(VRage.Game.Entity.UseObject.UseActionEnum,Sandbox.Game.Entities.IMyControllableEntity)">
            <summary>
            Test use on server and based on results sends success or failure
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyTriggerManipulator.SelectClosest(VRageMath.Vector3D)">
            <summary>
            Selects the closest trigger to provided position.
            </summary>
            <param name="position">Considered position.</param>
        </member>
        <member name="P:Sandbox.Game.GameSystems.MyTriggerManipulator.CurrentPosition">
            <summary>
            Used to change current position and obtain new quary of triggers.
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.MyTriggerManipulator.CurrentQuery">
            <summary>
            Accessor for quaries triggers.
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.MyTriggerManipulator.SelectedTrigger">
            <summary>
            Selected trigger.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Gui.MyHudQuestlog.HighlightChanges">
            <summary>
            Enable to blink animation when value is changed.
            Default true.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudQuestlog.CleanDetails">
            <summary>
            Cleanup detail
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudQuestlog.AddDetail(System.String,System.Boolean)">
            <summary>
            Add value to next row of quest details.
            Rotate over available rows.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Sandbox.Game.Gui.MyHudQuestlog.Visible">
            <summary>
            Set Visibility for Questlog
            </summary>
        </member>
        <member name="M:Sandbox.Game.MyCampaignManager.PublishActive">
            <summary>
            Runs publish process for active campaign.
            </summary>
        </member>
        <member name="M:Sandbox.Game.MyCampaignManager.SwitchCampaign(System.String,System.Boolean,System.UInt64,System.String)">
            <summary>
             Changes the manager state to given campaign.
            </summary>
            <param name="name"></param>
            <param name="isVanilla"></param>
            <param name="publisherFileId">0 is default value or local mod value.</param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.MyCampaignManager.DownloadCampaign(System.UInt64)">
            <summary>
            Tries to download and register mod of given fileId.
            </summary>
            <param name="publisherFileId"></param>
        </member>
        <member name="P:Sandbox.Game.Screens.Helpers.MyGuiControlContentButton.Title">
            <summary>
            Changes titlebar content.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Screens.Helpers.MyGuiControlContentButton.IsWorkshopMod">
            <summary>
            Adds respective icon and disables IsLocalMod.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Screens.Helpers.MyGuiControlContentButton.IsLocalMod">
            <summary>
            Adds respective icon and disables IsWorkshopMod.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Screens.MyGuiScreenHighlight">
            <summary>
            This screen serves the highlighting purposes. Instantiate it through the static methods only.
            Should directly overlay the screen of the referenced controls.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Screens.MyGuiScreenHighlight.HighlightControls(Sandbox.Game.Screens.MyGuiScreenHighlight.MyHighlightControl[])">
            <summary>
            Use this method to highlight the set of provided controls and their tooltips.
            </summary>
            <param name="controls">Array of controls to be highlighted.</param>
            <param name="color">Color of the highlight.</param>
        </member>
        <member name="M:Sandbox.Game.Screens.MyGuiScreenHighlight.HighlightControl(Sandbox.Game.Screens.MyGuiScreenHighlight.MyHighlightControl)">
            <summary>
            This this method to highlight a single control and its tooltip.
            </summary>
            <param name="control">Control to be highlighted.</param>
            <param name="color">Color of the highlight.</param>
        </member>
        <member name="T:Sandbox.Game.SessionComponents.MyCampaignSessionComponent">
            <summary>
            Maintains a state machine that holds campain progress.
            This session component is shared with newly loaded
            campaign worlds and serialized on session saving.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.MyDoorBase">
            <summary>
            GR: Added this class to be used as a base for all door classes. Added only very basic functionallity no new definitions or object builders.
            The main issue was that door actions (open / close) couldn't be used in groups because they were not inheriting from same class.
            Instead were inheriting directly from MyFunctionalBlock so this class is used in between for common attributes.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Blocks.MyMechanicalConnectionBlockBase.CheckVelocities">
            <summary>
            Checks grids linear velocity and welds connection if over threshold
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Blocks.MyMechanicalConnectionBlockBase.WeldGroup(System.Boolean)">
            <summary>
            Welds connection, always ends with m_welded == true
            </summary>
            <param name="force"></param>
        </member>
        <member name="M:Sandbox.Game.Entities.Blocks.MyMechanicalConnectionBlockBase.BreakLinks(Sandbox.Game.Entities.MyCubeGrid,Sandbox.Game.Entities.Blocks.MyAttachableTopBlockBase)">
            <summary>
            Breaks links and unregisters all events
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Blocks.MyMechanicalConnectionBlockBase.State.TopBlockId">
            <summary>
            <para>No value - detached </para>
            <para>0 - try to attach </para>
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.Components.MyCharacterComponent.NeedsUpdateAfterSimulation">
            <summary>
            This set's flag for update. Set it after add to container!
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.Components.MyCharacterComponent.NeedsUpdateAfterSimulation10">
            <summary>
            This set's flag for update. Set it after add to container!
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.Components.MyCharacterComponent.NeedsUpdateBeforeSimulation100">
            <summary>
            This set's flag for update. Set it after add to container!
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.Components.MyCharacterComponent.NeedsUpdateBeforeSimulation">
            <summary>
            This set's flag for update. Set it after add to container!
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Character.Components.MyCharacterWeaponPositionComponent">
            <summary>
            Weapon positioning.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.Components.MyCharacterWeaponPositionComponent.Init(VRage.Game.MyObjectBuilder_Character)">
            <summary>
            Initialize from character object builder.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.Components.MyCharacterWeaponPositionComponent.Update(System.Boolean)">
            <summary>
            Update weapon position, either logical and graphical.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.Components.MyCharacterWeaponPositionComponent.UpdateAndGetWeaponVariantWeights(Sandbox.Definitions.MyHandItemDefinition)">
            <summary>
            Update and get current weights of the weapon variants.
            </summary>
            <returns>Weights. Normalized.</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.Components.MyCharacterWeaponPositionComponent.UpdateGraphicalWeaponPosition">
            <summary>
            Update shown position of the weapon.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.Components.MyCharacterWeaponPositionComponent.ApplyWeaponBouncing(Sandbox.Definitions.MyHandItemDefinition,VRageMath.MatrixD@,System.Single)">
            <summary>
            Apply bouncing movement on weapon.
            </summary>
            <param name="handItemDefinition">definition of hand item</param>
            <param name="weaponMatrixLocal">current weapon matrix (character local space)</param>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.Components.MyCharacterWeaponPositionComponent.UpdateLogicalWeaponPosition">
            <summary>
            Update logical weapon position (model of the weapon will be placed there, bullet will spawn on logical position).
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.Components.MyCharacterWeaponPositionComponent.UpdateIkTransitions">
            <summary>
            Update interpolation parameters.
            </summary>
        </member>
        <member name="T:Sandbox.Game.EntityComponents.MyModStorageComponent">
            <summary>
            Component that stores custom mod data for an entity. Shared by all mods.
            NOTE: Create an EntityComponents.sbc with your mod's GUIDs to make sure data is saved.
            This allows data to remain in the world file until the user removes the mod.
            </summary>
        </member>
        <member name="P:Sandbox.Game.EntityComponents.MyModStorageComponent.Storage">
            <summary>
            Store custom mod data here. Use a GUID unique to your mod. Use only system types, not custom types in mod script or game.
            </summary>
            <remarks>This is not synced.
            Caution, this contains data for <i>all</i> mods.
            It is recommended to use the appropriate methods instead (GetValue, TryGetValue, SetValue, RemoveValue).
            </remarks>
        </member>
        <member name="T:Sandbox.Game.Gui.MyAIDebugInputComponent">
            <summary>
            AI Debug Input class (base on Cestmir Debug Input)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyAIDebugInputComponent.GetTargetPosition">
            <summary>
            Obtain position where the player is aiming/looking at.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.IMyGunObject`1">
            <summary>
            This can be hand held weapon (including welders and drills) as well as 
            weapons on ship (including ship drills).
            </summary>
            
        </member>
        <member name="M:Sandbox.Game.Entities.IMyGunObject`1.CanShoot(Sandbox.Game.Entities.MyShootActionEnum,System.Int64,Sandbox.Game.Entities.MyGunStatusEnum@)">
            <summary>
            Should return true if and only if the gun would be able to shoot using the given shoot action.
            This method should not do any side-effects such as play sounds or create particle FX.
            </summary>
            <param name="action">The shooting action to test</param>
            <param name="status">Detailed status of the gun, telling why the gun couldn't perform the given shoot action</param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.Entities.IMyGunObject`1.Shoot(Sandbox.Game.Entities.MyShootActionEnum,VRageMath.Vector3,System.Nullable{VRageMath.Vector3D},System.String)">
            <summary>
            Perform the shoot action according to the action parameter.
            This method should only be called when CanShoot returns true for the given action!
            </summary>
            <param name="action">The shooting action to perform</param>
            <param name="overrideWeaponPos">Changes weapon position, world space.</param>
            <param name="direction">The prefered direction of shooting</param>
        </member>
        <member name="M:Sandbox.Game.Entities.IMyGunObject`1.BeginFailReaction(Sandbox.Game.Entities.MyShootActionEnum,Sandbox.Game.Entities.MyGunStatusEnum)">
            <summary>
            Perform a fail reaction to begin shoot that is shown on all clients (e.g. fail sound, etc.)
            </summary>
            <param name="action">The shooting action, whose begin shoot failed</param>
            <param name="status">Why the begin shoot failed</param>
        </member>
        <member name="P:Sandbox.Game.Entities.IMyGunObject`1.IsShooting">
            <summary>
            Should return true when the weapon is shooting projectiles and other classes should react accordingly (i.e.apply backkick force etc.)
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.IMyGunObject`1.ShootDirectionUpdateTime">
            <summary>
            Zero means that the gun should not update shoot direction at all
            </summary>
            <returns>Minimal time interval in milliseconds between two direction updates</returns>
        </member>
        <member name="P:Sandbox.Game.Entities.IMyGunBaseUser.AmmoInventory">
            <summary>
            The inventory in which the weapon searches for additional ammo
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.IMyGunBaseUser.PhysicalItemId">
            <summary>
            The physical item that is being searched for in the weapon inventory. Can be ignored if WeaponInventory is null
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.IMyGunBaseUser.WeaponInventory">
            <summary>
            The inventory in which the weapon searches for it's object builder (e.g. an automatic rifle in character's inventory)
            Can be null if the object builder is not to be searched
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Cube.CubeBuilder.MyCubeBuilderState">
            <summary>
            Class that handles cube builder state.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.CubeBuilder.MyCubeBuilderState.RotationsByDefinitionHash">
            <summary>
            Store last rotation for each block definition.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.CubeBuilder.MyCubeBuilderState.StageIndexByDefinitionHash">
            <summary>
            No idea what this one is.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.CubeBuilder.MyCubeBuilderState.CurrentBlockDefinitionStages">
            <summary>
            Block definition stages.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.CubeBuilder.MyCubeBuilderState.m_definitionWithVariants">
            <summary>
            Block definitions with variants.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.CubeBuilder.MyCubeBuilderState.m_cubeSizeMode">
            <summary>
            Indicates what build mode is on (small or big grid)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.CubeBuilder.MyCubeBuilderState.ChooseComplementBlock">
            <summary>
            Chooses same cube but for different grid size
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.CubeBuilder.MyCubeBuilderState.HasComplementBlock">
            <summary>
            Checks if there is complementary block available
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.CubeBuilder.MyCubeBuilderState.SetCubeSize(VRage.Game.MyCubeSize)">
            <summary>
            Sets cube size mode.
            </summary>
            <param name="newCubeSize">New cube size mode.</param>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.CubeBuilder.MyCubeBuilderState.UpdateComplementBlock">
            <summary>
            Updates Current block definition with current cube size mode.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Cube.CubeBuilder.MyCubeBuilderState.StartBlockDefinition">
            <summary>
            Block definition set on activation of cube builder.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Cube.CubeBuilder.MyCubeBuilderState.CubeSizeMode">
            <summary>
            Current cube size mode.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Components.MyTriggerComponent.UpdateInternal">
            <summary>
            Override this function to set custom update behaviour.
            Call base at first because it queries objects if DoQuery is set.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Components.MyTriggerComponent.Dispose">
            <summary>
            Override for custom trigger disposal before removing.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Components.MyTriggerComponent.QueryEvaluator(VRage.Game.Entity.MyEntity)">
            <summary>
            Override to discard query results of your choice.
            </summary>
            <param name="entity"></param>
            <returns>True for valid entities.</returns>
        </member>
        <member name="P:Sandbox.Game.Components.MyTriggerComponent.Center">
            <summary>
            Trigger BB center position.
            </summary>
        </member>
        <member name="T:Sandbox.Game.EntityComponents.MyEntityReferenceComponent">
            <summary>
            Reference counting component for entities.
            
            Allows simplified management of short lived entities that may be shared amongst systems.
            
            The count is initially 0 so the first referencee becomes the owner of the
            entity (this is sometimes called a floating reference).
            </summary>
        </member>
        <member name="M:Sandbox.Game.EntityComponents.MyEntityReferenceComponent.Ref">
            <summary>
            Increase the reference count of this entity.
            </summary>
        </member>
        <member name="M:Sandbox.Game.EntityComponents.MyEntityReferenceComponent.Unref">
            <summary>
            Decrease the entitie's reference count.
            </summary>
            <returns>Weather the count reached 0 and the entity was marked for close.</returns>
        </member>
        <member name="M:Sandbox.Game.EntityComponents.MyGridOwnershipComponentBase.GetBlockOwnerId(Sandbox.Game.Entities.Cube.MySlimBlock)">
            <summary>
            Returns the identity id of the block's owner
            </summary>
        </member>
        <member name="T:Sandbox.Game.EntityComponents.MyEntityTerrainHeightProviderComponent">
            <summary>
            Entity component providing terrain height when asked.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRenderBase.DrawLocationMarker(System.Int32,VRageMath.Vector3D,VRage.Game.Gui.MyHudEntityParams,System.Single,System.Single,System.Single)">
            <summary>
            Draws location marker on screen.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRenderBase.AddTexturedQuad(VRage.Game.Gui.MyHudTexturesEnum,VRageMath.Vector2,VRageMath.Vector2,VRageMath.Color,System.Single,System.Single)">
            <summary>
            Add textured quad with specified UP direction and width/height.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRenderBase.AddTexturedQuad(System.String,VRageMath.Vector2,VRageMath.Vector2,VRageMath.Color,System.Single,System.Single)">
            <summary>
            Add textured quad with specified UP direction and width/height.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridPhysics.RemoveShapesFromFracturedBlocks(Havok.HkdBreakableBody,Sandbox.Game.Entities.Cube.MySlimBlock,System.Nullable{System.UInt16},System.Collections.Generic.HashSet{Sandbox.Game.Entities.Cube.MySlimBlock},System.Collections.Generic.HashSet{Sandbox.Game.Entities.Cube.MySlimBlock})">
            <summary>
            Removes breakable shapes form fracture component.
            </summary>
            <param name="bBody">body with shapes</param>
            <param name="block">block</param>
            <param name="blocksToDelete">collection of blocks to remove from grid</param>
            <param name="blocksUpdateDamage">collection of blocks for updating their damage according to remaining shapes count</param>
            <returns>true if block was processes otherwise false (block in compound does not exist)</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridPhysics.FindFractureComponentBlocks(Sandbox.Game.Entities.Cube.MySlimBlock,Havok.HkdShapeInstanceInfo)">
            <summary>
            Searches for all children shapes of the block (or block inside compound block). The given block is always the block from grid (not from compound block).
            </summary>
            <param name="block">grid block</param>
            <param name="shapeInst">shape instnce for the block</param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridPhysics.FindFractureComponentBlocks">
            <summary>
            Searches for blocks which will create fracture components from cached m_fracturedSlimBlocksShapes
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridPhysics.CalculateSoften(System.Single,System.Single,VRageMath.Vector3@,VRageMath.Vector3)">
            <summary>
            Calculates soft coeficient at target point
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridPhysics.ApplyDeformation(System.Single,System.Single,System.Single,VRageMath.Vector3,VRageMath.Vector3,VRage.Utils.MyStringHash,System.Single,System.Single,System.Int64)">
            <summary>
            Applies deformation, returns true when block was destroyed (explosion should be generated)
            </summary>
            <param name="deformationOffset">Amount of deformation in the localPos</param>
            <param name="offsetThreshold">When deformation offset for bone is lower then threshold, it won't move the bone at all or do damage</param>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridPhysics.AddDirtyBlock(Sandbox.Game.Entities.Cube.MySlimBlock)">
            <summary>
            For large continuous areas use AddDirtyArea, internal processing is much faster because taking advantage of aabb tests
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridPhysics.ConvertToDynamic(System.Boolean)">
            <summary>
            Checks if the last block in grid has fracture component and converts it into fracture pieces.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridPhysics.OnReceiveBones(VRageMath.Vector3I,VRageMath.Vector3I)">
            <summary>
            Update what bones we have from server.
            
            If any of those positions was predicted we clear the predicted value and update our data so it does not get reset.
            </summary>
            <param name="min">Min bone range</param>
            <param name="max">Max bone range (inclusive)</param>
        </member>
        <member name="T:Sandbox.Game.Entities.Cube.MyGridPhysics.MyDirtyBlocksInfo">
            <summary>
            Information about dirty (added, removed,...) blocks.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Cube.MyCubeGridMultiBlockInfo">
            <summary>
            Helper data for multiblock in a grid.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridMultiBlockInfo.GetBoundingBox(VRageMath.Vector3I@,VRageMath.Vector3I@)">
            <summary>
            Returns multiblok min and max grid coordinates.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridMultiBlockInfo.CanAddBlock(VRageMath.Vector3I@,VRageMath.Vector3I@,VRageMath.MyBlockOrientation,Sandbox.Definitions.MyCubeBlockDefinition)">
            <summary>
            Check if other block can be added to area of multiblock.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.MyEntityInventoryOwnerExtensions">
            <summary>
            This class simplifies backward compatibility to IMyInventoryOwner in the code
            Instead checking Entity type, you need to check now if the Entity has Inventory
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Inventory.MyPhysicalInventoryItemExtensions.AddItemToLootBag(VRage.Game.Entity.MyEntity,VRage.Game.Entity.MyPhysicalInventoryItem,VRage.Game.Entity.MyEntity@)">
            <summary>
            Add the given inventory item to loot bag. If loot bag does not exist then it will be created.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Inventory.MyPhysicalInventoryItemExtensions.SpawnBagAround(VRage.Game.Entity.MyEntity,VRage.Game.MyContainerDefinition,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Spawns bag around position given by "baseTransform", checks all 4 directions around - forwards (forward, right, backward, left) and on each such direction moves test sphere 
            in 3 directions forward (frontChecks), sides (perpendicular to forward direction - rights) and up. If spawn position is not found then position above "worldAabbTopPosition"
            is selected.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.MyComponentContainerExtension">
            <summary>
            TODO: This should be later ideally some factory rather than just an extension on the MyComponentContainer
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyComponentContainerExtension.InitComponents(VRage.Game.Components.MyComponentContainer,VRage.ObjectBuilders.MyObjectBuilderType,VRage.Utils.MyStringHash,VRage.Game.ObjectBuilders.ComponentSystem.MyObjectBuilder_ComponentContainer)">
            <summary>
            Tries to retrieve entity definition of the entity owning this container, check if the definition has some DefaultComponents,
            tries to retrieve these components definitions, create these components instances and add them
            
            TODO: This should be ideally a behavior of the MyEntityComponentContainer when it is initialized (deserialized).. or by the factory, for now, this is an extension method
            </summary>        
        </member>
        <member name="M:Sandbox.Game.Entities.MyComponentContainerExtension.TryGetEntityComponentTypes(System.Int64,System.Collections.Generic.List{System.Type}@)">
            <summary>
            This will retrieve component types in the entity container. This method allocates, use only for debugging etc.
            </summary>
            <returns>true if success</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyComponentContainerExtension.TryAddComponent(System.Int64,VRage.Game.MyDefinitionId)">
            <summary>
            This will look for the component definition and if found, it will create its instance and add to the entity with the give id
            </summary>
            <returns>true on success</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyComponentContainerExtension.TryAddComponent(System.Int64,System.String,System.String)">
            <summary>
            This will try to parse strings to types and create an instance of the component type. Don't use this in retail code, use for debug, modding etc.
            </summary>
            <param name="entityId">Id of entity which should get the component</param>
            <param name="instanceTypeStr">Type of the component instance, no the base type</param>
            <param name="componentTypeStr">The base type of the component to be added</param>
            <returns>true on success</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntityExtensions.GetInventory(VRage.Game.Entity.MyEntity,System.Int32)">
            <summary>
            Search for inventory component with maching index.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.MyInventoryBagEntity">
            <summary>
            Inventory bag spawned when character died, container breaks, or when entity from other inventory cannot be spawned then bag spawned with the item in its inventory.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Planet.MyPlanetCubemapHelper.ProjectToCube(VRageMath.Vector3D@,System.Int32@,VRageMath.Vector2D@)">
            Find the appropriate face and project a position to it's local space.
            
            There was some fishy here but the face transforms depend on this method's behaviour so it will stay for now, I hope I can fix it before release.
        </member>
        <member name="M:Sandbox.Game.Entities.Planet.MyPlanetCubemapHelper.FindCubeFace(VRageMath.Vector3D@)">
            Find the appropriate face for the projection of a point.
        </member>
        <member name="M:Sandbox.Game.Entities.Planet.MyPlanetCubemapHelper.ProjectForFace(VRageMath.Vector3D@,System.Int32,VRageMath.Vector2D@)">
            Project the position to local space for a provided face.
        </member>
        <member name="M:Sandbox.Game.Entities.Planet.MyPlanetCubemapHelper.GetForwardUp(VRageMath.Base6Directions.Direction,VRageMath.Vector3D@,VRageMath.Vector3D@)">
            Get cubemap forward up for a given face.
        </member>
        <member name="M:Sandbox.Game.Entities.Planet.MyPlanetCubemapHelper.TranslateTexcoordsToFace(VRageMath.Vector2D@,System.Int32,System.Int32,VRageMath.Vector2D@)">
            Translate texcoords from one face to the next.
        </member>
        <member name="T:Sandbox.Game.EntityComponents.MyCasterComponent">
            <summary>
            Component used for finding object by casting. It is possible to create this component with different types of casting:
            Box, Raycast, Shape
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyCasterComponent.m_hitBlock">
            <summary>
            Indicates block that is hit by raycast.
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyCasterComponent.m_hitCubeGrid">
            <summary>
            Indicates grid that was hit by raycast.
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyCasterComponent.m_hitCharacter">
            <summary>
            Indicates character that was hit by raycast.
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyCasterComponent.m_hitDestroaybleObj">
            <summary>
            Indicates destroyable object that was hit by raycast
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyCasterComponent.m_hitFloatingObject">
            <summary>
            Indicates floating object that was hit by raycast.
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyCasterComponent.m_hitEnvironmentSector">
            <summary>
            Indicates Environment Sector hit.
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyCasterComponent.m_environmentItem">
            <summary>
            Indicates Specific item of Environment Sector hit.
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyCasterComponent.m_hitPosition">
            <summary>
            Indicates exact hit position of raycast.
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyCasterComponent.m_distanceToHitSq">
            <summary>
            Indicates distance to block that is hit by raycast.
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyCasterComponent.m_caster">
            <summary>
            Raycaster used for finding hit block.
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyCasterComponent.m_pointOfReference">
            <summary>
            Point of reference to which closest object is found.
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyCasterComponent.m_isPointOfRefSet">
            <summary>
            Indicates if point of reference is set.
            </summary>
        </member>
        <member name="P:Sandbox.Game.EntityComponents.MyCasterComponent.HitBlock">
            <summary>
            Gets block that is hit by a raycaster.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Components.MyCraftingComponentBase.MyBlueprintToProduce">
            <summary>
            Normal class to hold information about blueprint being produced
            </summary>
        </member>
        <member name="T:Sandbox.Game.Components.MyCraftingComponentBase.MyRepairBlueprintToProduce">
            <summary>
            Use this class with blueprints, that are type of MyRepairBlueprintDefinition, intended for repairing items..
            </summary>
        </member>
        <member name="T:Sandbox.Game.EntityComponents.MyEntityInventorySpawnComponent">
            TODO: This component should replace the MyInventorySpawnComponent which is limited to be used by CharacterComponents container
        </member>
        <member name="M:Sandbox.Game.EntityComponents.MyModelComponent.InitEntity">
            <summary>
            This calls Refresh Models on Entity, this should be later handled by Render Component and Physics Component after receiving the "ModelChanged" entity event
            </summary>
        </member>
        <member name="T:VRage.Game.Components.MyEntityContainerEventExtensions">
            <summary>
            TODO: This should change in future. Cestmir should already know how to change this to some kind of dispatcher that will inform components
            Until then, this is now used to inform MyEntityDurabilityComponent if present in the container about changes
            </summary>
        </member>
        <member name="F:VRage.Game.Components.MyEntityContainerEventExtensions.RegisteredListeners">
            <summary>
            This dictionary holds entityId as key, and value is the dictionary of registered events to be listened
            </summary>
        </member>
        <member name="F:VRage.Game.Components.MyEntityContainerEventExtensions.ExternalListeners">
            <summary>
            This dictionary holds listeners (components) that are attached to other entities entities and listen on another entity
            </summary>
        </member>
        <member name="F:VRage.Game.Components.MyEntityContainerEventExtensions.ExternalyListenedEntities">
            <summary>
            This hashset contains entities, which's events are registered by components / handlers that don't belong to their containers.
            </summary>
        </member>
        <member name="F:VRage.Game.Components.MyEntityContainerEventExtensions.m_debugCounter">
            <summary>
            This counter is used to count how many events invoke other entity events, if this amount is too high, we have to rework the mechanism and hav postopned invokation..
            </summary>
        </member>
        <member name="M:VRage.Game.Components.MyEntityContainerEventExtensions.RegisterForEntityEvent(VRage.Game.Components.MyEntityComponentBase,VRage.Utils.MyStringHash,VRage.Game.Components.MyEntityContainerEventExtensions.EntityEventHandler)">
            <summary>
            This will register the component to listen to some events..
            </summary>
            <param name="component">Component that is being registered</param>
            <param name="eventType">type of event</param>
            <param name="handler">handler to be called</param>
        </member>
        <member name="M:VRage.Game.Components.MyEntityContainerEventExtensions.RegisterForEntityEvent(VRage.Game.Components.MyEntityComponentBase,VRage.Game.Entity.MyEntity,VRage.Utils.MyStringHash,VRage.Game.Components.MyEntityContainerEventExtensions.EntityEventHandler)">
            <summary>
            This will register the component to listen to some events on entity that is other than entity containing this component
            </summary>
            <param name="entity">Entity on which we listen to events</param>
            <param name="component">Component that is being registered</param>
            <param name="eventType">type of event</param>
            <param name="handler">handler to be called</param>
        </member>
        <member name="M:VRage.Game.Components.MyEntityContainerEventExtensions.UnregisterForEntityEvent(VRage.Game.Components.MyEntityComponentBase,VRage.Game.Entity.MyEntity,VRage.Utils.MyStringHash)">
            <summary>
            This will unregister the component to listen to some events on entity that is other than entity containing this component
            </summary>
            <param name="entity">Entity on which we listen to events</param>
            <param name="component">Component that is being registered</param>
            <param name="eventType">type of event</param>
            <param name="handler">handler to be called</param>
        </member>
        <member name="M:VRage.Game.Components.MyEntityContainerEventExtensions.RegisteredEntityOnClose(VRage.ModAPI.IMyEntity)">
            <summary>
            When entity is being closed, we need to clean it's records for events
            </summary>
            <param name="entity">entity being removed</param>
        </member>
        <member name="M:VRage.Game.Components.MyEntityContainerEventExtensions.RegisteredComponentBeforeRemovedFromContainer(VRage.Game.Components.MyEntityComponentBase)">
            <summary>
            When component is removed, clean it's records
            </summary>
            <param name="component">component being removed from its container (entity) </param>
        </member>
        <member name="M:VRage.Game.Components.MyEntityContainerEventExtensions.RaiseEntityEvent(VRage.Game.Entity.MyEntity,VRage.Utils.MyStringHash,VRage.Game.Components.MyEntityContainerEventExtensions.EntityEventParams)">
            <summary>
            Call this to raise event on entity, that will be processed by registered components
            </summary>
            <param name="entity">this is entity on which is this being invoked</param>
            <param name="eventType">type of event</param>
            <param name="eventParams">event params or derived type</param>
        </member>
        <member name="M:VRage.Game.Components.MyEntityContainerEventExtensions.RaiseEntityEventOn(VRage.Game.Entity.MyEntity,VRage.Utils.MyStringHash,VRage.Game.Components.MyEntityContainerEventExtensions.EntityEventParams)">
            <summary>
            Call this to raise event on entity, that will be processed by registered components
            </summary>
            <param name="entity">this is entity on which is this being invoked</param>
            <param name="eventType">type of event</param>
            <param name="eventParams">event params or derived type</param>
        </member>
        <member name="M:VRage.Game.Components.MyEntityContainerEventExtensions.RaiseEntityEvent(VRage.Game.Components.MyEntityComponentBase,VRage.Utils.MyStringHash,VRage.Game.Components.MyEntityContainerEventExtensions.EntityEventParams)">
            <summary>
            Call this to raise event on entity, that will be processed by registered components
            </summary>
            <param name="component">component upon which container this is going to be invoke</param>
            <param name="eventType">type of event</param>
            <param name="eventParams">event params or derived type</param>
        </member>
        <member name="M:VRage.Game.Components.MyEntityContainerEventExtensions.InvokeEventOnListeners(System.Int64,VRage.Utils.MyStringHash,VRage.Game.Components.MyEntityContainerEventExtensions.EntityEventParams)">
            <summary>
            This just iterates through registered listeners and informs them..
            </summary>
            <param name="entityId"></param>
            <param name="eventType"></param>
            <param name="eventParams"></param>
        </member>
        <member name="T:VRage.Game.Components.MyEntityContainerEventExtensions.EntityEventParams">
            <summary>
            Base class for passing parameters, derive for it to pass different params, keep the names consistent ie. EntityEventType = Hit => params should be type of HitParams
            </summary>
        </member>
        <member name="T:VRage.Game.Components.MyEntityContainerEventExtensions.ControlAcquiredParams">
            <summary>
            Params to be passed with ControlAcquiredEvent..
            </summary>
        </member>
        <member name="T:VRage.Game.Components.MyEntityContainerEventExtensions.ControlReleasedParams">
            <summary>
            Params to be passed with ControlAcquiredEvent..
            </summary>
        </member>
        <member name="T:VRage.Game.Components.MyEntityContainerEventExtensions.ModelChangedParams">
            <summary>
            This class object is passed as argument with ModelChanged entity event
            </summary>
        </member>
        <member name="T:VRage.Game.Components.MyEntityContainerEventExtensions.InventoryChangedParams">
            <summary>
            This class is used to inform about changes in inventory
            </summary>
        </member>
        <member name="T:VRage.Game.Components.MyEntityContainerEventExtensions.HitParams">
            <summary>
            Params to pass hitted entity
            </summary>
        </member>
        <member name="T:VRage.Game.Components.MyEntityContainerEventExtensions.EntityEventHandler">
            <summary>
            Handler to be called on event
            </summary>
            <param name="eventParams">These params can be also another type derived from this for different event types </param>
        </member>
        <member name="T:VRage.Game.Components.MyEntityContainerEventExtensions.RegisteredComponent">
            <summary>
            This holds basically the delegate to be invoked but also a component for easier deregistration..
            </summary>
        </member>
        <member name="T:VRage.Game.Components.MyEntityContainerEventExtensions.RegisteredEvents">
            <summary>
            This class is a dictionary of registered handlers for different events that happened on the entity
            </summary>
        </member>
        <member name="T:Sandbox.Game.GameSystems.ContextHandling.IMyFocusHolder">
            <summary>
            Defines interface for handling and releasing game focus.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.ContextHandling.IMyFocusHolder.OnLostFocus">
            <summary>
            Called when lost game focus.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.GetClosestCoordSys(VRageMath.Vector3D@,System.Boolean)">
            <summary>
            Returns closest local coord system.
            </summary>
            <param name="position">World position.</param>
            <returns>Local coord system.</returns>
        </member>
        <member name="M:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.CoordSysCreated_Client(Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.MyCreateCoordSysBuffer)">
            <summary>
            Method on client that is called by server. Will Trigger creation of coord system.
            </summary>
            <param name="transform">Origin transform.</param>
            <param name="coordSysId">Coord system id.</param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.CreateCoordSys_ClientInternal(VRageMath.MyTransformD@,System.Int64)">
            <summary>
            Only creates coord system. Call only on client in reaction on server create.
            </summary>
            <param name="transform">Origin of the coord system.</param>
            <param name="coordSysId">Coord system id that should be used in creation.</param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.CreateCoordSys(Sandbox.Game.Entities.MyCubeGrid,System.Boolean,System.Boolean)">
            <summary>
            Creates coord system and sends it to clients. Should be called only on server.
            </summary>
            <param name="cubeGrid">Cube grid that is an origin.</param>
            <param name="staticGridAlignToCenter">Indcates if grid should be aligned to center or no.</param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.RemoveCoordSys(System.Int64)">
            <summary>
            Removes coord system.
            </summary>
            <param name="coordSysId">Coord system id.</param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.RegisterCubeGrid(Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Registers cube grid under closest coord system.
            </summary>
            <param name="cubeGrid">Cube grid to register.</param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.RegisterCubeGrid(Sandbox.Game.Entities.MyCubeGrid,Sandbox.Game.GameSystems.CoordinateSystem.MyLocalCoordSys)">
            <summary>
            Registers cube grid under given local coord system.
            </summary>
            <param name="cubeGrid">Cube grid to register.</param>
            <param name="coordSys">Local coord system.</param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.UnregisterCubeGrid(Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Unregisters cube grid from given local coord system.
            </summary>
            <param name="cubeGrid">Cube grid to be unregistered.</param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.SnapWorldPosToClosestGrid(VRageMath.Vector3D@,System.Double,System.Boolean)">
            <summary>
            Converts world position to be snapped to closest grid.
            </summary>
            <param name="worldPos">World position.</param>
            <param name="gridSize">Grid size.</param>
            <param name="staticGridAlignToCenter">Is grid align to static.</param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.IsAnyLocalCoordSysExist(VRageMath.Vector3D@)">
            <summary>
            Indicates if position is inside of local coordinates area.
            </summary>
            <param name="worldPos">World position.</param>
            <returns>If true, position is inside of closest local coordinate system.</returns>
        </member>
        <member name="M:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.IsLocalCoordSysExist(VRageMath.MatrixD@,System.Double)">
            <summary>
            Naive way of checking if transform is snaped to coord sys. In second iteration update for better way.
            </summary>
            <param name="tranform">Transform to check</param>
            <returns>Indicates if transform is aligned correctly to any grid system.</returns>
        </member>
        <member name="M:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.ResetSelection">
            <summary>
            Sets last and current selected coordinate system to none.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.GetCoordSysColor(System.Int64)">
            <summary>
            Gets local coordinate system indication color.
            </summary>
            <param name="coordSysId">Local coordinate system ID.</param>
            <returns>Indication color.</returns>
        </member>
        <member name="P:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.SelectedCoordSys">
            <summary>
            Returns id of selected coord system.
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.LastSelectedCoordSys">
            <summary>
            Returns id of last selected coord system.
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.LocalCoordExist">
            <summary>
            Indicates if there is any selected coord system.
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.Visible">
            <summary>
            Indicates if LCS graphic representation is visible.
            </summary>
        </member>
        <member name="T:Sandbox.Game.GameSystems.CoordinateSystem.MyCoordinateSystem.MyCreateCoordSysBuffer">
            <summary>
            Used for transporting information about coord system to clients.
            </summary>
        </member>
        <member name="T:Sandbox.Game.GameSystems.CoordinateSystem.MyLocalCoordSys">
            <summary>
            Local coord system.
            </summary>
        </member>
        <member name="F:Sandbox.Game.GameSystems.CoordinateSystem.MyLocalCoordSys.m_origin">
            <summary>
            Origin transform.
            </summary>
        </member>
        <member name="F:Sandbox.Game.GameSystems.CoordinateSystem.MyLocalCoordSys.m_boundingBox">
            <summary>
            Bouding box of the coord system.
            </summary>
        </member>
        <member name="F:Sandbox.Game.GameSystems.CoordinateSystem.MyLocalCoordSys.m_corners">
            <summary>
            Cached corner of the bbox in world coordinates.
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.CoordinateSystem.MyLocalCoordSys.Origin">
            <summary>
            Gets origin transformation of the coord system.
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.CoordinateSystem.MyLocalCoordSys.EntityConuter">
            <summary>
            Indicates how many entities are in this coord system.
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.CoordinateSystem.MyLocalCoordSys.RenderColor">
            <summary>
            Color of the bounding box.
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.CoordinateSystem.MyLocalCoordSys.Id">
            <summary>
            Id if this coord system
            </summary>
        </member>
        <member name="T:Sandbox.Game.GameSystems.ContextHandling.MyGameFocusManager">
            <summary>
            Manages game objects that can be deactivated.
            </summary>
        </member>
        <member name="F:Sandbox.Game.GameSystems.ContextHandling.MyGameFocusManager.m_currentFocusHolder">
            <summary>
            Current focus holder.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.ContextHandling.MyGameFocusManager.Register(Sandbox.Game.GameSystems.ContextHandling.IMyFocusHolder)">
            <summary>
            Registers holder as current one and informs the old one that it is defocused.
            </summary>
            <param name="newFocusHolder"></param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.ContextHandling.MyGameFocusManager.Unregister(Sandbox.Game.GameSystems.ContextHandling.IMyFocusHolder)">
            <summary>
            Unregisters focus holder.
            </summary>
            <param name="focusHolder">Focus holder to unregister.</param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.ContextHandling.MyGameFocusManager.Clear">
            <summary>
            Informs current focus holder and than clears focus.
            </summary>
        </member>
        <member name="P:Sandbox.Game.SessionComponents.MyEntityTransformationSystem.DisableTransformation">
            <summary>
            This will disable the transformation changes of picked entity.
            </summary>
        </member>
        <member name="E:Sandbox.Game.SessionComponents.MyEntityTransformationSystem.ControlledEntityChanged">
            <summary>
            Triggered when controlled entity has changed.
            First old, second new.
            </summary>
        </member>
        <member name="E:Sandbox.Game.SessionComponents.MyEntityTransformationSystem.RayCasted">
            <summary>
            Triggered when the component casts new ray.
            </summary>
        </member>
        <member name="P:Sandbox.Game.SessionComponents.MyEntityTransformationSystem.Mode">
            <summary>
            Coordinate mode - Local or World space.
            </summary>
        </member>
        <member name="P:Sandbox.Game.SessionComponents.MyEntityTransformationSystem.Operation">
            <summary>
            Transformation type.
            </summary>
        </member>
        <member name="P:Sandbox.Game.SessionComponents.MyEntityTransformationSystem.ControlledEntity">
            <summary>
            Currently selected entity.
            </summary>
        </member>
        <member name="P:Sandbox.Game.SessionComponents.MyEntityTransformationSystem.DisablePicking">
            <summary>
            Prevents picking of entities by left click.
            </summary>
        </member>
        <member name="P:Sandbox.Game.SessionComponents.MyEntityTransformationSystem.LastRay">
            <summary>
            Last picking raycast.
            </summary>
        </member>
        <member name="T:Sandbox.Game.SessionComponents.MyHighlightSystem">
            <summary>
            System designed to propagate highlights over the network. 
            The replication happens only for server calls.
            Client side cannot ask for highlights on other clients.
            </summary>
        </member>
        <member name="M:Sandbox.Game.SessionComponents.MyHighlightSystem.RequestHighlightChange(Sandbox.Game.SessionComponents.MyHighlightSystem.MyHighlightData)">
            <summary>
            Requests highlight from render proxy. The call is handled localy for
            default player id. Only server can use the player id to propagate the 
            Highlight calls to clients.
            </summary>
            <param name="data">Highlight data wrapper.</param>
            <param name="playerId">Player Identity Id.</param>
        </member>
        <member name="M:Sandbox.Game.SessionComponents.MyHighlightSystem.RequestHighlightChangeExclusive(Sandbox.Game.SessionComponents.MyHighlightSystem.MyHighlightData,System.Int32)">
            <summary>
            Requests Exclusive highlight from render proxy. The call is handled localy for
            default player id. Only server can use the player id to propagate the 
            Highlight calls to clients.
            Uses Exclusive key as lock accessor. Can be obtained from ExclusiveHighlightAccepted event.
            </summary>
            <param name="data">Highlight data wrapper.</param>
            <param name="exclusiveKey">Exclusive key.</param>
            <param name="playerId">Player Identity Id.</param>
        </member>
        <member name="M:Sandbox.Game.SessionComponents.MyHighlightSystem.IsHighlighted(System.Int64)">
            <summary>
            Determines whenever is the entity highlighted by the system or not.
            </summary>
            <param name="entityId">Id of entity.</param>
            <returns>Highlighted.</returns>
        </member>
        <member name="M:Sandbox.Game.SessionComponents.MyHighlightSystem.IsReserved(System.Int64)">
            <summary>
            Is the entity locked for highlights by the system?
            </summary>
            <param name="entityId">Id of the entity.</param>
            <returns>Reserved value.</returns>
        </member>
        <member name="F:Sandbox.Game.SessionComponents.MyHighlightSystem.MyHighlightData.EntityId">
            <summary>
            Id of entity that should be highlighted.
            </summary>
        </member>
        <member name="F:Sandbox.Game.SessionComponents.MyHighlightSystem.MyHighlightData.OutlineColor">
            <summary>
            Color of highlight overlay.
            </summary>
        </member>
        <member name="F:Sandbox.Game.SessionComponents.MyHighlightSystem.MyHighlightData.Thickness">
            <summary>
            Overlay thickness.
            </summary>
        </member>
        <member name="F:Sandbox.Game.SessionComponents.MyHighlightSystem.MyHighlightData.PulseTimeInFrames">
            <summary>
            Number of frames between pulses.
            </summary>
        </member>
        <member name="F:Sandbox.Game.SessionComponents.MyHighlightSystem.MyHighlightData.PlayerId">
            <summary>
            Id of player that should do the highlight.
            (For non local players its send to client)
            </summary>
        </member>
        <member name="F:Sandbox.Game.SessionComponents.MyHighlightSystem.MyHighlightData.IgnoreUseObjectData">
            <summary>
            When set to true the system does not use the 
            IMyUseObject logic to process the highlight.
            </summary>
        </member>
        <member name="F:Sandbox.Game.SessionComponents.MyHighlightSystem.MyHighlightData.SubPartNames">
            <summary>
            Specify there the names of the subparts that would be highlighted
            instead of the full model.
            Format: "subpart_1;subpart_2"
            </summary>
        </member>
        <member name="M:Sandbox.Game.SessionComponents.MyHighlightSystem.MyHighlightData.#ctor(System.Int64,System.Int32,System.UInt64,System.Nullable{VRageMath.Color},System.Boolean,System.Int64,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="entityId">Id of entity that should be highlighted.</param>
            <param name="thickness">Overlay thickness.</param>
            <param name="pulseTimeInFrames">Number of frames between the pulses.</param>
            <param name="outlineColor">Color of overlay.</param>
            <param name="ignoreUseObjectData">Used to ignore IMyUseObject logic for highlighting.</param>
            <param name="playerId">Id of receiving player.</param>
            <param name="subPartNames">Names of subparts that should be highlighted instead of the full model.</param>
        </member>
        <member name="T:Sandbox.Game.Replication.MyExternalReplicableEvent`1">
            <summary>
            Same as MyExternalReplicableEvent, but with support for event proxy.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Replication.MyExternalReplicable`1">
            <summary>
            External replicable which is hooked to replicated object.
            On server instances are created by reacting to event like MyEntities.OnEntityCreated, subscribed by MyMultiplayerServerBase
            On clients instances are created by replication layer, which creates instance and calls OnLoad()
            </summary>
            <typeparam name="T">Type of the object to which is replicable hooked.</typeparam>
        </member>
        <member name="M:Sandbox.Game.Replication.MyExternalReplicable.RpcToServer_Implementation(VRage.Library.Collections.BitReaderWriter)">
            <summary>
            Hack to allow interop with old event system without complete rewrite.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Replication.MyExternalReplicable.RpcToAll_Implementation(VRage.Library.Collections.BitReaderWriter)">
            <summary>
            Hack to allow interop with old event system without complete rewrite.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Replication.MyExternalReplicable.RpcToAllButOne_Implementation(VRage.Library.Collections.BitReaderWriter)">
            <summary>
            Hack to allow interop with old event system without complete rewrite.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Replication.MyExternalReplicable.RpcToClient_Implementation(VRage.Library.Collections.BitReaderWriter)">
            <summary>
            Hack to allow interop with old event system without complete rewrite.
            </summary>
        </member>
        <member name="E:Sandbox.Game.Replication.MyExternalReplicable.Destroyed">
            <summary>
            Raised when replicable is destroyed from inside, e.g. Entity is closed which causes replicable to be closed.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Replication.MyExternalReplicable`1.Hook(System.Object)">
            <summary>
            Called on server before adding object to replication layer.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Replication.StateGroups.MyCharacterPhysicsStateGroup">
            <summary>
            Responsible for synchronizing entity physics over network
            </summary>
        </member>
        <member name="T:Sandbox.Game.Replication.StateGroups.MyEntityPhysicsStateGroup">
            <summary>
            Responsible for synchronizing entity physics over network
            </summary>
        </member>
        <member name="M:Sandbox.Game.Replication.StateGroups.MyEntityPhysicsStateGroup.GetBasicPhysicsPriority(VRage.Network.MyClientInfo)">
            <summary>
            Takes into account:
            Static body (zero priority for static),
            ResponsibilityForUpdate by client (zero priority for not responsible),
            otherwise returns OwnerReplicable priority.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Replication.StateGroups.MyEntityPhysicsStateGroup.GetMovementScale(Sandbox.Game.Replication.StateGroups.MyEntityPhysicsStateGroup.PrioritySettings,System.Single@)">
            <summary>
            Gets priority scale and update rate based on prioritySettings.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Replication.StateGroups.MyEntityPhysicsStateGroup.PrioritySettings">
            PRIORITIES
        </member>
        <member name="T:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup">
            <summary>
            Property sync state group.
            Synchronizes Sync members in SyncType.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.m_clientData">
            <summary>
            Client-specific data, null on server.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.m_serverData">
            <summary>
            Server-specific data, null on clients.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.m_properties">
            <summary>
            List of sync properties.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.m_propertyTimestamps">
            <summary>
            List of timestamps indicating last change of each sync property.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.m_invalidTimestamp">
            <summary>
            Helper constant - marking the timestamp as invalid.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.#ctor(VRage.Network.IMyReplicable,VRage.Sync.SyncType)">
            <summary>
            Contructor of property sync state group.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.Notify(VRage.Sync.SyncBase)">
            <summary>
            This function is a callback from Sync property. It is called when the sync property value is changed locally.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.MarkDirty">
            <summary>
            Marks dirty for all clients.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.GetGroupPriority(System.Int32,VRage.Network.MyClientInfo)">
            <summary>
            Gets group priority, when overloaded it can be useful to scale base priority.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.PropertyCount">
            <summary>
            Get the count of synchronized properties.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.ServerData">
            <summary>
            Server-side data.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.ServerData.ServerClientData">
            <summary>
            Dictionary containing server-side data for each connected client.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.ServerData.DataPerClient">
            <summary>
            Data for each client.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.ServerData.DataPerClient.DirtyProperties">
            <summary>
            Tiny array marking properties that were changed.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.ServerData.DataPerClient.SentProperties">
            <summary>
            Properties sent in last state sync.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.ClientData">
            <summary>
            Client-side data.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Replication.StateGroups.MyPropertySyncStateGroup.ClientData.DirtyProperties">
            <summary>
            Client stores here dirty properties.
            </summary>
        </member>
        <member name="M:Sandbox.Game.SessionComponents.MySteamAchievementBase.SessionLoad">
            <summary>
            Called when session components are getting loaded.
            </summary>
        </member>
        <member name="M:Sandbox.Game.SessionComponents.MySteamAchievementBase.SessionUpdate">
            <summary>
            Update called in AfterSimulation.
            </summary>
        </member>
        <member name="M:Sandbox.Game.SessionComponents.MySteamAchievementBase.SessionSave">
            <summary>
            Called when session components are getting saved.
            </summary>
        </member>
        <member name="M:Sandbox.Game.SessionComponents.MySteamAchievementBase.SessionUnload">
            <summary>
            Called when session gets unloaded.
            </summary>
        </member>
        <member name="M:Sandbox.Game.SessionComponents.MySteamAchievementBase.SessionBeforeStart">
            <summary>
            Called once after the session is loaded and before updates start.
            </summary>
        </member>
        <member name="M:Sandbox.Game.SessionComponents.MySteamAchievementBase.NotifyAchieved">
            <summary>
            Use to notify the achievement state change.
            </summary>
        </member>
        <member name="M:Sandbox.Game.SessionComponents.MySteamAchievementBase.Init">
            <summary>
            Called once when the session gets loaded for the first time.
            Always call base.Init()!
            </summary>
        </member>
        <member name="E:Sandbox.Game.SessionComponents.MySteamAchievementBase.Achieved">
            <summary>
            Invoked when the achievement is achieved.
            Invocation list is cleared afterwards.
            </summary>
        </member>
        <member name="P:Sandbox.Game.SessionComponents.MySteamAchievementBase.AchievementTag">
            <summary>
            Tag that identifies the achievement within the Steam system.
            </summary>
        </member>
        <member name="P:Sandbox.Game.SessionComponents.MySteamAchievementBase.IsAchieved">
            <summary>
            Achievement will stop recieving updates when Achieved.
            </summary>
        </member>
        <member name="P:Sandbox.Game.SessionComponents.MySteamAchievementBase.NeedsUpdate">
            <summary>
            Tells if the Achievement needs to recieve updates.
            </summary>
        </member>
        <member name="M:Sandbox.Game.WorldEnvironment.Modules.MyBreakableEnvironmentProxy.BreakAt(System.Int32,VRageMath.Vector3D,VRageMath.Vector3D,System.Double)">
            <summary>
            Break item at specified id of Environment Sector
            </summary>
            <param name="itemId"></param>
            <param name="hitpos"></param>
            <param name="hitnormal"></param>
            <param name="impactEnergy"></param>
        </member>
        <member name="T:Sandbox.Game.WorldEnvironment.Modules.MyEnvironmentalEntityCacher">
            <summary>
            The environmental entity cacher will keep entity references for some time and then close them.
            
            This is useful when multiple sector lods support entities because the entity would be deleted
            and then re-created during the transition.
            </summary>
        </member>
        <member name="M:Sandbox.Game.WorldEnvironment.Modules.MyEnvironmentalEntityCacher.Time">
            <summary>
            Get the current game time in milliseconds.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.WorldEnvironment.Definitions.MyGrowableEnvironmentItemDefinition.UpdateState(System.Int32@,System.Int64@)">
            <summary>
            Get the current state of an item based on it's last known state and the ammount of time since.
            </summary>
            <param name="last">Last known state of the item.</param>
            <param name="enlapsedTime">Ammount of time enlapsed since the last known state transition (in seconds).</param>
            <returns></returns>
        </member>
        <member name="F:Sandbox.Game.WorldEnvironment.Definitions.MyGrowableEnvironmentItemDefinition.ItemGrowthStep.TransitionTime">
            <summary>
            Time before transitioning to next growth state in seconds.
            </summary>
        </member>
        <member name="F:Sandbox.Game.WorldEnvironment.Definitions.MyGrowableEnvironmentItemDefinition.ItemGrowthStep.Actions">
            <summary>
            Supported actions.
            </summary>
        </member>
        <member name="F:Sandbox.Game.WorldEnvironment.Definitions.MyGrowableEnvironmentItemDefinition.ItemGrowthStep.ModelCollectionSubtypeId">
            <summary>
            SubtypeId for the relevant model collection.
            </summary>
        </member>
        <member name="T:Sandbox.Game.WorldEnvironment.Definitions.MyGrowableEnvironmentItemDefinition.GrowthSubtree">
            We know that (with respect to time) each connected component of the subgraph is a quas-tree with at most one cycle.
            
            We calculate how many references each node has, the nodes with zero refernces are leaves
            We calculate if a cycle exists and what nodes are in it.
        </member>
        <member name="M:Sandbox.Game.WorldEnvironment.Definitions.MyGrowableEnvironmentItemDefinition.GrowthSubtree.Init(Sandbox.Game.WorldEnvironment.Definitions.MyGrowableEnvironmentItemDefinition,System.Collections.Generic.List{System.Int32})">
            You'd be surprised how hard it actually is to set up some accelerated lookup for these graphs of evil.
        </member>
        <member name="M:Sandbox.Game.WorldEnvironment.Definitions.MyEnvironmentItemMapping.GetItemRated(System.Int32,System.Single)">
             Given a value between 0 and 1 this will return the id of a vegetation item in which
             range the value falls.
            
             If the value of rate is uniformly distributed then the definitions will be distributed
             according to their defined densities.
        </member>
        <member name="P:Sandbox.Game.WorldEnvironment.Definitions.MyEnvironmentItemMapping.Valid">
            Weather this mapping is valid.
        </member>
        <member name="M:Sandbox.Game.WorldEnvironment.Definitions.MyEnvironmentRule.Check(System.Single,System.Single,System.Single,System.Single)">
             Check that a rule matches terrain properties.
            
             @param height Height ration to the height map.
             @param latitude Latitude cosine
             @param slope Surface dominant angle cosine.
        </member>
        <member name="F:Sandbox.Game.GUI.DebugInputComponents.HonzaDebugInputComponent.LiveWatch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GUI.DebugInputComponents.HonzaDebugInputComponent.LiveWatch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sandbox.Game.GUI.DebugInputComponents.HonzaDebugInputComponent.LiveWatch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Sandbox.Game.WorldEnvironment.ItemInfo">
            Information about a item.
            
            Total Size: 32 bytes;
        </member>
        <member name="M:Sandbox.Game.WorldEnvironment.My2DClipmap`1.Update(VRageMath.Vector3D)">
            What is this?
            
            Partial implementation of a 2D Clipmap.
            
            Beware that my implementation uses a quadtree for 1:2 lod size ratios. This makes the implementation
            simpler but does differ from the implementations in literature.
            
            Additionally literature proposes that there be a invalid zone where data is preloaded. In our case
            that zone is of size 0.
            
            Other than that we have what I jugde some pretty efficient and compact code, the results seem
            quite agreeable.
            
        </member>
        <member name="M:Sandbox.Game.WorldEnvironment.MyEnvironmentSector.GetItemFromShapeKey(System.UInt32)">
            Get the item that corresponds to a given shape key.
        </member>
        <member name="M:Sandbox.Game.MyDecals.HandleAddDecal(VRage.ModAPI.IMyEntity,VRage.Game.ModAPI.MyHitInfo,VRage.Utils.MyStringHash,VRage.Utils.MyStringHash,System.Object,System.Single)">
            <param name="damage">Not used for now but could be used as a multiplier instead of random decal size</param>
        </member>
        <member name="M:Sandbox.Game.MyDecals.DefaultFilterProxy(VRage.Game.ModAPI.Interfaces.IMyDecalProxy)">
            <returns>True to skip the decal</returns>
        </member>
        <member name="T:Sandbox.Game.Replication.MyCharacterNetState">
            <summary>
            Currently used to inject new state read from character state group to MyCharacter
            </summary>
        </member>
        <member name="T:Sandbox.Game.Replication.MyFloatingObjectReplicable">
            <summary>
            This class creates replicable object for MyReplicableEntity : MyEntity
            </summary>    
        </member>
        <member name="T:Sandbox.Game.Replication.MyEntityReplicableBaseEvent`1">
            <summary>
            Same as MyEntityReplicableBase, but with support for event proxy.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Replication.MyInventoryBagReplicable">
            <summary>
            This class creates replicable object for MyReplicableEntity : MyEntity
            </summary>    
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MySyncLayer.PrepareSend``1(``0@,Sandbox.Engine.Multiplayer.MyTransportMessageEnum)">
            <summary>
            Find replicable and write data into m_sender
            </summary>
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MySyncLayer.SendAsRpcToServer``1(``0@,Sandbox.Engine.Multiplayer.MyTransportMessageEnum)">
            <summary>
            Sends always to server (even server to self).
            </summary>
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MySyncLayer.SendMessageToAllAndSelf``1(``0@,Sandbox.Engine.Multiplayer.MyTransportMessageEnum)">
            <summary>
            Message is not proccessed immediately localy! Its enqueued, so for order/changes sensitive code you need to perform actions localy on your own.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Replication.MyReplicationHelpers.RampPriority(System.Single,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            Ramps the priority up or down based on how often it should send updates and when it was last sent.
            Returns zero when it was sent recently (not more than 'updateOncePer' before).
            </summary>
            <param name="priority">Original priority.</param>
            <param name="frameCountWithoutSync">Number of frames without sync</param>
            <param name="updateOncePer">How often it should be normally updated</param>
            <param name="rampAmount">How much to ramp (0.5f means increase priority by 50% for each 'updateOncePer' number of frame late)</param>
            <param name="alsoRampDown">Ramps priority also down (returns zero priority when sent less than 'updateOncePer' frames before)</param>
        </member>
        <member name="F:Sandbox.Game.Replication.MyTerminalBlockData.m_dirtyProperties">
            <summary>
            Client stores here dirty properties.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Replication.MyTerminalReplicable">
            <summary>
            Responsible for synchronizing cube block properties over network
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyVoxelBase.GetVoxelContentInBoundingBox_Fast(VRageMath.BoundingBoxD,VRageMath.MatrixD)">
            <summary>
            Calculates amount of volume of a bounding box in voxels.
            </summary>
            <param name="localAabb">Local bounding box to query for.</param>
            <param name="worldMatrix">World matrix of the bounding box.</param>
            <returns>Pair of floats where 1st value is Volume amount and 2nd value is ratio of Volume amount to Whole volume.</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyVoxelBase.GetOrePriority">
            We use this to ensure voxels overlapping planets will have priority when spawning debris/ores.
        </member>
        <member name="M:Sandbox.Game.Entities.MyVoxelBase.IntersectStorage(VRageMath.BoundingBox@,System.Boolean)">
            Intersect the storage
            
            @param box WorldSpace bounding box to intersect with the storage.
        </member>
        <member name="M:Sandbox.Game.Entities.MyVoxelBase.SendVoxelCloseRequest">
            <summary>
            Use only for cut request
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyVoxelBase.Size">
            <summary>
            Size of voxel map (in voxels)
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyVoxelBase.SizeInMetres">
            <summary>
            Size of voxel map (in metres)
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyVoxelBase.PositionLeftBottomCorner">
            <summary>
            Position of left/bottom corner of this voxel map, in world space (not relative to sector)
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyVoxelBase.RootVoxel">
            <summary>
            Gets root voxel, for asteroids and planets itself.
            For MyVoxelPhysics, should return owning planet.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyPlanet.CorrectSpawnLocation2(VRageMath.Vector3D@,System.Double,System.Boolean)">
            <param name="resumeSearch">Don't modify initial search position</param>
            <returns>True if it a safe position is found</returns>
        </member>
        <member name="F:Sandbox.Game.GameSystems.MyEntityThrustComponent.m_thrustsChanged">
            <summary>
            True whenever thrust was added or removed.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyEntityThrustComponent.TrySplitGroup(Sandbox.Game.GameSystems.Conveyors.IMyConveyorEndpointBlock,Sandbox.Game.GameSystems.MyEntityThrustComponent.MyConveyorConnectedGroup)">
            <summary>
            Tries to split the group containing the given block at the position of the block. Leaves the block in one of the new groups (or the old one if no splits happened) and returns that group
            If conveyorEndpointBlock, it uses groupOverride for the group instead.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyEntityThrustComponent.ResourceSink(VRage.Game.Entity.MyEntity)">
            <summary>
            Finds the resource sink that should handle the power consumption of thrustEntity
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.MyEntityThrustComponent.SlowdownFactor">
            <summary>
            For now just the maximum slowdown factor of any thruster registered to the component
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.MyEntityThrustComponent.ControlThrust">
            <summary>
            Torque and thrust wanted by player (from input).
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.MyEntityThrustComponent.FinalThrust">
            <summary>
            Final thrust (clamped by available power, added anti-gravity, slowdown).
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.MyEntityThrustComponent.AutoPilotControlThrust">
            <summary>
            Thrust wanted by AutoPilot
            </summary>
        </member>
        <member name="T:Sandbox.Game.EntityComponents.MyFractureComponentBase">
            <summary>
            Fracture component adds fractures to entities. The component replaces renderer so the entity is responsible to restore it to original
            when this component is removed and original state is needed (repaired blocks).
            </summary>
        </member>
        <member name="M:Sandbox.Game.EntityComponents.MyFractureComponentBase.RemoveChildShapes(System.Collections.Generic.List{System.String})">
            <summary>
            Removes child shapes with given names.
            </summary>
            <returns>true if the entity is to be removed</returns>
        </member>
        <member name="P:Sandbox.Game.EntityComponents.MyFractureComponentCubeBlock.MountPoints">
            <summary>
            Mountpoints rotated by block orientation.
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyResourceDistributorComponent.ShowTrace">
            <summary>
            For debugging purposes. Enables trace messages and watches for this instance.
            </summary>
        </member>
        <member name="M:Sandbox.Game.EntityComponents.MyResourceDistributorComponent.UpdateHud(Sandbox.Game.Gui.MyHudSinkGroupInfo)">
            <summary>
            Computes number of groups that have enough energy to work.
            </summary>
        </member>
        <member name="M:Sandbox.Game.EntityComponents.MyResourceDistributorComponent.ComputeInitialDistributionData(VRage.Game.MyDefinitionId@,Sandbox.Game.EntityComponents.MyResourceDistributorComponent.MySinkGroupData[],Sandbox.Game.EntityComponents.MyResourceDistributorComponent.MySourceGroupData[],VRage.MyTuple{Sandbox.Game.EntityComponents.MyResourceDistributorComponent.MySinkGroupData,Sandbox.Game.EntityComponents.MyResourceDistributorComponent.MySourceGroupData}@,System.Collections.Generic.HashSet{Sandbox.Game.EntityComponents.MyResourceSinkComponent}[],System.Collections.Generic.HashSet{Sandbox.Game.EntityComponents.MyResourceSourceComponent}[],System.Collections.Generic.List{VRage.MyTuple{Sandbox.Game.EntityComponents.MyResourceSinkComponent,Sandbox.Game.EntityComponents.MyResourceSourceComponent}},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Single@)">
            <summary>
            
            </summary>
            <param name="typeId"></param>
            <param name="sinkDataByPriority"></param>
            <param name="sourceDataByPriority"></param>
            <param name="sinkSourceData"></param>
            <param name="sinksByPriority"></param>
            <param name="sourcesByPriority"></param>
            <param name="sinkSourcePairs"></param>
            <param name="stockpilingStorageList">Indices into sinkSourcePairs</param>
            <param name="otherStorageList">Indices into sinkSourcePairs</param>
            <param name="maxAvailableResource"></param>
        </member>
        <member name="M:Sandbox.Game.EntityComponents.MyResourceDistributorComponent.RecomputeResourceDistributionPartial(VRage.Game.MyDefinitionId@,System.Int32,Sandbox.Game.EntityComponents.MyResourceDistributorComponent.MySinkGroupData[],Sandbox.Game.EntityComponents.MyResourceDistributorComponent.MySourceGroupData[],VRage.MyTuple{Sandbox.Game.EntityComponents.MyResourceDistributorComponent.MySinkGroupData,Sandbox.Game.EntityComponents.MyResourceDistributorComponent.MySourceGroupData}@,System.Collections.Generic.HashSet{Sandbox.Game.EntityComponents.MyResourceSinkComponent}[],System.Collections.Generic.HashSet{Sandbox.Game.EntityComponents.MyResourceSourceComponent}[],System.Collections.Generic.List{VRage.MyTuple{Sandbox.Game.EntityComponents.MyResourceSinkComponent,Sandbox.Game.EntityComponents.MyResourceSourceComponent}},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Single)">
            <summary>
            Recomputes power distribution in subset of all priority groups (in range
            from startPriorityIdx until the end). Passing index 0 recomputes all priority groups.
            </summary>
        </member>
        <member name="M:Sandbox.Game.EntityComponents.MyResourceDistributorComponent.MatchesAdaptability(System.Collections.Generic.HashSet{Sandbox.Game.EntityComponents.MyResourceSinkComponent},Sandbox.Game.EntityComponents.MyResourceSinkComponent)">
            <summary>
            Mostly debug method to verify that all members of the group have 
            same ability to adapt as given sink.
            </summary>
        </member>
        <member name="T:Sandbox.Game.EntityComponents.MyResourceDistributorComponent.MySinkGroupData">
            <summary>
            Some precomputed data for each priority group.
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyResourceSinkComponent.Group">
            <summary>
            Higher priority groups get more resources than lower priority ones.
            If there are not enough resources for everything, lower priority groups
            are turned off first.
            </summary>
        </member>
        <member name="M:Sandbox.Game.EntityComponents.MyResourceSinkComponent.SetInputFromDistributor(VRage.Game.MyDefinitionId,System.Single,System.Boolean,System.Boolean)">
            <summary>
            This should be called only from MyResourceDistributor.
            </summary>
        </member>
        <member name="M:Sandbox.Game.EntityComponents.MyResourceSinkComponent.SetRequiredInputFuncByType(VRage.Game.MyDefinitionId,System.Func{System.Single})">
            <summary>
            Change the required input function (callback) for given type of resource. It does not call it immediatelly to update required input value.
            </summary>
        </member>
        <member name="F:Sandbox.Game.EntityComponents.MyResourceSinkComponent.PerTypeData.MaxRequiredInput">
            Theoretical maximum of required input. This can be different from RequiredInput, but
            it has to be >= RequiredInput. It is used to check whether current power supply can meet
            demand under stress.
        </member>
        <member name="F:Sandbox.Game.Entities.MySkinnedEntity.UseNewAnimationSystem">
            <summary>
            VRAGE TODO: THIS IS TEMPORARY! Remove when by the time we use only the new animation system.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MySkinnedEntity.m_compAnimationController">
            <summary>
            Shortcut to animation controller component.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MySkinnedEntity.ObtainBones">
            <summary>
            Get the bones from the model and create a bone class object for
            each bone. We use our bone class to do the real animated bone work.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MySkinnedEntity.TryGetAnimationDefinition(System.String,VRage.Game.Definitions.Animation.MyAnimationDefinition@)">
            <summary>
            Try getting animation definition matching given subtype name.
            VRage TODO: dependency on MyDefinitionManager, do we really need it here?
                        backward compatibility is for modders?
                        move backward compatibility to MyDefinitionManager.TryGetAnimationDefinition? then we do not need this method
                        
                        marked as obsolete, needs to be resolved
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MySkinnedEntity.ProcessCommands">
            <summary>
            Process all commands in the animation queue at once. 
            If any command is generated during flushing, it will be processed later.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MySkinnedEntity.AddBoneDecal(System.UInt32,System.Int32)">
            <param name="position">Position of the decal in the binding pose</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MySkinnedEntity.FlushAnimationQueue">
            <summary>
            Process all commands in the animation queue at once. If any command is generated during flushing, it is processed as well.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MySkinnedEntity.ProcessCommand(Sandbox.Game.Entities.MyAnimationCommand@)">
            <summary>
            Process single animation command.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MySkinnedEntity.AddCommand(Sandbox.Game.Entities.MyAnimationCommand,System.Boolean)">
            <summary>
            Enqueue animation command. Parameter sync is used in child classes.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MySkinnedEntity.OnAnimationPlay(VRage.Game.Definitions.Animation.MyAnimationDefinition,Sandbox.Game.Entities.MyAnimationCommand,System.String@,Sandbox.Game.Entities.MyFrameOption@,System.Boolean@)">
            <summary>
            Virtual method called when animation is started, used in MyCharacter.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Character.MyCharacter.m_bodyCapsules">
            <summary>
            This is now generated dynamically as some character's don't have the same skeleton as human characters.
            m_bodyCapsules[0] will always be head capsule
            If the model has ragdoll model, the capsules are generated from the ragdoll
            If the model is missing the ragdoll, the capsules are generated with dynamically determined parameters, which may not always be correct
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.MyCharacter.GetRealModel(System.String,VRageMath.Vector3@)">
            <summary>
            Backwards compatibility for old character model.
            </summary>
            <param name="asset"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.MyCharacter.CheckExistingStatComponent">
            <summary>
            Log invalid stat component, can happen for old character mod which use old stat definition (must be rewritten to component definition),
            character entity container has to be defined in EntityContainers.sbc and has to contain stat component (see Default_astronaut definition).  
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Character.MyCharacter.m_lastGetViewWasDead">
            <summary>
            Character was dead during last GetViewMatrix call.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Character.MyCharacter.m_getViewAliveWorldMatrix">
            <summary>
            Camera world matrix rotation last call of GetViewMatrix when character was still alive.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.MyCharacter.GetViewMatrix">
            <summary>
            Get view matrix for camera.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.MyCharacter.GetIntersectionWithLine(VRageMath.LineD@,Sandbox.Game.Entities.Character.MyCharacterHitInfo@,VRage.Game.Components.IntersectionFlags)">
            <summary>
            Returns closest hit from line start position.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.MyCharacter.FindBestBone(System.Int32,VRageMath.Vector3D@,VRageMath.Matrix@)">
            <summary>
            Projects hit position and bone transformations on capsule axis and finds best bone
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.MyCharacter.FindWeaponItemByDefinition(VRage.Game.MyDefinitionId)">
            <summary>
            This method finds the given weapon in the character's inventory. The weapon type has to be supplied
            either as PhysicalGunObject od weapon entity (e.g. Welder, CubePlacer, etc...).
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.MyCharacter.CreateCharacter(VRageMath.MatrixD,VRageMath.Vector3,System.String,System.String,System.Nullable{VRageMath.Vector3},Sandbox.Definitions.MyBotDefinition,System.Boolean,System.Boolean,Sandbox.Game.Entities.MyCockpit,System.Boolean,System.UInt64)">
            <summary>
            This will just spawn new character, to take control, call respawn on player
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.MyCharacter.VRage#Game#Entity#UseObject#IMyUseObject#Use(VRage.Game.Entity.UseObject.UseActionEnum,VRage.ModAPI.IMyEntity)">
            <summary>
            Uses object by specified action
            Caller calls this method only on supported actions
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.MyCharacter.VRage#Game#Entity#UseObject#IMyUseObject#GetActionInfo(VRage.Game.Entity.UseObject.UseActionEnum)">
            <summary>
            Gets action text
            Caller calls this method only on supported actions
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.MyCharacter.GetSuitGasFillLevel(VRage.Game.MyDefinitionId)">
            <summary>
            Returns the amount of gas left in the suit, values will range between 0 and 1, where 0 is no gas and 1 is full gas.
            </summary>
            <param name="gasDefinitionId">Definition Id of the gas. Common example: new MyDefinitionId(typeof(MyObjectBuilder_GasProperties), "Oxygen")</param>
            <returns></returns>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.MyCharacter.AimedPoint">
            <summary>
            For characters, which are not controlled by player, this will set the aimed point, otherwise the aimed point is determined from camera matrix
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.MyCharacter.IsMagneticBootsActive">
            <summary>
            True if magnetic boots are enabled and currently attached to something.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.MyCharacter.VRage#Game#Entity#UseObject#IMyUseObject#InteractiveDistance">
            <summary>
            Consider object as being in interactive range only if distance from character is smaller or equal to this value
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.MyCharacter.VRage#Game#Entity#UseObject#IMyUseObject#ActivationMatrix">
            <summary>
            Matrix of object, scale represents size of object
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.MyCharacter.VRage#Game#Entity#UseObject#IMyUseObject#RenderObjectID">
            <summary>
            Matrix of object, scale represents size of object
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.MyCharacter.VRage#Game#Entity#UseObject#IMyUseObject#ShowOverlay">
            <summary>
            Show overlay (semitransparent bounding box)
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.MyCharacter.VRage#Game#Entity#UseObject#IMyUseObject#SupportedActions">
            <summary>
            Returns supported actions
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.MyCharacter.VRage#Game#Entity#UseObject#IMyUseObject#ContinuousUsage">
            <summary>
            When true, use will be called every frame
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.MyCharacter.SuitEnergyLevel">
            <summary>
            Returns the amount of energy the suit has, values will range between 0 and 1, where 0 is no charge and 1 is full charge.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.MyCharacter.IsPlayer">
            <summary>
            Returns true is this character is a player character, otherwise false.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.MyCharacter.IsBot">
            <summary>
            Returns true is this character is an AI character, otherwise false.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.Components.MyCharacterRagdollComponent.InitRagdoll">
            <summary>
            Loads Ragdoll data
            </summary>
            <param name="ragDollFile"></param>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.Components.MyCharacterRagdollComponent.UpdateRagdoll">
            <summary>
            Sets the ragdoll pose to bones pose
            </summary> 
        </member>
        <member name="M:Sandbox.Game.Entities.Character.Components.MyCharacterRagdollComponent.SimulateRagdoll">
            <summary>
            Sets the bones pose to ragdoll pose
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyWeldGroupData.UpdateParent(VRage.Game.Entity.MyEntity)">
            <summary>
            Call when node body changes quality type (dynamic/static/doubled)
            Checks if there isnt more suitable parent in the group
            i.e. group parent is dynamic and there is node that is static
            </summary>
            <param name="oldParent">WeldInfo.Parent or self if WeldInfo.Parent is null</param>
            <returns>parent changed</returns>
        </member>
        <member name="M:Sandbox.Game.Components.MyEntityGameLogic.UpdateBeforeSimulation10">
            <summary>
            Called each 10th frame if registered for update10
            </summary>
        </member>
        <member name="M:Sandbox.Game.Components.MyEntityGameLogic.UpdateBeforeSimulation100">
            <summary>
            Called each 100th frame if registered for update100
            </summary>
        </member>
        <member name="M:Sandbox.Game.Components.MyEntityGameLogic.MarkForClose">
            <summary>
            This method marks this entity for close which means, that Close
            will be called after all entities are updated
            </summary>
        </member>
        <member name="E:Sandbox.Game.Components.MyEntityGameLogic.OnMarkForClose">
            <summary>
            This event may not be invoked at all, when calling MyEntities.CloseAll, marking is bypassed
            </summary>
        </member>
        <member name="T:Sandbox.Common.MyRenderDebugInputComponent">
            <summary>
            This debug component can be used to remember debug draws methods, aabbs or matrices to be drawn, even if the event occurs just once
            and data can not be retrieved to render them in next frames.
            </summary>
        </member>
        <member name="F:Sandbox.Common.MyRenderDebugInputComponent.CheckedObjects">
            <summary>
            This list can be used to track down specific objects during runtime debug step -> CheckedObjects.Add(this), and change then this later to -> if (CheckedObjects.Contain(this)) Debugger.Break();
            </summary>
        </member>
        <member name="F:Sandbox.Common.MyRenderDebugInputComponent.AABBsToDraw">
            <summary>
            Add your AABB and Color to draw it every update when this component is enabled
            </summary>
        </member>
        <member name="F:Sandbox.Common.MyRenderDebugInputComponent.MatricesToDraw">
            <summary>
            Add your matrix to be draw every update if this component is enabled
            </summary>
        </member>
        <member name="M:Sandbox.Common.MyRenderDebugInputComponent.Clear">
            <summary>
            Clears the lists.
            </summary>
        </member>
        <member name="M:Sandbox.Common.MyRenderDebugInputComponent.AddMatrix(VRageMath.Matrix,VRageMath.Color)">
            <summary>
            Add matrix to be drawn as axes with OBB
            </summary>
            <param name="mat">World matrix</param>
            <param name="col">Color</param>
        </member>
        <member name="M:Sandbox.Common.MyRenderDebugInputComponent.AddAABB(VRageMath.BoundingBoxD,VRageMath.Color)">
            <summary>
            Add AABB box to be drawn
            </summary>
            <param name="aabb">AABB box in world coords</param>
            <param name="col">Color</param>
        </member>
        <member name="M:Sandbox.Common.MyRenderDebugInputComponent.BreakIfChecked(System.Object)">
            <summary>
            This will break the debugger, if passed object was added to MyRenderDebugInputComponent.CheckedObjects. Use for breaking in the code when you need to break at specific object.
            </summary>        
        </member>
        <member name="E:Sandbox.Common.MyRenderDebugInputComponent.OnDraw">
            <summary>
            Subscribe to this event debug draw callbacks for specific objects to be draw independetly
            </summary>
        </member>
        <member name="M:Sandbox.Common.MyModelObj.GetLineTokens(System.String)">
            <summary>
            Yields an array of tokens for each line in an OBJ or MTL file.
            </summary>
            <remarks>
            OBJ and MTL files are text based formats of identical structure.
            Each line of a OBJ or MTL file is either an instruction or a comment.
            Comments begin with # and are effectively ignored.
            Instructions are a space dilimited list of tokens. The first token is the
            instruction type code. The tokens which follow, are the arguments to that
            instruction. The number and format of arguments vary by instruction type.
            </remarks>
            <param name="filename">Full path of file to read.</param>
            <param name="identity">Identity of the file being read. This is modified to
            include the current line number in case an exception is thrown.</param>
            <returns>Element 0 is the line type identifier. The remaining elements are
            arguments to the identifier's operation.</returns>
        </member>
        <member name="M:Sandbox.Common.MyModelObj.ParseObjLine(System.String[])">
            <summary>
            Parses and executes an individual line of an OBJ file.
            </summary>
            <param name="lineTokens">Line to parse as tokens</param>
        </member>
        <member name="M:Sandbox.Common.MyModelObj.ParseVector3(System.String[])">
            <summary>
            Parses a Vector3 from tokens of an OBJ file line.
            </summary>
            <param name="lineTokens">X,Y and Z coordinates in lineTokens[1 through 3].
            </param>
        </member>
        <member name="F:Sandbox.Game.Entities.MyCockpit.m_serverSidePilotId">
            <summary>
            Pilot entity id on server. Synchronized to client using RPC.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Blocks.MyProgrammableBlock.RequestRunArgument(System.Collections.Generic.IList{Sandbox.ModAPI.Ingame.TerminalActionParameter},System.Action{System.Boolean})">
            <summary>
            Shows a dialog to configure a custom argument to provide the Run action.
            </summary>
            <param name="list"></param>
            <param name="callback"></param>
        </member>
        <member name="T:Sandbox.Game.Entities.Blocks.MyProgrammableBlock.ScriptTerminationReason">
            <summary>
            Determines why (if at all) a script was terminated.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Blocks.MyProgrammableBlock.ScriptTerminationReason.None">
            <summary>
            The script was not terminated.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Blocks.MyProgrammableBlock.ScriptTerminationReason.NoScript">
            <summary>
            There is no script (assembly) available.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Blocks.MyProgrammableBlock.ScriptTerminationReason.NoEntryPoint">
            <summary>
            No entry point (void Main(), void Main(string argument)) could be found.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Blocks.MyProgrammableBlock.ScriptTerminationReason.InstructionOverflow">
            <summary>
            The maximum allowed number of instructions has been reached.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Blocks.MyProgrammableBlock.ScriptTerminationReason.OwnershipChange">
            <summary>
            The programmable block has changed ownership and must be rebuilt.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Blocks.MyProgrammableBlock.ScriptTerminationReason.RuntimeException">
            <summary>
            A runtime exception happened during the execution of the script.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Blocks.MyProgrammableBlock.ScriptTerminationReason.AlreadyRunning">
            <summary>
            The script is already running (technically not a termination reason, but will be returned if a script tries to run itself in a nested fashion).
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCameraBlock.DrawDebug">
            <summary>
            Draws a frustum representing the valid scanning range, a line representing the last raycast, 
            and a sphere representing the last raycast hit.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCameraBlock.CheckAngleLimits(VRageMath.Vector3D)">
            <summary>
            Checks if the specified direction relative to the camera is within the valid scanning range
            </summary>
            <param name="directionNormalized"></param>
            <returns></returns>
        </member>
        <member name="T:Sandbox.Game.Entities.MyCompoundCubeBlock">
            <summary>
            Cube block which is composed of several cube blocks together with shared compound template name.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCompoundCubeBlock.Add(Sandbox.Game.Entities.Cube.MySlimBlock,System.UInt16@)">
            <summary>
            Adds block to compound (should be used on server only and for generated blocks on local).
            </summary>
            <returns>true if the block has been addded, otherwise false</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCompoundCubeBlock.Add(System.UInt16,Sandbox.Game.Entities.Cube.MySlimBlock)">
            <summary>
            Adds block to compound (should be used for clients).
            </summary>
            <returns>true if the block has been addded, otherwise false</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCompoundCubeBlock.CreateBuilder(VRage.Game.MyObjectBuilder_CubeBlock)">
            <summary>
            Returns compound cube block builder which includes the given block.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCompoundCubeBlock.CreateBuilder(System.Collections.Generic.List{VRage.Game.MyObjectBuilder_CubeBlock})">
            <summary>
            Returns compound cube block builder which includes given blocks.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCompoundCubeBlock.GetIntersectionWithLine_FullyBuiltProgressModels(VRageMath.LineD@,System.Nullable{VRage.Game.Models.MyIntersectionResultLineTriangleEx}@,System.UInt16@,VRage.Game.Components.IntersectionFlags,System.Boolean,System.Boolean)">
            <summary>
            Calculates intersected block with all models replaced by final models. Useful for construction/deconstruction when models are made from wooden construction.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Blocks.MyPistonBase.SetSubpartBodyOffset">
            <summary>
            Subpart body is positioned by Physics.Enabled 
            Since parent entity is this block we need to set Center so that it is positioned 
            correctly according to current extension of piston
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.MyChatHistory.IdentityId">
            <summary>
            Identifies the owner of this chat history
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Character.MyChatHistory.PlayerChatHistory">
            <summary>
            Chat history with other players. Key identifies the other member of the conversation (PlayerChatHistory.PlayerId).
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Sandbox.Game.Entities.Character.MyFactionChatItem.PlayersToSendTo" -->
        <member name="T:Sandbox.Game.Entities.Character.MyInverseKinematics">
            <summary>
            OBSOLETE CLASS, DO NOT USE IT, PREFER MyAnimationInverseKinematics from VRage.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.MyInverseKinematics.SolveCCDIk(VRageMath.Vector3@,System.Collections.Generic.List{VRageRender.Animations.MyCharacterBone},System.Single,System.Int32,System.Single,VRageMath.Matrix@,VRageRender.Animations.MyCharacterBone,System.Boolean)">
            <summary>
            Solve 3D InverseKinematics problem, 3DOF using CCD IK Solver, no constrains
            </summary>
            <param name="desiredEnd">is the local vector in the model space which should be our end effector position</param>
            <param name="bones">this is the list of bones on which we do inverse kinematics</param>
            <returns>true if solved - desiredEnd almost reached, otherwise return false</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.MyInverseKinematics.SolveTwoJointsIk(VRageMath.Vector3@,VRageRender.Animations.MyCharacterBone,VRageRender.Animations.MyCharacterBone,VRageRender.Animations.MyCharacterBone,VRageMath.Matrix@,VRageMath.Matrix,VRageRender.Animations.MyCharacterBone,System.Boolean)">
            <summary>
            Analytic solutions useful fo hands or feet, all in local model space
            </summary>
            <param name="desiredEnd">in local model space</param>
            <param name="firstBone"></param>
            <param name="secondBone"></param>
            <param name="finalTransform"></param>
            <param name="finalBone"></param>
            <param name="allowFinalBoneTranslation"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.Entities.Character.MyInverseKinematics.GetClosestFootSupportPosition(VRage.Game.Entity.MyEntity,VRage.Game.Entity.MyEntity,VRageMath.Vector3,VRageMath.Vector3,VRageMath.Vector3,VRageMath.Matrix,System.Single,System.Single,System.UInt32)">
            <summary>
            Finds the closest foot support position using raycast - should raycast from start and from end of the foot
            </summary>
            <param name="from">Vector3 from - the world coordinate from witch to ray cast - usually the foot world position on the ground</param>
            <param name="up">Vector3 up - defining the world up vector used to raycast to the ground</param>
            <param name="WorldMatrix">is the world matrix of the model</param>
            <param name="castUpLimit">is the height from where we start casting</param>
            <param name="castDownLimit">is the height to how much deep we cast</param>
            <param name="footDimension">this is the foot dimension, used to create shape cast and also ankle's height, X = width, Z = length, Y = height</param>
            <returns>returns CashHit if hit or null otherwise</returns>
        </member>
        <member name="T:Sandbox.Game.Entities.Inventory.MyInventoryAggregate">
            <summary>
            This class implements basic functionality for the interface IMyInventoryAggregate. Use it as base class only if the basic functionality is enough.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Inventory.MyInventoryAggregate.TransferItemsFrom(VRage.Game.Entity.MyInventoryBase,VRage.Game.ModAPI.Ingame.IMyInventoryItem,VRage.MyFixedPoint)">
            <summary>
            Transfers safely given item from inventory given as parameter to this instance.
            </summary>
            <returns>true if items were succesfully transfered, otherwise, false</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.Inventory.MyInventoryAggregate.GetInventoryCount">
            <summary>
            Returns number of embedded inventories - this inventory can be aggregation of other inventories.
            </summary>
            <returns>Return one for simple inventory, different number when this instance is an aggregation.</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.Inventory.MyInventoryAggregate.IterateInventory(System.Int32,System.Int32)">
            <summary>
            Search for inventory having given search index. 
            Aggregate inventory: Iterates through aggregate inventory until simple inventory with matching index is found.
            Simple inventory: Returns itself if currentIndex == searchIndex.
            
            Usage: searchIndex = index of inventory being searched, leave currentIndex = 0.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Inventory.MyInventoryAggregate.FixInputOutputInventories(Sandbox.Game.Entities.Inventory.MyInventoryAggregate,Sandbox.Game.MyInventoryConstraint,Sandbox.Game.MyInventoryConstraint)">
            <summary>
            Naive looking for inventories with some items..
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Inventory.MyInventoryAggregate.InventoryCount">
            <summary>
            Returns number of inventories of MyInventory type contained in this aggregate
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyBlockBuilderBase.FindClosestPlacementObject(Sandbox.Game.Entities.MyCubeGrid@,Sandbox.Game.Entities.MyVoxelBase@)">
            <summary>
            Finds closest object (grid or voxel map) for placement of blocks .
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyBlockBuilderBase.IntersectExact(Sandbox.Game.Entities.MyCubeGrid,VRageMath.MatrixD@,VRageMath.Vector3D@,Sandbox.Game.Entities.Cube.MySlimBlock@)">
            <summary>
            Calculates exact intersection point (in uniform grid coordinates) of eye ray with the given grid of all cubes.
            Returns position of intersected object in uniform grid coordinates
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyBlockBuilderBase.GetIntersectedBlockData(VRageMath.MatrixD@,VRageMath.Vector3D@,Sandbox.Game.Entities.Cube.MySlimBlock@,System.Nullable{System.UInt16}@)">
            <summary>
            Calculates exact intersection point (in uniform grid coordinates) from stored havok's hit info object obtained during FindClosest grid.
            Returns position of intersected object in uniform grid coordinates.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyCubeBuilder.SEMI_TRANSPARENT_BOX_MODIFIER">
            <summary>
            Used for rescaling aabb in the Draw semi transparent method.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.CaluclateDynamicModePos(VRageMath.Vector3D,System.Boolean)">
            <summary>
            Calculates final position of the block in through gizmo.
            </summary>
            <param name="defaultPos">Proposed position.</param>
            <returns>If True than success.</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.IsDynamicOverride">
            <summary>
            Allows to override normal behaviour of Cube builder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.SetSurvivalIntersectionDist">
            <summary>
            Refresh intersection distance for survival. Usable when switching grid size.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.HandleCurrentGridInput(VRage.Utils.MyStringId)">
            <summary>
            Handles input related when current grid being targeted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.GetStandardRotationAxisAndDirection(System.Int32,System.Int32@)">
            <summary>
            Standard rotation, vertical around grid's Y, Roll around block's Z, and perpendicular vector to both (for parallel case used block's right). Returns axis index and sets direction.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.IsCubeSizeAvailable(Sandbox.Definitions.MyCubeBlockDefinition)">
            <summary>
            Indicates if cube block size is avaliable for current cube builder state.
            </summary>
            <param name="blockDef">Block definition to check for.</param>
            <returns>True if it is avaliable.</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.UpdateNotificationBlockLimit">
            <summary>
            Update notification telling player how many blocks they have left if per player limits are present
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.ShowNotificationBlockNotAvailable(VRage.Utils.MyStringId,System.String,VRage.Utils.MyStringId)">
            <summary>
            Notification visible when looking at grid whose size is nto supported current block.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.StartBuilding(System.Nullable{VRageMath.Vector3I}@,System.Nullable{VRageMath.Vector3I})">
            <summary>
            Starts continuous building. Do not put any gizmo related stuff here.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.StartRemoving(System.Nullable{VRageMath.Vector3I},System.Nullable{VRageMath.Vector3I}@)">
            <summary>
            Starts continuous removing. Do not put any gizmo related stuff here.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.ContinueBuilding(System.Boolean,System.Nullable{VRageMath.Vector3I},System.Nullable{VRageMath.Vector3I},System.Nullable{VRageMath.Vector3I}@,VRageMath.Vector3I,VRageMath.Vector3I)">
            <summary>
            Continues building/removing. Do not put any gizmo related stuff here.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.StopBuilding(System.Boolean,System.Nullable{VRageMath.Vector3I}@,System.Nullable{VRageMath.Vector3I}@,System.Nullable{VRageMath.Vector3I}@,VRageMath.Vector3I,VRageMath.Vector3I,VRageMath.Vector3I,VRageMath.Matrix@,Sandbox.Definitions.MyCubeBlockDefinition)">
            <summary>
            Stops continuous building/removing. Do not put any gizmo related stuff here.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.SpawnStaticGrid(Sandbox.Definitions.MyCubeBlockDefinition,VRage.Game.Entity.MyEntity,VRageMath.MatrixD,VRageMath.Vector3,Sandbox.Game.Entities.MyCubeBuilder.SpawnFlags,System.Int64,System.Action)">
            <summary>
            Spawn static grid - must have identity rotation matrix! If dontAdd is true, grid won't be added to enitites. Also it won't have entityId set.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.BeforeCurrentGridChange(Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Triggered when Current Grid is changed to new one.
            </summary>
            <param name="newCurrentGrid">New grid that will replace the old one.</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.TriggerRespawnShipNotification(Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Checks if any player is an owner of particular respawn ship/cart,
            and if yes than shows warning about desapearing respawn ship/cart.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeBuilder.TransformLargeGridHitCoordToSmallGrid(VRageMath.Vector3D,VRageMath.MatrixD,System.Single)">
            <summary>
            Converts large grid hit coordinates for small cubes. Allows placement of small grids to large grids.
            Returns coordinates of small grid (in large grid coordinates) which touches large grid in the hit position.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyCubeBuilder.ToolbarBlockDefinition">
            <summary>
            Current block definition for toolbar.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Cube.IMyBlockAdditionalModelGenerator">
            <summary>
            Interface for implementation of additional geometry in cube grids (automatic placement of additional geometry).
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.IMyBlockAdditionalModelGenerator.Initialize(Sandbox.Game.Entities.MyCubeGrid,VRage.Game.MyCubeSize)">
            <summary>
            initializes the generator with grid and its size. Note that the grid is not fully initializd yet. 
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.IMyBlockAdditionalModelGenerator.Close">
            <summary>
            Closes the generator, use for unregistering from other objects.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.IMyBlockAdditionalModelGenerator.EnableGenerator(System.Boolean)">
            <summary>
            Enables/disable generator.
            </summary>
            <param name="enable"></param>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.IMyBlockAdditionalModelGenerator.BlockAddedToMergedGrid(Sandbox.Game.Entities.Cube.MySlimBlock)">
            <summary>
            Block was added but causes merging grids (so it was not catched in events OnBlockAdded/OnBLockRemoved because generator is disabled during merging).
            </summary>
            <param name="block"></param>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.IMyBlockAdditionalModelGenerator.GenerateBlocks(Sandbox.Game.Entities.Cube.MySlimBlock)">
            <summary>
            Generate blocks for the given generating block (build progress exceeeds some value where generated objects should appear).
            </summary>
            <param name="block"></param>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.IMyBlockAdditionalModelGenerator.UpdateAfterSimulation">
            <summary>
            Update generator after simulation. Add/remove generated blocks. Called from grid.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.IMyBlockAdditionalModelGenerator.UpdateBeforeSimulation">
            <summary>
            Update generator before simulation. Add/remove generated blocks. Called from grid.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.IMyBlockAdditionalModelGenerator.UpdateAfterGridSpawn(Sandbox.Game.Entities.Cube.MySlimBlock)">
            <summary>
            Updates generated objects with the block after grid has been spawn (grid is not in scene when creating blocks in spawned grid so this method must be called after it is initialized).
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.IMyBlockAdditionalModelGenerator.GetGeneratingBlock(Sandbox.Game.Entities.Cube.MySlimBlock)">
            <summary>
            Returns generating block which generated the given one.
            </summary>
            <param name="generatedBlock">Generated block</param>
            <returns>Generating block or null.</returns>
        </member>
        <member name="T:Sandbox.Game.Entities.Cube.MyAdditionalModelGeneratorBase">
            <summary>
            Base class for additional model geometry with common implementation.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyAdditionalModelGeneratorBase.CubeExistsOnPositions(System.Collections.Generic.List{VRageMath.Vector3I})">
            <summary>
            Return true if any not generated cube exists in the given positions.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyAdditionalModelGeneratorBase.AddGeneratedBlock(Sandbox.Game.Entities.Cube.MySlimBlock,Sandbox.Definitions.MyCubeBlockDefinition,VRageMath.Vector3I,VRageMath.Vector3I,VRageMath.Vector3I)">
            <summary>
            Adds generated block to add block locations.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyAdditionalModelGeneratorBase.RemoveGeneratedBlock(VRage.Utils.MyStringId,System.Collections.Generic.List{Sandbox.Game.Entities.Cube.MyAdditionalModelGeneratorBase.MyGeneratedBlockLocation})">
            <summary>
            Removes generated blocks in the given locations.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection">
            <summary>
            Class which handles small block to large one connection. Such connection creates block and grid groups so connected grids can be copied together.
            It is done on server and client, but client uses it only for groups (copying of all grids together), dynamic grid testing is processed on server only.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.GetSurroundingBlocksFromStaticGrids(Sandbox.Game.Entities.Cube.MySlimBlock,VRage.Game.MyCubeSize,System.Collections.Generic.HashSet{Sandbox.Game.Entities.MyCubeBlock})">
            <summary>
            Writes all surrounding blocks around the given one with the given size.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.GetSurroundingBlocksFromStaticGrids(Sandbox.Game.Entities.Cube.MySlimBlock,VRage.Game.MyCubeSize,System.Collections.Generic.HashSet{Sandbox.Game.Entities.Cube.MySlimBlock})">
            <summary>
            Writes all surrounding blocks around the given one with the given size.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.CheckNeighborBlocks(Sandbox.Game.Entities.Cube.MySlimBlock,VRageMath.BoundingBoxD,Sandbox.Game.Entities.MyCubeGrid,System.Collections.Generic.List{Sandbox.Game.Entities.Cube.MySlimBlock})">
            <summary>
            Checks if blocks are neigbors to block(s) in aabbForNeighbors.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.ConnectSmallToLargeBlock(Sandbox.Game.Entities.Cube.MySlimBlock,Sandbox.Game.Entities.Cube.MySlimBlock)">
            <summary>
            Adds small/large block connection.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.DisconnectSmallToLargeBlock(Sandbox.Game.Entities.Cube.MySlimBlock,Sandbox.Game.Entities.MyCubeGrid,Sandbox.Game.Entities.Cube.MySlimBlock,Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Removes small/large block connection. Note that grids in parameters can be different from the ones in slimblock! Used for grid splits, etc.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.DisconnectSmallToLargeBlock(Sandbox.Game.Entities.Cube.MySlimBlock,Sandbox.Game.Entities.Cube.MySlimBlock)">
            <summary>
            Removes small/large block connection.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.AddGridSmallToLargeConnection(Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Adds possible connections of grid blocks.  
            </summary>
            <returns>Returns true when small/large block connection has been added otherwise false.</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.AddBlockSmallToLargeConnection(Sandbox.Game.Entities.Cube.MySlimBlock)">
            <summary>
            Adds small/large block static connections and creates links. Returns true if the block connects to any other block.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.RemoveBlockSmallToLargeConnection(Sandbox.Game.Entities.Cube.MySlimBlock)">
            <summary>
            Block has been removed and all small/large static connections must be removed.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.GridConvertedToDynamic(Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Grid has been converted to dynamic, all small to large connections must be removed.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.TestGridSmallToLargeConnection(Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Tests whether the given small grid connects to any large static block.
            </summary>
            <returns>true if small grid connects to a latge grid otherwise false</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.GetSmallBlockAddDirection(VRageMath.BoundingBoxD@,VRageMath.BoundingBoxD@,VRageMath.BoundingBoxD@)">
            <summary>
            Returns small block add direction (returns large block add normal). 
            Assumes that smallBlockWorldAabb intersects largeBlockWorldAabb and smallBlockWorldAabbReduced does not intersects largeBlockWorldAabb.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.SmallBlockConnectsToLarge(Sandbox.Game.Entities.Cube.MySlimBlock,VRageMath.BoundingBoxD@,Sandbox.Game.Entities.Cube.MySlimBlock,VRageMath.BoundingBoxD@)">
            <summary>
            Returns true if the given small block connects to large one. One of the given AABB's is inflated with 0.05 to reduce inaccuracies.
            </summary>
            <param name="smallBlock">small block</param>
            <param name="smallBlockWorldAabb">small block world AABB</param>
            <param name="largeBlock">large block</param>
            <param name="largeBlockWorldAabb">large block wotld AABB</param>
            <returns>true when connected</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.RemoveChangedLargeBlockConnectionToSmallBlocks(Sandbox.Game.Entities.Cube.MySlimBlock,System.Collections.Generic.HashSet{Sandbox.Game.Entities.MyCubeGrid})">
            <summary>
            Remove all large block connections to small blocks (large block has been removed or its grid has been changed to dynamic).
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.SmallGridIsStatic(Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Returns true if the given small grid connects to a large static grid, otherwise false.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.BeforeGridSplit_SmallToLargeGridConnectivity(Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Grid will be split. Called before split. All connections with the grid will be removed.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.AfterGridSplit_SmallToLargeGridConnectivity(Sandbox.Game.Entities.MyCubeGrid,System.Collections.Generic.List{Sandbox.Game.Entities.MyCubeGrid})">
            <summary>
            Grid has been split. All connections will be recreated for original grid and also for all splits.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.BeforeGridMerge_SmallToLargeGridConnectivity(Sandbox.Game.Entities.MyCubeGrid,Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Grids will be merged. Called before merge. All grids connections will be removed.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridSmallToLargeConnection.AfterGridMerge_SmallToLargeGridConnectivity(Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Grid has been merged. All connections will be recreated.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Cube.MyCubeGridSystems.GasSystem">
            <summary>
            Can be null if Oxygen option is disabled
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Cube.MyGridClipboardAdvanced">
            <summary>
            Enhanced clipboard which supports dynamic placing, allow rotation of static grid.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.MyGridClipboard.m_touchingGrids">
            <summary>
            Grids that are around pasted grid. (In proximity, possible for merge)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridClipboard.IsWithinWorldLimits">
            <summary>
            Determines whether the placed grid still fits within block limits set by server
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridClipboard.IsMergeWithinWorldLimits">
            <summary>
            Determines whether the placed grid still fits within block limits set by server after it merges with a nearby grid
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridClipboard.CheckPastedBlocks">
            <summary>
            Checks the pasted object builder for non-existent blocks (e.g. copying from world with a cube block mod to a world without it)
            </summary>
            <returns>True when the grid can be pasted</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridClipboard.CheckPastedScripts">
            <summary>
            Checks the pasted object builder for scripts inside programmable blocks
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridClipboard.GetTouchingGrids(Sandbox.Game.Entities.MyCubeGrid,VRage.Game.ObjectBuilders.Definitions.SessionComponents.MyGridPlacementSettings)">
            <summary>
            Gets grids that are touching given grid. It's used for diciding if grids should be merged on later stage.
            </summary>
            <param name="grid">Grid to be tested.</param>
            <param name="settings">Settings used for the test.</param>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridClipboard.UpdateColor(VRageMath.Vector3)">
            <summary>
            Used to update the color of a new ship/station block when the player switches it
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridClipboardAdvanced.ConvertGridBuilderToStatic(VRage.Game.MyObjectBuilder_CubeGrid,VRageMath.MatrixD)">
            <summary>
            Converts the given grid to static with the world matrix. Instead of grid (which must have identity rotation for static grid) we transform blocks in the grid.
            </summary>
            <param name="originalGrid">grid to be transformed</param>
            <param name="worldMatrix">target world transform</param>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridClipboardAdvanced.ConvertRotatedGridBlockToStatic(VRageMath.MatrixI@,VRage.Game.MyObjectBuilder_CubeBlock)">
            <summary>
            Converts the given block with the given matrix for static grid.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridClipboardAdvanced.ConvertRotatedGridCompoundBlockToStatic(VRageMath.MatrixI@,VRage.Game.MyObjectBuilder_CompoundCubeBlock)">
            <summary>
            Transforms given compound block with matrix for static grid. Rotation of block is not changed.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridClipboardAdvanced.GetFreeSpacePlacementPositionGridAabbs(System.Boolean,System.Boolean@)">
            <summary>
            Casts preview grids aabbs and get shortest distance. Returns shortest intersection or null.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Cube.MyGridPartsRenderData">
            <summary>
            Helper class for rendering additional grid models - roof tops, roof edges, etc). Instances must be rotated with ortho matrices only.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridPartsRenderData.AddInstance(System.Int32,VRageMath.Matrix@,VRageMath.BoundingBox,VRageMath.Vector4)">
            <summary>
            Adds instance of the given model and returns its internal id which can be used for removing the instance. Local matrix specified will be changed to internal packed matrix.
            </summary>
            <param name="model"></param>
            <param name="localMatrix">Local transformation matrix. Changed to internal matrix.</param>
            <param name="colorMaskHsv"></param>
        </member>
        <member name="T:Sandbox.Game.Entities.MyIDModule">
            <summary>
            This should be replaced by MyEntityOwnershipComponent
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Cube.MyBlockBuilderRotationHints">
            <summary>
            Calculates and draws rotation hints.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Cube.MyMultiBlockClipboard">
            <summary>
             Multiblock clipboard for building multiblocks. Can be used for building only (not copy/paste) because it uses definitions not real tile grid/block data.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyMultiBlockClipboard.DetectTouchingGrid">
            <summary>
            Detects a grid where multiblock can be merged.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.EnvironmentItems.MyDestroyableItems">
            <summary>
            Class for managing all static bushes as one entity.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.EnvironmentItems.MyEnvironmentItems">
            <summary>
            Base class for collecting environment items (of one type) in entity. Useful for drawing of instanced data, or physical shapes instances.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.EnvironmentItems.MyEnvironmentItems.BeginSpawn(Sandbox.Definitions.MyEnvironmentItemsDefinition,System.Boolean,System.Int64)">
            <summary>
            Spawn Environment Items instance (e.g. forest) object which can be then used for spawning individual items (e.g. trees).
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.EnvironmentItems.MyEnvironmentItems.SpawnItem(Sandbox.Game.Entities.EnvironmentItems.MyEnvironmentItems.MyEnvironmentItemsSpawnData,Sandbox.Definitions.MyEnvironmentItemDefinition,VRageMath.Vector3D,VRageMath.Vector3D,System.Int32,System.Boolean)">
            <summary>
            Spawn environment item with the definition subtype on world position.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.EnvironmentItems.MyEnvironmentItems.EndSpawn(Sandbox.Game.Entities.EnvironmentItems.MyEnvironmentItems.MyEnvironmentItemsSpawnData,System.Boolean,System.Boolean)">
            <summary>
            Ends spawning - finishes preparetion of items data.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.EnvironmentItems.MyEnvironmentItems.AddItem(Sandbox.Definitions.MyEnvironmentItemDefinition,VRageMath.MatrixD@,VRageMath.BoundingBoxD@,System.Int32,System.Boolean)">
            <summary>
            Adds environment item to internal collections. Creates render and physics data. 
            </summary>
            <returns>True if successfully added, otherwise false.</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.EnvironmentItems.MyEnvironmentItems.PrepareItemsPhysics(Havok.HkStaticCompoundShape,VRageMath.BoundingBoxD@,System.Collections.Generic.Dictionary{VRage.Utils.MyStringHash,Havok.HkShape})">
            <summary>
            Prepares data for renderer and physics. Must be called after all items has been added.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.EnvironmentItems.MyEnvironmentItems.DoDamage(System.Single,System.Int32,VRageMath.Vector3D,VRageMath.Vector3,VRage.Utils.MyStringHash)">
            Default implementation does nothing. If you want env. items to react to damage, subclass this
        </member>
        <member name="M:Sandbox.Game.Entities.EnvironmentItems.MyEnvironmentItems.AddPhysicsShape(VRage.Utils.MyStringHash,VRage.Game.Models.MyModel,VRageMath.MatrixD@,Havok.HkStaticCompoundShape,System.Collections.Generic.Dictionary{VRage.Utils.MyStringHash,Havok.HkShape},System.Int32@)">
            <summary>
            Adds item physics shape to rootShape and returns instance id of added shape instance.
            </summary>
            <returns>true if ite physics shape has been added, otherwise false.</returns>
        </member>
        <member name="T:Sandbox.Game.Entities.EnvironmentItems.MyEnvironmentSector">
            <summary>
            Area of environment items where data is instanced.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.EnvironmentItems.MyEnvironmentSector.AddInstance(VRage.Utils.MyStringHash,System.Int32,System.Int32,VRageMath.Matrix@,VRageMath.BoundingBox,VRageRender.MyInstanceFlagsEnum,System.Single,VRageMath.Vector3)">
            <summary>
            Adds instance of the given model. Local matrix specified might be changed internally for renderer (must be used for removing instances).
            </summary>
            <param name="subtypeId"></param>
            <param name="localMatrix">Local transformation matrix. Changed to internal matrix.</param>
            <param name="colorMaskHsv"></param>
        </member>
        <member name="T:Sandbox.Game.Entities.EnvironmentItems.MyTrees">
            <summary>
            Class for managing all static trees as one entity.
            </summary>
        </member>
        <member name="T:Sandbox.Game.GameSystems.MyDamageSystem">
            <summary>
            This session component has all damage routed through it.  This allows damage tracking, nullification, mitigation and amplification. 
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyDamageSystem.RaiseDestroyed(System.Object,VRage.Game.ModAPI.MyDamageInformation)">
            <summary>
            Raised when an object is destroyed.
            </summary>
            <param name="target">The target object</param>
            <param name="info">Information about the damage</param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyDamageSystem.RaiseBeforeDamageApplied(System.Object,VRage.Game.ModAPI.MyDamageInformation@)">
            <summary>
            Raised before damage is applied.  Can be modified.
            </summary>
            <param name="target">The target object</param>
            <param name="info">Information about the damage.  Can be modified</param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyDamageSystem.RaiseAfterDamageApplied(System.Object,VRage.Game.ModAPI.MyDamageInformation)">
            <summary>
            Raised after damage is applied
            </summary>
            <param name="target">The target object</param>
            <param name="info">Information about the damage</param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyDamageSystem.RegisterDestroyHandler(System.Int32,System.Action{System.Object,VRage.Game.ModAPI.MyDamageInformation})">
            <summary>
            Registers a handler for when an object in game is destroyed.
            </summary>
            <param name="priority">Priority level.  Lower means higher priority.</param>
            <param name="handler">Actual handler delegate</param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyDamageSystem.RegisterBeforeDamageHandler(System.Int32,VRage.Game.ModAPI.BeforeDamageApplied)">
            <summary>
            Registers a handler that is called before an object in game is damaged.  The damage can be modified in this handler.
            </summary>
            <param name="priority">Priority level.  Lower means higher priority.</param>
            <param name="handler">Actual handler delegate</param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyDamageSystem.RegisterAfterDamageHandler(System.Int32,System.Action{System.Object,VRage.Game.ModAPI.MyDamageInformation})">
            <summary>
            Registers a handler that is called after an object in game is damaged.
            </summary>
            <param name="priority">Priority level.  Lower means higher priority.</param>
            <param name="handler">Actual handler delegate</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyFloatingObjectClipboard.CheckPastedFloatingObjects">
            <summary>
            Checks the pasted object builder for non-existent blocks (e.g. copying from world with a cube block mod to a world without it)
            </summary>
            <returns>True when the grid can be pasted</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyFracturedBlock.IsMultiBlockPart(VRage.Game.MyDefinitionId,System.Int32)">
            <summary>
            Returns true if the fractured block is part of the given multiblock, otherwise false.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyFracturedBlock.ConvertFracturedBlocksToComponents(VRage.Game.MyObjectBuilder_CubeGrid)">
            <summary>
            Converts grid builder with fractured blocks to builder with fractured components. Grid entity is created for conversion so it is not light weight.
            Result builder can have remapped entity ids.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyFracturedPiece.SetDataFromHavok(Havok.HkdBreakableShape)">
            <summary>
            Sets model from havok to render component of this entity.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.MyManipulationTool">
            <summary>
            Manipulation tool - used for manipulating target entities. creates fixed constraint between owner's head pivot and target.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyManipulationTool.CheckManipulatedObjectPenetration">
            <summary>
            Checks penetration of manipulated entity with other entities.
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Voxels.MyVoxelGeometry.m_isEmptyCache">
            <summary>
            Lookup saying whether cell has no geometry (bit 1) or either has
            geometry or was invalidated (bit 0).
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyVoxelGeometry.storage_RangeChanged(VRageMath.Vector3I,VRageMath.Vector3I,VRage.Voxels.MyStorageDataTypeFlags)">
            <param name="minVoxelChanged">Inclusive min.</param>
            <param name="maxVoxelChanged">Inclusive max.</param>
        </member>
        <member name="F:Sandbox.Engine.Voxels.MyVoxelPhysicsBody.m_nearbyEntitiesLock">
            <summary>
            Only locked in callbacks, since they can happen during multithreaded havok step.
            Normal update is running on single thread and it doesn't happen at the same time as stepping,
            so no locking is necessary there.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyVoxelPhysicsBody.GetRigidBody(System.Int32)">
            <summary>
            Get the per lod rigid bodies, will assert if LOD1 is not available but is requested.
            </summary>
            <param name="lod"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyVoxelPhysicsBody.InvalidateRange(VRageMath.Vector3I,VRageMath.Vector3I)">
            <param name="minVoxelChanged">Inclusive min.</param>
            <param name="maxVoxelChanged">Inclusive max.</param>
        </member>
        <member name="F:Sandbox.Engine.Voxels.MyVoxelVertex.Ambient">
            <summary>
            Ambient coefficient in range from -1 to 1.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.Conveyors.IMyConveyorEndpoint.GetConveyorLine(Sandbox.Game.GameSystems.Conveyors.ConveyorLinePosition)">
            <summary>
            Returns a connecting line for the given line position, or null, if no such line exists
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.Conveyors.IMyConveyorEndpoint.SetConveyorLine(Sandbox.Game.GameSystems.Conveyors.ConveyorLinePosition,Sandbox.Game.GameSystems.Conveyors.MyConveyorLine)">
            <summary>
            Changes a conveyor line of this block
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyFracturedPiecesManager.GetPieceFromPool(System.Int64,System.Boolean)">
            <summary>
            
            </summary>
            <param name="entityId">server = 0 (it allocates new), client - should recieve from server</param>
            <param name="fromServer"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyGravityProviderSystem.GetStrongestNaturalGravityWell(VRageMath.Vector3D,Sandbox.Game.Entities.IMyGravityProvider@)">
            <summary>
            Returns the planet that has the most influential gravity well in the given world point.
            The most influential gravity well is defined as the planet that has the highest gravity in the point and
            if no such planet is found, it returns the planet, whose gravity well is the closest to the given point.
            </summary>
            <param name="worldPosition">Position to test for the strongest gravity well</param>
            <returns>Planet that has the most influential gravity well in the given world point</returns>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyGravityProviderSystem.IsPositionInNaturalGravity(VRageMath.Vector3D,System.Double)">
            <summary>
            This quickly checks if a given position is in any natural gravity.
            </summary>
            <param name="position">Position to check</param>
            <param name="sphereSize">Sphere size to test with.</param>
            <returns>True if there is natural gravity at this position, false otherwise.</returns>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyGravityProviderSystem.DoesTrajectoryIntersectNaturalGravity(VRageMath.Vector3D,VRageMath.Vector3D,System.Double)">
            <summary>
            Checks if the specified trajectory intersects any natural gravity wells.
            </summary>
            <param name="start">Starting point of the trajectory.</param>
            <param name="end">Destination of the trajectory.</param>
            <param name="raySize">Size of the ray to test with. (Cylinder test)</param>
            DI: Do you mean capsule?
            <returns></returns>
        </member>
        <member name="T:Sandbox.Game.GameSystems.MyOxygenRoomLink">
            <summary>
            Used as a pointer so that we can change rooms fast without iterating through all of the blocks
            </summary>
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MySyncDestructions.RemoveFracturedPiecesRequest(System.UInt64,VRageMath.Vector3D,System.Single)">
            <summary>
            WARNING: OLD METHOD. Do not use. use MyDecaySystem now.
            </summary>
            <param name="userId"></param>
            <param name="center"></param>
            <param name="radius"></param>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.AddPOI(VRageMath.Vector3D,System.Text.StringBuilder,VRage.Game.MyRelationsBetweenPlayerAndBlock)">
            <summary>
            Adds a generic POI, styled like a GPS coordinate.
            Currently only used to draw a center-of-the-world marker.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.AppendDistance(System.Text.StringBuilder,System.Double)">
            <summary>
            Appends the distance in meters, kilometers, light seconds or light years to the string builder.
            Rounded to 2 decimals, i.e. 12.34 meters.
            </summary>
            <param name="stringBuilder">The string builder to be appended to.</param>
            <param name="distance">The distance in meters to be appended.</param>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.Reset">
            <summary>
            Clears out all data and resets the POI for re-use.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.SetState(VRageMath.Vector3D,Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.PointOfInterestType,VRage.Game.MyRelationsBetweenPlayerAndBlock)">
            <summary>
            Sets the POI state
            </summary>
            <param name="position">World position of the POI.</param>
            <param name="type">POI Type, grid, ore, gps, etc.</param>
            <param name="relationship">Relationship of the local player to this POI</param>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.SetEntity(VRage.Game.Entity.MyEntity)">
            <summary>
            Stores the entity that goes with this POI
            </summary>
            <param name="entity">MyEntity that this POI is for</param>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.SetText(System.Text.StringBuilder)">
            <summary>
            Sets the text message for this POI, limited to MaxTextLength characters.
            </summary>
            <param name="text">The text message to set, limited to MaxTextLength characters.</param>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.SetText(System.String)">
            <summary>
            Sets the text message for this POI, limited to MaxTextLength characters.
            </summary>
            <param name="text">The text message to set, limited to MaxTextLength characters.</param>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.AddPOI(Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest)">
            <summary>
            Adds another POI to this POI, turning this into a POI group.
            </summary>
            <param name="poi"></param>
            <returns>True if POI was added, false if not. Probable cause for failure is that this is not a group POI.</returns>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.IsPOINearby(Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest,VRageMath.Vector3D,System.Double)">
            <summary>
            Checks if some given POI is within a radius matching an angle from the POV of a given location.
            </summary>
            <param name="poi">POI to check</param>
            <param name="cameraPosition">Position from which to check.</param>
            <param name="angle">Angle within the POI must fall from the camera position's POV, defaults to ClusterAngle.</param>
            <returns>True if it is within the radius, false otherwise.</returns>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.GetColorAndFontForRelationship(VRage.Game.MyRelationsBetweenPlayerAndBlock,VRageMath.Color@,VRageMath.Color@,System.String@)">
            <summary>
            Retrieves font and colouring information for a relationship.
            </summary>
            <param name="relationship"></param>
            <param name="color"></param>
            <param name="fontColor"></param>
            <param name="font"></param>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.GetPOIColorAndFontInformation(VRageMath.Color@,VRageMath.Color@,System.String@)">
            <summary>
            Returns the POI color and font information.
            </summary>
            <param name="poiColor">The colour of the POI.</param>
            <param name="fontColor">The colour that should be used with this font.</param>
            <param name="font">The font to be used for this POI.</param>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.Draw(Sandbox.Game.GUI.HudViewers.MyHudMarkerRender)">
            <summary>
            Draws this POI
            </summary>
            <param name="renderer">MyHudMarkerRender instance that performs the rendering.</param>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.GetSignificantGroupPOIs">
            <summary>
            Returns the most significant POI for each relationship type within the group.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.IsPoiAtHighAlert(Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest)">
            <summary>
            Checks if this POI has any kind of hostile activity nearby, by comparing it against the other elements in the group.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.IsGrid">
            <summary>
            Checks if the current POI is a grid.
            </summary>
            <returns>True if it's a grid, false otherwise.</returns>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.DrawIcon(Sandbox.Game.GUI.HudViewers.MyHudMarkerRender,Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.PointOfInterestType,VRage.Game.MyRelationsBetweenPlayerAndBlock,VRageMath.Vector2,VRageMath.Color,System.Single)">
            <summary>
            Draws an icon for the POI
            </summary>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.GetIconForRelationship(VRage.Game.MyRelationsBetweenPlayerAndBlock)">
            <summary>
            Returns the icon path for the marker images for each relationship.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.DrawIcon(Sandbox.Game.GUI.HudViewers.MyHudMarkerRender,System.String,VRageMath.Vector2,VRageMath.Color,System.Single)">
            <summary>
            Draws a texture based icon
            </summary>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.TryComputeScreenPoint(VRageMath.Vector3D,VRageMath.Vector2@,System.Boolean@)">
            <summary>
            Tries to compute the screenpoint for this POI from the main camera's PoV. May fail if the projection is invalid.
            projectedPoint2D will be set to Vector2.Zero if it was not possible to project.
            </summary>
            <param name="worldPosition">The world position to project to the screen.</param>
            <param name="projectedPoint2D">The screen position [-1, 1] by [-1, 1]</param>
            <param name="isBehind">Whether or not the position is behind the camera.</param>
            <param name="distance">Distance to the camera.</param>
            <returns>True if it could project, false otherwise.</returns>
        </member>
        <member name="M:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.ComparePointOfInterest(Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest,Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest)">
            <summary>
            Compares two POIs according to some pre-defined metrics
            </summary>
        </member>
        <member name="F:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.PointOfInterestType.Unknown">
            <summary>
            Used for anything unknown
            </summary>
        </member>
        <member name="F:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.PointOfInterestType.Target">
            <summary>
            Used for turret targets
            </summary>
        </member>
        <member name="F:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.PointOfInterestType.Group">
            <summary>
            Used for grouped POIs
            </summary>
        </member>
        <member name="F:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.PointOfInterestType.Ore">
            <summary>
            Used for ore
            </summary>
        </member>
        <member name="F:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.PointOfInterestType.Hack">
            <summary>
            Used for hacked blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.PointOfInterestType.UnknownEntity">
            <summary>
            Used for grids outside of grid identification range
            </summary>
        </member>
        <member name="F:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.PointOfInterestType.Character">
            <summary>
            Used for characters
            </summary>
        </member>
        <member name="F:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.PointOfInterestType.SmallEntity">
            <summary>
            Used for small entities
            </summary>
        </member>
        <member name="F:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.PointOfInterestType.LargeEntity">
            <summary>
            Used for large entities
            </summary>
        </member>
        <member name="F:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.PointOfInterestType.StaticEntity">
            <summary>
            Used for static entities (Stations, etc)
            </summary>
        </member>
        <member name="F:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.PointOfInterestType.GPS">
            <summary>
            Used for GPS coordinates
            </summary>
        </member>
        <member name="F:Sandbox.Game.GUI.HudViewers.MyHudMarkerRender.PointOfInterest.PointOfInterestType.ButtonMarker">
            <summary>
            Used for Button Markers
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyGuiBlueprintScreen.CheckDevTag">
            <summary>
            GK: Check this sperately in order not to intervene with loading the prefab
            </summary>
        </member>
        <member name="M:Sandbox.Game.Screens.Helpers.IMyToolbarItemEntity.CompareEntityIds(System.Int64)">
            <summary>
            Returns true if the toolbar item is referring to the specified entity id.
            </summary>
            <param name="entityId">An entity id to compare this toolbar item with.</param>
            <returns>True if the toolbar item refers to the specified entity id, false otherwise.</returns>
        </member>
        <member name="M:Sandbox.Game.Screens.Helpers.MyToolbarItem.Update(VRage.Game.Entity.MyEntity,System.Int64)">
            <summary>
            Return value should contain information about the stuff that changed during the update
            </summary>
        </member>
        <member name="T:Sandbox.Game.Screens.Helpers.MyToolbarItem.ChangeInfo">
            <summary>
            Tells which data of MyToolbarItem changed during an update
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyGuiScreenAdminMenu.RequestSettingFromServer_Implementation">
            <summary>
            Send SM settings back to requester
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyGuiScreenAdminMenu.DownloadSettingFromServer(System.Int32,System.Boolean,Sandbox.Game.Entities.MyTrashRemovalSettings,System.Boolean,Sandbox.Game.Entities.MyTrashRemovalOperation)">
            <summary>
            Catch response on SM settings. Save them and show SM.
            </summary>
            <param name="remInt"></param>
            <param name="isPrev"></param>
            <param name="setting"></param>
            <param name="isPaused"></param>
            <param name="oper"></param>
        </member>
        <member name="F:Sandbox.Game.GUI.MyGuiScreenConsole.MyConsoleKeyTimerController.LastKeyPressTime">
            <summary>
            This is not for converting key to string, but for controling repeated key input with delay
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudObjectiveLine.ResetObjectives">
            <summary>
            Sets first objective as active
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudCharacterInfo.FitsInSmallBackground">
            <summary>
            Indicates that ship info requires only small background on HUD.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sandbox.Game.Gui.MyHudCharacterInfo.BatteryEnergy">
            <summary>
            Battery energy in %.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.MyHudCharacterInfo.HealthRatio">
            <summary>
            Health in %.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.MyHudShipInfo.FuelRemainingTime">
            <summary>
            This time is in hours, as it is computed from MWh (MegaWatt-hours).
            </summary>
        </member>
        <member name="F:Sandbox.Game.Gui.MyHudBlockInfo.Components">
            <summary>
            First component in block component stack is also first in this list
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudCrosshair.AddTemporarySprite(VRage.Game.Gui.MyHudTexturesEnum,VRage.Utils.MyStringId,System.Int32,System.Int32,System.Nullable{VRageMath.Color},System.Single)">
            <summary>
            Adds a temporary sprite to the list of sprites that make up the crosshair
            </summary>
            <param name="spriteEnum">Texture of the sprite to use</param>
            <param name="spriteId">An id that will be checked to prevent adding the same sprite twice</param>
            <param name="timeout">Time the sprite will be visible (includes fadeout time)</param>
            <param name="fadeTime">For how long should the sprite fade out when it disappears</param>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudSelectedObject.SetObjectInternal(VRage.Game.Entity.UseObject.IMyUseObject)">
            <returns>Abort</returns>
        </member>
        <member name="F:Sandbox.Game.Gui.MyHudObjectHighlightStyle.DummyHighlight">
            <summary>
            Old block highlight style
            </summary>
        </member>
        <member name="F:Sandbox.Game.Gui.MyHudObjectHighlightStyle.OutlineHighlight">
            <summary>
            Contour highlight style
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.INVALID">
            <summary>
            INVALID TEXT WRAPPER ENUM
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Afterburner">
            <summary>
            Sprint
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Drill">
            <summary>
            Drill
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_FirePrimaryWeapon">
            <summary>
            Use tool / Fire weapon
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_FireSecondaryWeapon">
            <summary>
            Secondary mode
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_ToggleHeadlights">
            <summary>
            Lights on / off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Inventory">
            <summary>
            Inventory
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.RenderQuality">
            <summary>
            Render quality
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.RenderQualityExtreme">
            <summary>
            Extreme
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.RenderQualityHigh">
            <summary>
            High
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.RenderQualityNormal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_RollLeft">
            <summary>
            Roll left (ship / jetpack)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_RollRight">
            <summary>
            Roll right (ship / jetpack)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_RotationDown">
            <summary>
            Rotate down
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_RotationLeft">
            <summary>
            Rotate left
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_RotationRight">
            <summary>
            Rotate right
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_RotationUp">
            <summary>
            Rotate up
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenOptionsButtonVideo">
            <summary>
            Video
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenCaptionVideoOptions">
            <summary>
            Video options
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Chat_screen">
            <summary>
            Chat screen
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_TerminalOrInventory">
            <summary>
            Terminal / Inventory
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Welder">
            <summary>
            Welder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.AngleGrinderPrimaryAction">
            <summary>
            Press {0} to dismount target
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WelderPrimaryActionBuild">
            <summary>
            Press {0} to weld target
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlPanel">
            <summary>
            Control Panel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Assembler">
            <summary>
            Assembler
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Refinery">
            <summary>
            Refinery
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalError_ShipNotConnected">
            <summary>
            Terminal is not connected to any ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_AngleGrinder">
            <summary>
            Grinder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Antenna">
            <summary>
            Antenna
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_AutomaticRifle">
            <summary>
            Automatic Rifle
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HelpScreen_FactionColor_Blue">
            <summary>
            Blue
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_BulletproofGlass">
            <summary>
            Bulletproof Glass
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_CobaltIngot">
            <summary>
            Cobalt Ingot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_CobaltOre">
            <summary>
            Cobalt Ore
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Cockpit1">
            <summary>
            Cockpit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Computer">
            <summary>
            Computer
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_ConstructionComponent">
            <summary>
            Construction Component
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_DetectorComponents">
            <summary>
            Detector Components
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_DiagonalWindow">
            <summary>
            Diagonal Window
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Display">
            <summary>
            Display
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Door">
            <summary>
            Door
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Warhead">
            <summary>
            Warhead
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ReflectorLight">
            <summary>
            Spotlight
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_FullCoverWall">
            <summary>
            Cover Walls
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_GatlingGun">
            <summary>
            Gatling Gun
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_GatlingTurret">
            <summary>
            Gatling Turret
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_GoldIngot">
            <summary>
            Gold Ingot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_GoldOre">
            <summary>
            Gold Ore
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Gravel">
            <summary>
            Gravel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_GravityGenerator">
            <summary>
            Gravity Generator
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_GravityGeneratorComponents">
            <summary>
            Gravity Generator Components
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HelpScreen_FactionColor_Green">
            <summary>
            Green
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Gyroscope">
            <summary>
            Gyroscope
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HalfCoverWall">
            <summary>
            Half Cover Wall
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_HandDrill">
            <summary>
            Hand Drill
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorBlock">
            <summary>
            Heavy Armor Block
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorCorner">
            <summary>
            Heavy Armor Corner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorInvCorner">
            <summary>
            Heavy Armor Inv. Corner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorSlope">
            <summary>
            Heavy Armor Slope
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Ice">
            <summary>
            Ice
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_InteriorLight">
            <summary>
            Interior Light
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_CornerLCD">
            <summary>
            Corner LCD
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_CornerLCD2">
            <summary>
            Corner LCD 2
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_CornerLCDFlatTop">
            <summary>
            Corner LCD Flat Top
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_CornerLCDFlatBottom">
            <summary>
            Corner LCD Flat Bottom
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_CornerLight">
            <summary>
            Corner Light
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_CornerLightDouble">
            <summary>
            Corner Light - Double
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_InteriorPillar">
            <summary>
            Interior Pillar
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_InteriorPlate">
            <summary>
            Interior Plate
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_InteriorTurret">
            <summary>
            Interior Turret
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_InteriorWall">
            <summary>
            Interior Wall
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_IronIngot">
            <summary>
            Iron Ingot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_IronOre">
            <summary>
            Iron Ore
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LandingGear">
            <summary>
            Landing Gear
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LargeCargoContainer">
            <summary>
            Large Cargo Container
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LargeReactor">
            <summary>
            Large Reactor
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_LargeSteelTube">
            <summary>
            Large Steel Tube
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LargeThrust">
            <summary>
            Large Ion Thruster
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorBlock">
            <summary>
            Light Armor Block
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorCorner">
            <summary>
            Light Armor Corner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorInvCorner">
            <summary>
            Light Armor Inv. Corner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorSlope">
            <summary>
            Light Armor Slope
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_MagnesiumOre">
            <summary>
            Magnesium Ore
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_MagnesiumPowder">
            <summary>
            Magnesium Powder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_MedicalComponents">
            <summary>
            Medical Components
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_MedicalRoom">
            <summary>
            Medical Room
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_MediumCargoContainer">
            <summary>
            Medium Cargo Container
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_MetalGrid">
            <summary>
            Metal Grid
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Missile200mm">
            <summary>
            200mm missile container
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_MissileTurret">
            <summary>
            Missile Turret
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Motor">
            <summary>
            Motor
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_NATO_25x184mm">
            <summary>
            25x184mm NATO ammo container
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_NATO_5p56x45mm">
            <summary>
            5.56x45mm NATO magazine
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_NickelIngot">
            <summary>
            Nickel Ingot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_NickelOre">
            <summary>
            Nickel Ore
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_OreDetector">
            <summary>
            Ore Detector
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_PlatinumIngot">
            <summary>
            Platinum Ingot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_PlatinumOre">
            <summary>
            Platinum Ore
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Potassium">
            <summary>
            Potassium
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_RadioCommunicationComponents">
            <summary>
            Radio-communication Components
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Ramp">
            <summary>
            Ramp
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_ReactorComponents">
            <summary>
            Reactor Components
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HelpScreen_FactionColor_Red">
            <summary>
            Red
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_RocketLauncher">
            <summary>
            Rocket Launcher
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_SiliconOre">
            <summary>
            Silicon Ore
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_SiliconWafer">
            <summary>
            Silicon Wafer
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_SilverIngot">
            <summary>
            Silver Ingot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_SilverOre">
            <summary>
            Silver Ore
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_SmallCargoContainer">
            <summary>
            Small Cargo Container
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_SmallReactor">
            <summary>
            Small Reactor
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_SmallSteelTube">
            <summary>
            Small Steel Tube
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_SmallThrust">
            <summary>
            Ion Thrusters
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Stairs">
            <summary>
            Stairs
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_SteelCatwalk">
            <summary>
            Steel Catwalks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_SteelPlate">
            <summary>
            Steel Plate
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_StoneOre">
            <summary>
            Stone
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_ThrustComponents">
            <summary>
            Thruster Components
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_UraniumIngot">
            <summary>
            Uranium Ingot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_UraniumOre">
            <summary>
            Uranium Ore
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_VerticalWindow">
            <summary>
            Vertical Window
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HelpScreen_FactionColor_White">
            <summary>
            White
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Reactor">
            <summary>
            Reactor
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_AutoHealing">
            <summary>
            Auto-healing
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnvironmentHostility">
            <summary>
            Environment hostility
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnvironmentHostilityCataclysm">
            <summary>
            Cataclysm
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnvironmentHostilityNormal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnvironmentHostilitySafe">
            <summary>
            Safe
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_FriendlyFire">
            <summary>
            Friendly fire
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_GameStyle">
            <summary>
            Game style
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_GameSurvivalTimes10">
            <summary>
            Realistic x10
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_SoundInSpace">
            <summary>
            Sound in space
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings">
            <summary>
            World Settings
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsAutoHealing">
            <summary>
            Auto-healing heals players during periods of not receiving injuries
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsDifficulty">
            <summary>
            The damage given and taken to and from enemies and environment. Higher difficulty means more realistic damage.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsEnvironment">
            <summary>
            The frequency and intensity of meteor showers
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsFriendlyFire">
            <summary>
            When checked, allies can damage each other
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsHardwareRequirements">
            <summary>
            Hardware requirements define how rich your world can be. Higher values are more demanding on computing performance of your computer (CPU and GPU) and will definitely require more memory.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsHarvestingMode">
            <summary>
            Creative Mode: unlimited resources, instant building, players don't die. Use creative mode when you just want to build things.  Survival Mode: realistic inventory capacity, constrained resources - you have to drill and harvest ore, process it in a refinery, construct components in assembler, build blocks using welder, disassemble using grinder, players can die - they re-spawn in their medical room and if there's no medical room, then in a new ship as a new player at the border of the sector  Survival x3: same as "Survival", but 3x larger inventory capacity  Survival x10: same as "Survival", but 10x larger inventory capacity
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsOnlineMode">
            <summary>
            Visibility of your game  Offline: Game runs in offline mode and does not require internet connection Private: Other players cannot join Friends: Only your Steam friends can join Public: Any Steam player can join
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsPVP">
            <summary>
            PvE means that you cannot damage other players. PvP means that you can damage them and they can damage you.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsSoundInSpace">
            <summary>
            There's no sound in space. Turn it on to simulate Earth-like sound conditions (even though it's not realistic). Turn it off for a realistic mode where you can hear only sounds that your astronaut character can hear.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_Scenario">
            <summary>
            Scenario
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_EasyStart1">
            <summary>
            Easy Start 1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_Survival">
            <summary>
            Lone Survivor
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_PowerSwitchOnOff">
            <summary>
            Power switch on / off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_EmptyWorld">
            <summary>
            Empty World
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_Jetpack">
            <summary>
            Jetpack on / off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotEnoughMaterial">
            <summary>
            Not enough materials to create a new block. At least one steel plate is required.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Turret">
            <summary>
            Turret
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Conveyor">
            <summary>
            Conveyor Junction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal">
            <summary>
            Terminal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote00Author">
            <summary>
            Theodore Von Karman
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote00Text">
            <summary>
            Scientists discover the world that exists; Engineers create the world that never was.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote01Author">
            <summary>
            Max Planck
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote01Text">
            <summary>
            Scientific discovery and scientific knowledge have been achieved only by those who have gone in pursuit of it without any practical purpose whatsoever in view.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote02Author">
            <summary>
            Archimedes
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote02Text">
            <summary>
            Give me a lever long enough and a fulcrum on which to place it, and I shall move the world.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote03Author">
            <summary>
            Arthur C. Clarke
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote03Text">
            <summary>
            When a distinguished but elderly scientist states that something is possible, he is almost certainly right. When he states that something is impossible, he is very probably wrong.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote04Author">
            <summary>
            Bertrand Russell
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote04Text">
            <summary>
            Science may set limits to knowledge, but should not set limits to imagination.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote05Author">
            <summary>
            Indiana Jones
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote05Text">
            <summary>
            Nothing shocks me. I'm a scientist.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote06Author">
            <summary>
            Immanuel Kant
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote06Text">
            <summary>
            Science is organized knowledge. Wisdom is organized life.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote07Author">
            <summary>
            Max Planck
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote07Text">
            <summary>
            A new scientific truth does not triumph by convincing its opponents and making them see the light, but rather because its opponents eventually die, and a new generation grows up that is familiar with it.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote08Author">
            <summary>
            Benjamin Franklin
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote08Text">
            <summary>
            An investment in knowledge pays the best interest.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote09Author">
            <summary>
            Albert Einstein
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote09Text">
            <summary>
            Anyone who has never made a mistake has never tried anything new.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote10Author">
            <summary>
            Leonardo da Vinci
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote10Text">
            <summary>
            Nature never breaks her own laws.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote11Author">
            <summary>
            Leonardo da Vinci
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote11Text">
            <summary>
            Simplicity is the ultimate sophistication.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote12Author">
            <summary>
            Leonardo da Vinci
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote12Text">
            <summary>
            Where there is shouting, there is no true knowledge.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote13Author">
            <summary>
            Leonardo da Vinci
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote13Text">
            <summary>
            I have offended God and mankind because my work didn't reach the quality it should have.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote14Author">
            <summary>
            Leonardo da Vinci
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote14Text">
            <summary>
            All our knowledge has its origins in our perceptions.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote15Author">
            <summary>
            Galileo Galilei
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote15Text">
            <summary>
            By denying scientific principles, one may maintain any paradox.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote16Author">
            <summary>
            Galileo Galilei
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote16Text">
            <summary>
            Mathematics is the language in which God has written the universe.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote17Author">
            <summary>
            Galileo Galilei
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote17Text">
            <summary>
            If I were again beginning my studies, I would follow the advice of Plato and start with mathematics.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote18Author">
            <summary>
            Johann W. Goethe
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote18Text">
            <summary>
            We see only what we know.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote19Author">
            <summary>
            Niels H. D. Bohr
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote19Text">
            <summary>
            If anybody says he can think about quantum problems without getting giddy, that only shows he has not understood the first thing about them.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote20Author">
            <summary>
            Ancient paradox
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote20Text">
            <summary>
            Only one thing is certain - that is, nothing is certain. If this statement is true, it is also false.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote21Author">
            <summary>
            Richard Feynman
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote21Text">
            <summary>
            Scientists are explorers. Philosophers are tourists.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote22Author">
            <summary>
            Walter Bagehot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote22Text">
            <summary>
            A great pleasure in life is doing what people say you cannot do.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote23Author">
            <summary>
            Thomas A. Edison
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote23Text">
            <summary>
            Genius is one percent inspiration and ninety-nine percent perspiration.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote24Author">
            <summary>
            Socrates
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote24Text">
            <summary>
            I know one thing: that I know nothing.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote25Author">
            <summary>
            Arthur C. Clarke
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote25Text">
            <summary>
            Any sufficiently advanced technology is indistinguishable from magic.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote26Author">
            <summary>
            William Gibson
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote26Text">
            <summary>
            When you want to know how things really work, study them when they're coming apart.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote27Author">
            <summary>
            Scott Adams
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote27Text">
            <summary>
            Engineers like to solve problems. If there are no problems handily available, they will create their own problems.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote28Author">
            <summary>
            Robert A. Heinlein
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote28Text">
            <summary>
            One man's "magic" is another man’s engineering. "Supernatural" is a null word.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote29Author">
            <summary>
            Freeman Dyson
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote29Text">
            <summary>
            A good scientist is a person with original ideas. A good engineer is a person who makes a design that works with as few original ideas as possible. There are no prima donnas in engineering.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote30Author">
            <summary>
            Freeman Dyson
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote30Text">
            <summary>
            Aviation is the branch of engineering that is least forgiving of mistakes.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote31Author">
            <summary>
            Wikipedia, 2077
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote31Text">
            <summary>
            A space engineer is a professional practitioner who uses scientific knowledge, mathematics, physics, astronomy, propulsion technology, materials science, structural analysis, manufacturing and ingenuity to solve practical problems in space.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote32Author">
            <summary>
            Wikipedia, 2077
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote32Text">
            <summary>
            Space engineers design materials, structures, and systems while considering the limitations imposed by practicality, regulation, safety, ethicality and cost.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote33Author">
            <summary>
            Wikipedia, 2077
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote33Text">
            <summary>
            Space engineers are grounded in applied sciences, and their work in research and development is distinct from the basic research focus of space scientists.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote34Author">
            <summary>
            Wikipedia, 2077
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote34Text">
            <summary>
            In war times, space engineering involves military engineering as well. Such tasks typically include construction and demolition tasks under combat conditions.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote35Author">
            <summary>
            Wikipedia, 2077
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote35Text">
            <summary>
            Space engineers are in a high demand, especially since the Second Space Race of 2029.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote36Author">
            <summary>
            Wikipedia, 2077
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote36Text">
            <summary>
            Space engineers take pride for their ability to get the job done right - no matter how big, how complex, or how remote.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote37Author">
            <summary>
            Wikipedia, 2077
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote37Text">
            <summary>
            The word engineer is derived from the Latin roots 'ingeniare' ("to contrive, devise") and 'ingenium' ("cleverness").
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote38Author">
            <summary>
            Anonym
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote38Text">
            <summary>
            To the optimist, the glass is half full. To the pessimist, the glass is half empty. To the engineer, the glass is twice as big as it needs to be.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote39Author">
            <summary>
            Albert Einstein
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote39Text">
            <summary>
            Scientists investigate that which already is; engineers create that which has never been.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote40Author">
            <summary>
            U.S. Army Ordnance
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote40Text">
            <summary>
            Tracers work both ways.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote41Author">
            <summary>
            USAF Ammo Troop
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote41Text">
            <summary>
            If you see a bomb technician running, follow him.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote42Author">
            <summary>
            Anonym
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote42Text">
            <summary>
            The only time you have too much fuel is when you're on fire.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote43Author">
            <summary>
            Anonym
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote43Text">
            <summary>
            Never trade luck for skill.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote44Author">
            <summary>
            Jon McBride
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote44Text">
            <summary>
            A pilot who doesn't have any fear probably isn't flying his plane to its maximum.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote45Author">
            <summary>
            Alexander Calder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote45Text">
            <summary>
            To an engineer, good enough means perfect. With an artist, there's no such thing as perfect.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote46Author">
            <summary>
            Buzz Aldrin
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote46Text">
            <summary>
            Mars is there, waiting to be reached.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote47Author">
            <summary>
            Neil Armstrong
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote47Text">
            <summary>
            This is one small step for a man, one giant leap for mankind.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote48Author">
            <summary>
            Yuri Gagarin
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote48Text">
            <summary>
            I see Earth! It is so beautiful!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote49Author">
            <summary>
            Yuri Gagarin
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote49Text">
            <summary>
            I could have gone on flying through space forever.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote50Author">
            <summary>
            Michael Collins
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote50Text">
            <summary>
            To go places and do things that have never been done before - that’s what living is all about.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote51Author">
            <summary>
            Ralph W. Emerson
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote51Text">
            <summary>
            Do not go where the path may lead, go instead where there is no path and leave a trail.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote52Author">
            <summary>
            Yuri Gagarin
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote52Text">
            <summary>
            To be the first to enter the cosmos, to engage, single-handed, in an unprecedented duel with nature - could one dream of anything more?
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote53Author">
            <summary>
            Yuri Gagarin
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote53Text">
            <summary>
            The path of a cosmonaut is not an easy, triumphant march to glory. You have to get to know the meaning not just of joy but also of grief, before being allowed in the spacecraft cabin.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote54Author">
            <summary>
            Robert H. Goddard
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote54Text">
            <summary>
            The dreams of yesterday are the hopes of today and the reality of tomorrow.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote55Author">
            <summary>
            Gene Kranz
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote55Text">
            <summary>
            Failure is not an option.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote56Author">
            <summary>
            Albert Einstein
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote56Text">
            <summary>
            No amount of experimentation can ever prove me right; a single experiment can prove me wrong.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote57Author">
            <summary>
            George B. Shaw
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote57Text">
            <summary>
            Science never solves a problem without creating ten more.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote58Author">
            <summary>
            The first law of thermodynamics
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote58Text">
            <summary>
            The law of conservation of energy states that energy can be neither created nor destroyed. However, energy can change forms, and energy can flow from one place to another. The total energy of an isolated system remains the same.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote59Author">
            <summary>
            The first law of thermodynamics
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote59Text">
            <summary>
            The flow of heat is a form of energy transfer. In other words, a quantity of heat that flows from a hot body to a cold one can be expressed as an amount of energy being transferred from the hot body to the cold one.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote60Author">
            <summary>
            Newton's first law
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote60Text">
            <summary>
            Every body persists in its state of being at rest or of moving uniformly straight forward, except insofar as it is compelled to change its state by force impressed.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote61Author">
            <summary>
            Newton's first law
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote61Text">
            <summary>
            An object that is at rest will stay at rest unless an external force acts upon it.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote62Author">
            <summary>
            Newton's first law
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote62Text">
            <summary>
            An object that is in motion will not change its velocity unless an external force acts upon it.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote63Author">
            <summary>
            Newton's second law
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote63Text">
            <summary>
            The acceleration of a body is directly proportional to, and in the same direction as, the net force acting on the body, and inversely proportional to its mass.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote64Author">
            <summary>
            Newton's third law
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote64Text">
            <summary>
            To every action there is always an equal and opposite reaction: or the forces of two bodies on each other are always equal and are directed in opposite directions.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote65Author">
            <summary>
            Wikipedia, 2077
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote65Text">
            <summary>
            SCIENTIFIC METHOD: principles and procedures for the systematic pursuit of knowledge involving the recognition and formulation of a problem, the collection of data through observation and experiment, and the formulation and testing of hypotheses.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote66Author">
            <summary>
            Wikipedia, 2077
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote66Text">
            <summary>
            To be termed scientific, a method of inquiry must be based on empirical and measurable evidence subject to specific principles of reasoning.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote67Author">
            <summary>
            Wikipedia, 2077
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote67Text">
            <summary>
            The laws of science or scientific laws are statements that describe, predict, and perhaps explain why, a range of phenomena behave as they appear to in nature.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote68Author">
            <summary>
            Wikipedia, 2077
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote68Text">
            <summary>
            Scientific laws are strongly supported by empirical evidence - they are scientific knowledge that experiments have repeatedly verified (and never falsified).
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote69Author">
            <summary>
            Newton's law of universal gravitation
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote69Text">
            <summary>
            Every point mass in the universe attracts every other point mass with a force that is directly proportional to the product of their masses and inversely proportional to the square of the distance between them.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoGravity">
            <summary>
            Actual Gravity:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNoGravity">
            <summary>
            No gravity
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipNewWorldQuickstart">
            <summary>
            Create a new world using the default settings: Game Type: Creative Mode Scenario: Planet / Easy Start 1 Auto-Save: ON
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoCrouching">
            <summary>
            Crouching
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoFlying">
            <summary>
            Flying
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoOff">
            <summary>
            Off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoOn">
            <summary>
            On
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudEnergyMissingTotal">
            <summary>
            MISSING TOTAL
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameEnergy">
            <summary>
            Energy:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameFuelTime">
            <summary>
            Fuel Time:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameGyroscopes">
            <summary>
            Gyroscopes:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameLights">
            <summary>
            Lights:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameMass">
            <summary>
            Mass:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNamePowerUsage">
            <summary>
            Power Usage:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameReactors">
            <summary>
            Reactors:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameSpeed">
            <summary>
            Speed:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameThrusts">
            <summary>
            Thrusters:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNoPower">
            <summary>
            No Power
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNoReflectors">
            <summary>
            No Spotlights
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoPilotingLargeShip">
            <summary>
            Piloting Large Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoPilotingSmallShip">
            <summary>
            Piloting Small Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoPowerOverload">
            <summary>
            Overload
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoReflectorsOff">
            <summary>
            Spotlights Off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoReflectorsOn">
            <summary>
            Spotlights On
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoStanding">
            <summary>
            Standing
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_EasyStart2">
            <summary>
            Easy Start 2
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxTextTutorialQuestion">
            <summary>
            Do you want to see basic tutorial video?
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlDescHoldToColor">
            <summary>
            Hold to color a block (creative mode)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlDescLargeBrush">
            <summary>
            Large color brush size (creative mode)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlDescMediumBrush">
            <summary>
            Medium color brush size (creative mode)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlDescZoom">
            <summary>
            Zoom in third-person mode
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenCubeBuilderNewLargeShip">
            <summary>
            New Large Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenCubeBuilderNewSmallShip">
            <summary>
            New Small Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenCubeBuilderNewStation">
            <summary>
            New Station
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudEnergyGroupCharging">
            <summary>
            Charging
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudEnergyGroupConveyors">
            <summary>
            Conveyors
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudEnergyGroupDefense">
            <summary>
            Defense
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudEnergyGroupDoors">
            <summary>
            Doors
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudEnergyGroupFactory">
            <summary>
            Factory
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudEnergyGroupGyroscope">
            <summary>
            Gyroscope
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudEnergyGroupThrust">
            <summary>
            Thrusters
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudEnergyGroupUtility">
            <summary>
            Utility
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SteamOverlayDisabledText">
            <summary>
            Please enable Steam Overlay in Steam client: go to Settings, In-game tab, Enable Steam Community In-Game and in Steam Library, Space Engineers, Properties, Enable Steam Community In-Game
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxTextRecommend">
            <summary>
            If you like Space Engineers, you can recommend it to your Steam friends on the following page. Recommendations help to grow the community. Thank you!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxCaptionRecommend">
            <summary>
            Recommend Space Engineers
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintLeaveCockpit">
            <summary>
            Press {0} to leave cockpit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintOpenShipControlPanel">
            <summary>
            Press {0} to open ship control panel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintTurnPowerOff">
            <summary>
            Press {0} to turn power off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintTurnPowerOn">
            <summary>
            Press {0} to turn power on
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationArgLargeShip">
            <summary>
            large ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationArgSmallShip">
            <summary>
            small ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationArgStation">
            <summary>
            station
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationBlockNotAvailableFor">
            <summary>
            {0} {1} is not available for a {2}
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationArgAngleGrinder">
            <summary>
            Angle grinder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationArgDrill">
            <summary>
            Drill
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationArgMissile">
            <summary>
            Missile
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationArgProjectile">
            <summary>
            Projectile
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationArgWelder">
            <summary>
            Welder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintPressToClimbUpDown">
            <summary>
            Press {0} or {1} to climb up and down
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintPressToGetDownFromLadder">
            <summary>
            Press {0} to get down from ladder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintPressToJumpOffLadder">
            <summary>
            Press {0} to jump off from ladder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationJetpackOff">
            <summary>
            Jetpack Off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationJetpackOffNoHydrogen">
            <summary>
            Jetpack Off (no hydrogen)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationJetpackOn">
            <summary>
            Jetpack On
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationUsingWeaponType">
            <summary>
            Using {0}
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoControllingStation">
            <summary>
            Controlling Station
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameDampeners">
            <summary>
            Dampeners:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameLandingGear">
            <summary>
            Landing gears:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameInProximity">
            <summary>
            In proximity:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameLocked">
            <summary>
            Locked:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_LandingGear">
            <summary>
            Landing gear / Color picker
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_SymmetrySwitch">
            <summary>
            Symmetry switch
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintPressToEnterCockpit">
            <summary>
            Press {0} to enter Cockpit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintPressToOpenControlPanel">
            <summary>
            Press {0} to open control panel of {1}
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintPressToOpenInventory">
            <summary>
            Press {0} to open inventory of {1}
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTerminalInventory_FilterAll">
            <summary>
            Show all types of inventories
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTerminalInventory_FilterEnergy">
            <summary>
            Filter energy inventories
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTerminalInventory_FilterStorage">
            <summary>
            Filter storage inventories
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTerminalInventory_FilterSystem">
            <summary>
            Filter system inventories
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTerminalInventory_ShowCharacter">
            <summary>
            Show character inventory
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTerminalInventory_ShowConnected">
            <summary>
            Show connected inventories (on ship or station)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalInventory_Mass">
            <summary>
            Mass: {0} kg
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalInventory_Volume">
            <summary>
            Volume: {0} L
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTerminalInventory_ItemInfo">
            <summary>
            {0}{3} Mass: {1} kg Volume: {2} L{4}
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_InertialDampeners">
            <summary>
            Inertia dampeners
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_UseSymmetry">
            <summary>
            Use symmetry
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Beacon">
            <summary>
            Beacon
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipItemFilter_AnyOre">
            <summary>
            Any kind of ore
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipItemFilter_UraniumIngot">
            <summary>
            Uranium ingot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Rotor">
            <summary>
            Rotor
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_MotorTorque">
            <summary>
            Torque
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_MotorBrakingTorque">
            <summary>
            Braking tor.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_MotorTargetVelocity">
            <summary>
            Velocity
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipItemFilter_AnyIngot">
            <summary>
            Any kind of ingot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_MotorMaxAngle">
            <summary>
            Upper limit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_MotorMinAngle">
            <summary>
            Lower limit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.IconSymbol_Ag">
            <summary>
            Ag
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.IconSymbol_Au">
            <summary>
            Au
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.IconSymbol_Co">
            <summary>
            Co
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.IconSymbol_Fe">
            <summary>
            Fe
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.IconSymbol_Gravel">
            <summary>
            Gravel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.IconSymbol_Ice">
            <summary>
            Ice
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.IconSymbol_K">
            <summary>
            K
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.IconSymbol_Mg">
            <summary>
            Mg
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.IconSymbol_Ni">
            <summary>
            Ni
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.IconSymbol_Pt">
            <summary>
            Pt
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.IconSymbol_Stone">
            <summary>
            Stone
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.IconSymbol_Si">
            <summary>
            Si
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.IconSymbol_U">
            <summary>
            U
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_MotorCurrentAngle">
            <summary>
            Current angle: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyValue_MotorAngleUnlimited">
            <summary>
            Unlimited
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_MotorLimitsDisabled">
            <summary>
            The current rotor rotation is out of limits, the limits will be enabled when the rotor is within range.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_MotorBrakingTorque">
            <summary>
            Braking strength of the rotor: how fast it will stop (applied when the rotor is turned off)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_MotorLowerLimit">
            <summary>
            Lower angular limit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_MotorTorque">
            <summary>
            The torque of the rotor: how fast it will accelerate (applied when the rotor is turned on)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_MotorUpperLimit">
            <summary>
            Upper angular limit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_MotorVelocity">
            <summary>
            Target velocity of the rotor; the rotor will accelerate until the target velocity is reached.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Girder">
            <summary>
            Girder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SwitchText_Open">
            <summary>
            Open
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SwitchText_Close">
            <summary>
            Close
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameHealth">
            <summary>
            Health:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoFalling">
            <summary>
            Falling
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.AssemblerState_Disabled">
            <summary>
            Disabled
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.AssemblerState_MissingItems">
            <summary>
            Missing items
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.AssemblerState_NotEnoughPower">
            <summary>
            Not enough power
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.AssemblerState_NothingBeingProduced">
            <summary>
            Nothing produced right now
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameJetpack">
            <summary>
            Jetpack
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_EasyStart3">
            <summary>
            Easy Start 3 (64-bit only)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LightColor">
            <summary>
            Color
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_LightColor">
            <summary>
            Color of the light
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LightRadius">
            <summary>
            Radius
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_LightRadius">
            <summary>
            Radius of influence of the light
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LightReflectorRadius">
            <summary>
            Reflector radius
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_LightReflectorRadius">
            <summary>
            Reflector radius of influence of the light
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LightFalloff">
            <summary>
            Falloff
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_LightFalloff">
            <summary>
            Exponential falloff of the light (1 = linear, 2 = quadratic, etc)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LightIntensity">
            <summary>
            Intensity
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_LightIntensity">
            <summary>
            Intensity of the light
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintPressToOpenDoor">
            <summary>
            Press {0} to open Door
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SwitchText_Off">
            <summary>
            Off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SwitchText_On">
            <summary>
            On
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsEnableCopyPaste">
            <summary>
            Copy paste allows you to create new ship or station directly from clipboard
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableCopyPaste">
            <summary>
            Enable copy/paste
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableWeapons">
            <summary>
            Weapons enabled
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.AssemblerState_NotWorking">
            <summary>
            Assembler damaged or dismounted
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Passage">
            <summary>
            Passage
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_GravityAcceleration">
            <summary>
            Gravitational acceleration of the generator.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_GravityFieldDepth">
            <summary>
            Depth of the gravity field of the generator.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_GravityFieldHeight">
            <summary>
            Height of the gravity field of the generator.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_GravityFieldWidth">
            <summary>
            Width of the gravity field of the generator.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_GravityAcceleration">
            <summary>
            Acceleration
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_GravityFieldDepth">
            <summary>
            Field depth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_GravityFieldHeight">
            <summary>
            Field height
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_GravityFieldWidth">
            <summary>
            Field width
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintPressToOpenTerminal">
            <summary>
            Press {0} to open terminal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintPressToRechargeInMedicalRoom">
            <summary>
            Hold {0} to recharge and heal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsShowPlayerNamesOnHud">
            <summary>
            When enabled, each player can see name of other players above their characters
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ShowPlayerNamesOnHud">
            <summary>
            Show player names
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTerminalInventory_ThrowOut">
            <summary>
            Drop item
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationSuitEnergyLow">
            <summary>
            Warning: Suit energy is low. Life support systems may fail.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationSuitEnergyCritical">
            <summary>
            Warning: Suit energy is critically low. Life support failure imminent.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MaxFloatingObjects">
            <summary>
            Max objects
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsMaxFloatingObjects">
            <summary>
            Maximum number of small objects floating in space (ore, ingots, components) Warning - values higher than 64 can significantly affect performance!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipItemFilter_Missile200mm">
            <summary>
            Missile 200 mm
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipItemFilter_NATO_25x184mm">
            <summary>
            NATO 25x184 mm
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_Asteroids">
            <summary>
            Asteroids
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Asteroid_Amount">
            <summary>
            Asteroid amount
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Explosives">
            <summary>
            Explosives
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_AsteroidAmountExtreme">
            <summary>
            Extreme: 16 large asteroids
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_AsteroidAmountLarge">
            <summary>
            Large: 7 large asteroids
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_AsteroidAmountNormal">
            <summary>
            Normal: 4 large asteroids
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsAsteroidAmount">
            <summary>
            Number of asteroids in a newly generated world  Normal: 4 large asteroids, 20 small asteroids Large: 7 large asteroids, 35 small asteroids Extreme: 16 large asteroids, 80 small asteroids, 64-bit only
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsMaxPlayer">
            <summary>
            Maximum number of players in game
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsWeapons">
            <summary>
            Enable/Disable all weapons and explosives
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_OreDetectorRange">
            <summary>
            Maximum detection range.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_OreDetectorRange">
            <summary>
            Range
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipItemFilter_AssembledItems">
            <summary>
            Any item produced by assembler.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.AssemblerState_InventoryFull">
            <summary>
            Inventory is full
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_InventorySize">
            <summary>
            Inventory size
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_GameSurvivalTimes1">
            <summary>
            Realistic
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_GameSurvivalTimes3">
            <summary>
            Realistic x3
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsModeCreative">
            <summary>
            Unlimited resources, instant building, no death
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsModeSurvival">
            <summary>
            Realistic management of resources, realistic inventory capacity, death and respawn
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_Asteroids">
            <summary>
            Start in a rescue ship with very limited resources near a small asteroid field
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_EasyStart1">
            <summary>
            Start on an asteroid platform with one large ship and two small ships
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_EasyStart2">
            <summary>
            Start in a green asteroid station with several large ships and small ships (this is a large scene!)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_EmptyWorld">
            <summary>
            Empty world, no asteroids, no ships, suitable for creative mode
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_LoneSurvivor">
            <summary>
            Start on an abandoned asteroid platform with no ships, you have to start from scratch
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_CrashedRedShip">
            <summary>
            Crashed Red Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_CrashedRedShip">
            <summary>
            Crashed Red Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudBlockInfo_Components">
            <summary>
            Components
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudBlockInfo_Installed_Required">
            <summary>
            Installed / Required
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Scrap">
            <summary>
            Scrap Metal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudBlockInfo_LargeShip_Station">
            <summary>
            Large Ship / Station
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudBlockInfo_SmallShip">
            <summary>
            Small Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Production">
            <summary>
            Production
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalError_NoAssemblers">
            <summary>
            There are no assemblers on this ship.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_TwoPlatforms">
            <summary>
            Two platforms
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_TwoPlatforms">
            <summary>
            Competitive two-team multi-player world
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_BlockIncomplete">
            <summary>
             (incomplete)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoInventoryVolume">
            <summary>
            Volume:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_AssemblerEfficiency">
            <summary>
            Assembler efficiency
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_Realistic">
            <summary>
            Realistic
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RefinerySpeed">
            <summary>
            Refinery speed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_Realistic_x10">
            <summary>
            x10
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_Realistic_x3">
            <summary>
            x3
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Assembler_x1">
            <summary>
            Default assembler speed and efficiency
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Assembler_x10">
            <summary>
            Assembler requires 10x less materials and is 10x faster
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Assembler_x3">
            <summary>
            Assembler requires 3x less materials and is 3x faster
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Inventory_x1">
            <summary>
            Default inventory capacity
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Inventory_x10">
            <summary>
            Inventory capacity is 10x larger
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Inventory_x3">
            <summary>
            Inventory capacity is 3x larger
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Refinery_x1">
            <summary>
            Default refinery speed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Refinery_x10">
            <summary>
            Refinery is 10x faster
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Refinery_x3">
            <summary>
            Refinery is 3x faster
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_SolarCell">
            <summary>
            Solar Cell
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_SolarPanel">
            <summary>
            Solar Panel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalProduction_Blueprints">
            <summary>
            Blueprints:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalProduction_AssemblingButton">
            <summary>
            Assembling
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalProduction_ControlPanelButton">
            <summary>
            Control panel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalProduction_DisassembleAllButton">
            <summary>
            Disassemble all
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalProduction_DisassemblingButton">
            <summary>
            Disassembling
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalProduction_GainedAndAvailable">
            <summary>
            Gained / Available
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalProduction_Inventory">
            <summary>
            Inventory:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalProduction_InventoryButton">
            <summary>
            Inventory
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalProduction_ProductionQueue">
            <summary>
            Production queue:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalProduction_RequiredAndAvailable">
            <summary>
            Required / Available
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalProduction_StoredMaterials">
            <summary>
            Stored materials:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTerminalProduction_AssemblingMode">
            <summary>
            Assembling mode: ingots to components
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTerminalProduction_DisassembleAll">
            <summary>
            Disassemble all items in inventory
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTerminalProduction_DisassemblingMode">
            <summary>
            Disassembling mode: components to ingots
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTerminalProduction_RepeatMode">
            <summary>
            Enable or disable repeat mode
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ThrusterDamage">
            <summary>
            Thruster damage
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsThrusterDamage">
            <summary>
            Thruster flame deals damage to blocks, players and small objects
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsEnableCargoShips">
            <summary>
            Whether random cargo ships should be enabled
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableCargoShips">
            <summary>
            Cargo ships
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnvironmentHostilityCataclysmUnreal">
            <summary>
            Armageddon (unrealistic)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.FirstApril2014">
            <summary>
            1st April! Don't tell anyone!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_VirtualMass">
            <summary>
            Artificial Mass
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Cockpit2">
            <summary>
            Control Stations
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Collector">
            <summary>
            Collector
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Cockpit3">
            <summary>
            Flight Seat
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window1x1Face">
            <summary>
            Window 1x1 Face
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window1x1Flat">
            <summary>
            Window 1x1 Flat
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window1x1Inv">
            <summary>
            Window 1x1 Inv.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window1x1Side">
            <summary>
            Window 1x1 Side
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window1x1Slope">
            <summary>
            Window 1x1 Slope
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window1x2Face">
            <summary>
            Window 1x2 Face
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window1x2Flat">
            <summary>
            Window 1x2 Flat
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window1x2Inv">
            <summary>
            Window 1x2 Inv.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window1x2SideLeft">
            <summary>
            Window 1x2 Side Left
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window1x2SideRight">
            <summary>
            Window 1x2 Side Right
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window1x2Slope">
            <summary>
            Window 1x2 Slope
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window2x3Flat">
            <summary>
            Window 2x3 Flat
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window3x3Flat">
            <summary>
            Window 3x3 Flat
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlDescSingleAllMode">
            <summary>
            Single / All weapon mode (cockpit)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_UseConveyorSystem">
            <summary>
            Use Conveyor System
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_CollectAll">
            <summary>
            Collect All
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_ThrowOut">
            <summary>
            Throw Out
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Connector">
            <summary>
            Connector
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ConveyorTube">
            <summary>
            Conveyor Tube
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window1x1FlatInv">
            <summary>
            Window 1x1 Flat Inv.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window1x2FlatInv">
            <summary>
            Window 1x2 Flat Inv.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window2x3FlatInv">
            <summary>
            Window 2x3 Flat Inv.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Window3x3FlatInv">
            <summary>
            Window 3x3 Flat Inv.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintSwitchWeaponMode">
            <summary>
            Press {0} to switch between single/all weapon mode.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LargeTurretRadius">
            <summary>
            Aiming radius
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipItemFilter_NATO_5p56x45mm">
            <summary>
            NATO 5.56x45 mm
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Wheel1x1">
            <summary>
            Wheel 1x1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Wheel3x3">
            <summary>
            Wheels
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Wheel5x5">
            <summary>
            Wheel 5x5
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ShipGrinder">
            <summary>
            Grinder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_GyroPower">
            <summary>
            Supplied power affects gyroscope force.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_GyroPower">
            <summary>
            Power
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Decoy">
            <summary>
            Decoy
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalButton_GroupSave">
            <summary>
            Save
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_Lock">
            <summary>
            Lock
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_Unlock">
            <summary>
            Unlock
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_Reverse">
            <summary>
            Reverse
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyProperties_CurrentInput">
            <summary>
            Current Input: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyProperties_CurrentMass">
            <summary>
            Current Mass: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyProperties_CurrentOutput">
            <summary>
            Current Output: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_LockState">
            <summary>
            Lock State: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_MaxOutput">
            <summary>
            Max Output: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_MaxRequiredInput">
            <summary>
            Max Required Input: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_RequiredInput">
            <summary>
            Required Input: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyValue_Locked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyValue_ReadyToLock">
            <summary>
            Ready To Lock
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyValue_Unlocked">
            <summary>
            Unlocked
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote70Author">
            <summary>
            Albert Einstein
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Quote70Text">
            <summary>
            Creativity is intelligence having fun.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ConveyorTubeCurved">
            <summary>
            Curved Conveyor Tube
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LargeTurretTargetDecoys">
            <summary>
            Target decoys
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LargeTurretTargetMeteors">
            <summary>
            Target meteors
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LargeTurretTargetMoving">
            <summary>
            Target moving objects
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DialogText_RunArgument">
            <summary>
            Argument
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LargeTurretTargetMissiles">
            <summary>
            Target missiles
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ShipWelder">
            <summary>
            Welder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationEnergyCritical">
            <summary>
            Energy is critical.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationEnergyLow">
            <summary>
            Energy is low.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationEnergyNo">
            <summary>
            No Energy
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationFuelCritical">
            <summary>
            Fuel is critical.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationFuelLow">
            <summary>
            Fuel is low.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationFuelNo">
            <summary>
            No Fuel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationMeteorInbound">
            <summary>
            Meteor storm inbound.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ConveyorTubeMedium">
            <summary>
            Medium Conveyor Tube
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ConnectorSmall">
            <summary>
            Ejector
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ConveyorFrame">
            <summary>
            Conveyor Frame
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ConveyorSmall">
            <summary>
            Small Conveyor
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ConveyorTubeCurvedSmall">
            <summary>
            Small Curved Conveyor Tube
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ConveyorTubeSmall">
            <summary>
            Small Conveyor Tube
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintPressToOpenInventoryConnector">
            <summary>
            Press {0} to open inventory
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info">
            <summary>
            Info
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_ConvertButton">
            <summary>
            Convert to ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_Conveyors">
            <summary>
            Conveyors: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_Blocks">
            <summary>
            Blocks: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_GravGens">
            <summary>
            Gravity generators: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_Lights">
            <summary>
            Lights: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_NonArmor">
            <summary>
            Non-armor blocks: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_Triangles">
            <summary>
            Triangles: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_Reflectors">
            <summary>
            Spotlights: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_Thrusters">
            <summary>
            Thrusters: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_VirtualMass">
            <summary>
            Artificial masses: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_BlocksTooltip">
            <summary>
            Total number of blocks in grid.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_TrianglesTooltip">
            <summary>
            Number of triangles for drawing. Technical information. Higher numbers affect performance.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_MergeBlock">
            <summary>
            Merge Block
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NewVersionAvailable">
            <summary>
            New version of Space Engineers is available!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsEnableSpectator">
            <summary>
            Enable spectator in the world
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableSpectator">
            <summary>
            Enable spectator
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.PlayerCharacterColorBlack">
            <summary>
            Black
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.PlayerCharacterColorBlue">
            <summary>
            Blue
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.PlayerCharacterColorDefault">
            <summary>
            Shadow
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.PlayerCharacterColorGreen">
            <summary>
            Green
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.PlayerCharacterColorRed">
            <summary>
            Red
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.PlayerCharacterColorWhite">
            <summary>
            White
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.PlayerCharacterColorYellow">
            <summary>
            Yellow
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Cockpit_ControlThrusters">
            <summary>
            Control thrusters
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Cockpit_ControlWheels">
            <summary>
            Control wheels
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_MotorUsesWheelCommands">
            <summary>
            Uses wheel commands
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_MotorUsesWheelCommands">
            <summary>
            Indicates whether motor is controlled like a wheel directly from cockpit.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_Rotors">
            <summary>
            Rotors: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_BreakForce">
            <summary>
            Break Force
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LandGearAutoLock">
            <summary>
            Autolock
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SpectatorControls_None_Desc">
            <summary>
            Get back into controlled character / cockpit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SpectatorControls_Free_Desc">
            <summary>
            Free spectator. You can still shoot and do actions with controlled object
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SpectatorControls_Static_Desc">
            <summary>
            Static spectator. You control character / cockpit, but camera is static
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_Advanced">
            <summary>
            Advanced
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions">
            <summary>
            Factions
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_Create">
            <summary>
            Create
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_CreateToolTip">
            <summary>
            Create new faction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_Leave">
            <summary>
            Leave
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_Join">
            <summary>
            Join
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_JoinToolTip">
            <summary>
            Send join request to selected faction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.String1TerminalTab_Factions_LeaveToolTip">
            <summary>
            Leave selected faction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_Enemy">
            <summary>
            Declare war
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_Friend">
            <summary>
            Propose peace
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_FriendToolTip">
            <summary>
            Propose peace treaty to selected faction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_CreateFaction">
            <summary>
            Create a new faction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_CreateFactionDescription">
            <summary>
            Public info:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_CreateFactionName">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_CreateFactionPrivateInfo">
            <summary>
            Private info:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_CreateFactionPrivateInfoToolTip">
            <summary>
            Visible to members only
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_CreateFactionTag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_CreateFactionTagToolTip">
            <summary>
            Faction tag (3 letters must be inserted)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_ShowMassCenter">
            <summary>
            Show center of mass
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_BeforeCreateLeave">
            <summary>
            You must leave your faction before creating new one
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsRemoveTrash">
            <summary>
            If checked, ships that are considered to be trash will be removed to make the game run faster. To be considered trash, the grid has to contain just a few blocks, be in uniform linear motion, be unpowered, uncontrolled, without a medbay and far enough from all players so that they can barely see it.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_LimitWorldSize">
            <summary>
            Limit world size
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RemoveTrash">
            <summary>
            Trash auto-removal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_Private">
            <summary>
            Private info (visible to members only):
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_BlockAccessDenied">
            <summary>
             (access denied)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_EditFaction">
            <summary>
            Edit faction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationRespawnShipDelete">
            <summary>
            Temporary ship. It will get removed after you leave the game or spawn in a new one.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TooltipWorldSettingsRespawnShipDelete">
            <summary>
            Deletes respawn ship when player leaves server / spawns in new ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RespawnShipDelete">
            <summary>
            Delete respawn ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_PendingPeace">
            <summary>
            This faction is proposing peace treaty to your faction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_SentPeace">
            <summary>
            You are proposing peace treaty to this faction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_BreakForce">
            <summary>
            Landing gear will unlock automatically when force applied to keep it attached is larger than this value
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_WarningChangingWorldSize">
            <summary>
            The selected world size is more limited than the original one. Reducing world size in an existing save could delete some ships beyond the new limit. Are you sure you want to continue?
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_BroadcastRadius">
            <summary>
            Broadcast radius
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_BroadcastRadius">
            <summary>
            Broadcast radius
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Default_Astronaut">
            <summary>
            Astronaut
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_CancelJoin">
            <summary>
            Cancel join
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_CancelPeaceRequest">
            <summary>
            Cancel request
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_SentJoinToolTip">
            <summary>
            You are applying for a membership in this faction.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockOwner_Me">
            <summary>
            Me
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockOwner_Nobody">
            <summary>
            Nobody
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockOwner_Owner">
            <summary>
            Owner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockOwner_ShareAll">
            <summary>
            Share with all
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockOwner_ShareFaction">
            <summary>
            Share with my faction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockOwner_Transfer">
            <summary>
            Transfer ownership
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_PassengerSeat">
            <summary>
            Passenger Seat
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_GroupTitle">
            <summary>
            Block Group
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_Members">
            <summary>
            Members
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ResetOwnership">
            <summary>
            Reset ownership
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsResetOwnership">
            <summary>
            Reset owners of all blocks to nobody
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BatteryBlock">
            <summary>
            Battery
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Battery">
            <summary>
            Battery
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_MaxStoredPower">
            <summary>
            Max Stored Power: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_StoredPower">
            <summary>
            Stored power: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipBatteryBlock">
            <summary>
            Check for power storage, uncheck for power output
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Recharge">
            <summary>
            Recharge
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockOwner_ShareNone">
            <summary>
            No share
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Grinder_half">
            <summary>
            Decrease grinding speed by 50%
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Grinder_x1">
            <summary>
            Default grinding speed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Grinder_x2">
            <summary>
            Grinding speed is 2x faster
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Grinder_x5">
            <summary>
            Grinding speed is 5x faster
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Welder_half">
            <summary>
            Decrease welding speed by 50%
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Welder_x1">
            <summary>
            Default welding speed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Welder_x2">
            <summary>
            Welding speed is 2x faster
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Welder_x5">
            <summary>
            Welding speed is 5x faster
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_Realistic_half">
            <summary>
            x0.5
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_Realistic_x2">
            <summary>
            x2
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_Realistic_x5">
            <summary>
            x5
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_GrinderSpeed">
            <summary>
            Grinding speed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_WelderSpeed">
            <summary>
            Welding speed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsSoundMode">
            <summary>
            Switches between realistic and arcade sounds.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ArcadeSound">
            <summary>
            Arcade
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RealisticSound">
            <summary>
            Realistic
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_SoundMode">
            <summary>
            Sound mode
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_ShowOnHUD">
            <summary>
            Show on HUD
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_ShowOnHUDToolTip">
            <summary>
            You must have active antenna connected.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_AcceptPeaceRequest">
            <summary>
            Accept peace
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxCaptionRespawn">
            <summary>
            You will lose all ownership and spawn as new player! Respawn?
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.RespawnShip">
            <summary>
            Respawn Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Factions_EnemyFaction">
            <summary>
            Enemy faction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Factions_NeutralFaction">
            <summary>
            Neutral faction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Factions_YourFaction">
            <summary>
            Your faction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTerminalInventory_ShowInteracted">
            <summary>
            Show inventory of interacted item (or corpse)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HideEmpty">
            <summary>
            Hide empty
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Cockpit_Handbrake">
            <summary>
            Handbrake
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Motor_Damping">
            <summary>
            Damping
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Motor_Strength">
            <summary>
            Strength
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminal_Infinite">
            <summary>
            Infinite
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ClientCanSave">
            <summary>
            Clients can save
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Motor_Propulsion">
            <summary>
            If the wheel is propelled.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Motor_Steering">
            <summary>
            Control steering of this suspension from cockpit.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Motor_Propulsion">
            <summary>
            Propulsion
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Motor_Steering">
            <summary>
            Steering
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Motor_Friction">
            <summary>
            Regulates wheel friction by changing pressure in the tire.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Motor_Friction">
            <summary>
            Friction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Suspension1x1">
            <summary>
            Wheel Suspension 1x1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Suspension3x3">
            <summary>
            Wheel Suspensions
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Suspension5x5">
            <summary>
            Wheel Suspension 5x5
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationWheelNotPlaced">
            <summary>
            Wheel could not be placed.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Factions_YourBlock">
            <summary>
            Your block (no faction)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Motor_Power">
            <summary>
            Power supplied to propulsion
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Motor_Power">
            <summary>
            Power
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Motor_Height">
            <summary>
            Axle height offset from center
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Motor_Height">
            <summary>
            Height Offset
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Motor_MaxSteerAngle">
            <summary>
            The maximum angle that the wheel will turn when steering
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Motor_MaxSteerAngle">
            <summary>
            Steering Angle
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Motor_SteerSpeed">
            <summary>
            The wheel turn speed.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Motor_SteerSpeed">
            <summary>
            Steering Speed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Motor_SteerReturnSpeed">
            <summary>
            The wheel's return speed from turning.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Motor_SteerReturnSpeed">
            <summary>
            Steer Return Speed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Motor_InvertSteer">
            <summary>
            Invert the steering direction.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Motor_InvertSteer">
            <summary>
            Invert Steering
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Motor_SuspensionTravel">
            <summary>
            Limits the suspension's travel height. Setting to 0% will effectively lock the suspension.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Motor_SuspensionTravel">
            <summary>
            Suspension Travel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_VerticalCen">
            <summary>
            Centered Window
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlDescBrake">
            <summary>
            Brake
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlDescLoot">
            <summary>
            Loot dead body
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationObstructingBlockDuringMerge">
            <summary>
            Cannot merge ships! Some blocks would occupy the same space after the merge!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsPermanentDeath">
            <summary>
            If true, player loses everything if he dies and has no available medical room.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_PermanentDeath">
            <summary>
            Permanent death
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_PowerCell">
            <summary>
            Power Cell
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_DepletedIn">
            <summary>
            Fully depleted in: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_RechargedIn">
            <summary>
            Fully recharged in: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyButtonOff_Retract">
            <summary>
            Retract
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyButtonOn_Expand">
            <summary>
            Expand
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Force">
            <summary>
            Force
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_MaximalDistance">
            <summary>
            Maximum distance
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_MinimalDistance">
            <summary>
            Minimum distance
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Velocity">
            <summary>
            Velocity
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameNumberOfBatteries">
            <summary>
            Number of batteries in use:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_AutoAccept">
            <summary>
            Accept everyone
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_AutoAcceptToolTip">
            <summary>
            Automatically accept member requests
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Semiauto">
            <summary>
            Semi-auto
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipBatteryBlock_Semiauto">
            <summary>
            Sets to recharge when stored power is 0, sets to discharge when stored power is max.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockAction_Toggle">
            <summary>
            Toggle block
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_AutoAcceptRequest">
            <summary>
            Accept peace
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Factions_AutoAcceptRequestToolTip">
            <summary>
            Automatically accept peace requests
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_MotorRotorDisplacement">
            <summary>
            Allows to move the rotor grid up or down to solve various alignment issues
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_MotorRotorDisplacement">
            <summary>
            Rotor displacement
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ArmorCenter">
            <summary>
            Blast doors
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ArmorCorner">
            <summary>
            Blast door corner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ArmorSide">
            <summary>
            Blast door edge
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockAction_RemoveFromToolbar">
            <summary>
            [remove from toolbar]
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_PistonBase">
            <summary>
            Piston
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolbarAction_Decrease">
            <summary>
            Decrease
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolbarAction_Increase">
            <summary>
            Increase
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolbarAction_Reset">
            <summary>
            Reset
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_ThrustOverride">
            <summary>
            Overriding thruster will cause activation of thruster even without cockpit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ThrustOverride">
            <summary>
            Thrust override
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockAction_Switch">
            <summary>
            Switch
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockAction_DoorClosed">
            <summary>
            Closed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockAction_DoorOpen">
            <summary>
            Open
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_PistonTop">
            <summary>
            Top Piston Part
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_RotorPart">
            <summary>
            Rotor Part
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ArmorInvCorner">
            <summary>
            Blast door corner inverted
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_GyroOverride">
            <summary>
            If set, the gyro does not respond to cockpit controls, but can instead be controlled manually using the terminal control sliders
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_GyroOverride">
            <summary>
            Override controls
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_GyroPitchOverride">
            <summary>
            Pitch component of the constant torque that is applied by this gyro if the cockpit controls are overridden
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_GyroRollOverride">
            <summary>
            Roll component of the constant torque that is applied by this gyro if the cockpit controls are overridden
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_GyroYawOverride">
            <summary>
            Yaw component of the constant torque that is applied by this gyro if the cockpit controls are overridden
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_GyroPitchOverride">
            <summary>
            Pitch override
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_GyroRollOverride">
            <summary>
            Roll override
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_GyroYawOverride">
            <summary>
            Yaw override
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_PistonCurrentPosition">
            <summary>
            Current position: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudEnergyGroupBatteries">
            <summary>
            Batteries
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_SwitchLock">
            <summary>
            Switch lock
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Animation_Wave">
            <summary>
            Wave to friends (or enemies!)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Animation_Wave">
            <summary>
            Wave animation
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_ShowShipName">
            <summary>
            Show ship name
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ShowShipName">
            <summary>
            Show ship name
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastStatus_Connected">
            <summary>
            Remote access
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastStatus_OutOfBroadcastingRange">
            <summary>
            Out of broadcasting range
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastStatus_OutOfReceivingRange">
            <summary>
            Out of receiving range
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminalError_ShipHasBeenDisconnected">
            <summary>
            Ship has been disconnected from terminal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.CustomShipName_LargeShip">
            <summary>
            Large Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.CustomShipName_SmallShip">
            <summary>
            Small Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastStatus_PhysicallyConnected">
            <summary>
            Direct access
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockOwner_Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintPressToOpenButtonPanel">
            <summary>
            Press {0} to setup panel's buttons
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_GravityFieldRadius">
            <summary>
            Radius of the gravity field
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_GravityFieldRadius">
            <summary>
            Radius
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_GravityGeneratorSphere">
            <summary>
            Spherical Gravity Generator
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastStatus_Me">
            <summary>
            Me
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenTerminal_ShipList">
            <summary>
            Accessible ships
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.CustomShipName_Platform">
            <summary>
            Platform
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoNameBroadcastRange">
            <summary>
            Radio:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyText_AnyoneCanUse">
            <summary>
            Anyone Can Use
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_AnyoneCanUse">
            <summary>
            If false checks whether player pressing button has access to the block.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DefinitionError_BlockWithComputerNotTerminalBlock">
            <summary>
            Definition for {0} contains computer, but the block's TypeId is not a terminal block. This means that the block can be owned, but the ownership cannot be changed via terminal. Hint: Try setting the TypeId to any block that is in the terminal - the simplest case being just TerminalBlock
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ButtonPanel">
            <summary>
            Button Panel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SpawnInSpaceSuit">
            <summary>
            Space Suit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_Components">
            <summary>
            Components
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_LargeBlocks">
            <summary>
            Large Blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_SmallBlocks">
            <summary>
            Small Blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_View">
            <summary>
            View
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Camera">
            <summary>
            Camera
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LoadingError_ModifiedOriginalContent">
            <summary>
            Error loading original game content, cannot load file: {0}  Original game content has been probably modified, revert any modification and try again. Best way to do it is to delete folder 'SpaceEngineers\Content\Data' and then select in Steam 'Verify local game cache'.  Reinstalling the game is not enough, because Steam does not delete unknown files!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_BroadcastUsingAntennas">
            <summary>
            Broadcast using antennas
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipItemFilter_GenericProductionBlockInput">
            <summary>
            Any item accepted by {0}
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipItemFilter_GenericProductionBlockOutput">
            <summary>
            Any item produced by {0}
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorkshopTag_Production">
            <summary>
            Production
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorkshopTag_RespawnShip">
            <summary>
            Respawn Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintPressToExitCamera">
            <summary>
            Press {0} to exit camera view
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Arc_Furnace">
            <summary>
            Arc furnace
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_Caption">
            <summary>
            Spawn Menu
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_SpawnAsteroid">
            <summary>
            Spawn Asteroid/Planet
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorFieldDepthMax">
            <summary>
            Back extent
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorFieldDepthMin">
            <summary>
            Front extent
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorFieldHeightMax">
            <summary>
            Top extent
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorFieldHeightMin">
            <summary>
            Bottom extent
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorFieldWidthMax">
            <summary>
            Right extent
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorFieldWidthMin">
            <summary>
            Left extent
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Sensor">
            <summary>
            Sensor
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_LightBlinkInterval">
            <summary>
            Blinking interval of light (in seconds)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_LightBlinkLenght">
            <summary>
            Length  of blinking as percentage of blink interval
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_LightBlinkOffset">
            <summary>
            Offset of blinking as percentage of blink interval
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LightBlinkInterval">
            <summary>
            Blink Interval
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LightBlinkLenght">
            <summary>
            Blink Length
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LightBlinkOffset">
            <summary>
            Blink Offset
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Warhead_DetonationTime">
            <summary>
            Detonation time
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Warhead_StartCountdown">
            <summary>
            Start countdown
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Warhead_StopCountdown">
            <summary>
            Stop countdown
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Warhead_Safety">
            <summary>
            Arm warhead
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Warhead_Detonate">
            <summary>
            Detonate
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Warhead_SwitchTextArmed">
            <summary>
            Armed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Warhead_SwitchTextDisarmed">
            <summary>
            Disarmed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_SensorToolbarOpen">
            <summary>
            Opens toolbar
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorToolbarOpen">
            <summary>
            Setup actions
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorDetectFloatingObjects">
            <summary>
            Detect floating objects
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorDetectLargeShips">
            <summary>
            Detect large ships
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorDetectPlayers">
            <summary>
            Detect players
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorDetectSmallShips">
            <summary>
            Detect small ships
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_SensorFieldBack">
            <summary>
            How far the sensing field extends backwards from the sensor's position
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_SensorFieldBottom">
            <summary>
            How far the sensing field extends below the sensor's position
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_SensorFieldFront">
            <summary>
            How far the sensing field extends in front of the sensor
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_SensorFieldLeft">
            <summary>
            How far the sensing field extends to the left from the sensor's position
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_SensorFieldRight">
            <summary>
            How far the sensing field extends to the right from the sensor's position
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_SensorFieldTop">
            <summary>
            How far the sensing field extends above the sensor's position
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Warhead_SafetyTooltip">
            <summary>
            When checked, the warhead can be detonated manually or by unwary handle. This does not affect automatic detonation after the countdown.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorDetectStations">
            <summary>
            Detect stations
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_ShowGravityGizmo">
            <summary>
            Show gravity range
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_ShowSenzorGizmo">
            <summary>
            Show sensors field range
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlRemote">
            <summary>
            Control
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_RemoteControl">
            <summary>
            Remote Control
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_TimerBlock">
            <summary>
            Timer Block
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_TimerToolbarOpen">
            <summary>
            Setup actions
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_TimerTrigger">
            <summary>
            Trigger now
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_TimerDelay">
            <summary>
            Delay
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_TimerStart">
            <summary>
            Start
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_TimerStop">
            <summary>
            Stop
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_TimerToTrigger">
            <summary>
            Time to trigger: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_SmallRocketLauncherReload">
            <summary>
            Reloadable Rocket Launcher
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_AllBlocks">
            <summary>
            All Blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_ShipGroups">
            <summary>
            Groups
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_ArmorBlocks">
            <summary>
            Armor Blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_CharacterAnimations">
            <summary>
            Character Animations
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_CharacterTools">
            <summary>
            Character Tools
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_ConveyorBlocks">
            <summary>
            Conv./Cargo Blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_ShipLights">
            <summary>
            Lights
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_ShipThrusters">
            <summary>
            Thrusters
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_ShipWeaponsTools">
            <summary>
            Weapons and Tools
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_WindowBlocks">
            <summary>
            Window Blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_LargeBlocks">
            <summary>
            Large Blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_SmallBlocks">
            <summary>
            Small Blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_RespawnShip_Assembler">
            <summary>
            Respawn Ship 2
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_RespawnShip_EscapePod">
            <summary>
            Escape Pod
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_RespawnShip_RefineryAssembler">
            <summary>
            Respawn Ship 3
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_RespawnShip_ShipDrill">
            <summary>
            Small Drill Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_RespawnShip_Yellow">
            <summary>
            Respawn Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenMedicals_OwnerTimeoutColumn">
            <summary>
            Owner / Timeout
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenMedicals_RespawnWhenShipReady">
            <summary>
            Will spawn in "{0}" when it is ready.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenMedicals_RespawnShipReady">
            <summary>
            Ready
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenMedicals_RespawnShipNotReady">
            <summary>
            Not ready
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_ShowAntenaGizmo">
            <summary>
            Show antenna range
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_AsteroidAmountNone">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RespawnShipCooldown">
            <summary>
            Respawn ship cooldown
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RespawnShip_Default">
            <summary>
            Default cooldowns
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RespawnShip_x01">
            <summary>
            Default / 10
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RespawnShip_x02">
            <summary>
            Default / 5
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RespawnShip_x05">
            <summary>
            Default / 2
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RespawnShip_x10">
            <summary>
            Default x 10
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RespawnShip_x100">
            <summary>
            Default x 100
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RespawnShip_x2">
            <summary>
            Default x 2
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RespawnShip_x20">
            <summary>
            Default x 20
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RespawnShip_x5">
            <summary>
            Default x 5
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RespawnShip_x50">
            <summary>
            Default x 50
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_RespawnShip_CooldownsDisabled">
            <summary>
            Cooldowns disabled
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_FighterCockpit">
            <summary>
            Fighter Cockpit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorDetectAsteroids">
            <summary>
            Detect asteroids
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_Cockpit">
            <summary>
            Cockpit Blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_Power">
            <summary>
            Power Blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_Production">
            <summary>
            Production Blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_ItemAmount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_ItemType">
            <summary>
            Item type
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_SpawnObject">
            <summary>
            Spawn Object
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_Asteroids">
            <summary>
            Asteroids
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_Items">
            <summary>
            Items
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_Asteroid">
            <summary>
            Asteroid
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_AsteroidAddRandomMaterials">
            <summary>
            Add Random Materials
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_AsteroidCoreMaterial">
            <summary>
            Core Material
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_AsteroidSurfaceMaterial">
            <summary>
            Surface Material
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Assembler_SlaveMode">
            <summary>
            Cooperative Mode
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Ammo_Assembler">
            <summary>
            Ammo Assembler
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Base_Components_Assembler">
            <summary>
            Base Components Assembler
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Big_Arc_Furnace">
            <summary>
            Big Arc Furnace
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Big_Gas_Centrifugal_Refinery">
            <summary>
            Big Gas Centrifugal Refinery
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Big_Precious_Furnace">
            <summary>
            Big Noble Metals Furnace
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Big_Solids_Refinery">
            <summary>
            Big Solids Refinery
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Construction_Components_Assembler">
            <summary>
            Construction Components Assembler
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Electronics_Assembler">
            <summary>
            Electronics Assembler
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_Ammo">
            <summary>
            Ammo
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_Base_Components">
            <summary>
            Base Components
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_CommonMetals">
            <summary>
            Common Metals
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_Construction_Components">
            <summary>
            Construction Components
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_Electronics">
            <summary>
            Electronics
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_EnergeticIngots">
            <summary>
            Energetic Ingots
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_Ingots">
            <summary>
            Ingots
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_PreciousMetals">
            <summary>
            Noble Metals
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_Solids">
            <summary>
            Solids
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxTextAreYouSureToRemoveAsteroid">
            <summary>
            Are you sure you want to delete selected asteroid? (this can not be undone!)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_AsteroidGenerationCanTakeLong">
            <summary>
            Generating asteroids can take a long time!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Antenna_EnableBroadcast">
            <summary>
            Enable broadcasting
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_Broadcasting">
            <summary>
            Broadcasting on / off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LargeMissileTurretReloadingNotification">
            <summary>
            Reloading
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoBroadcasting">
            <summary>
            Broadcasting
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationCharacterBroadcastingOff">
            <summary>
            Broadcasting Off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationCharacterBroadcastingOn">
            <summary>
            Broadcasting On
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationCopyPasteAsteroidObstructed">
            <summary>
            Can not place asteroids/voxels over ships(except stations) and players
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_AdvancedRotor">
            <summary>
            Advanced Rotor
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_AdvancedRotorPart">
            <summary>
            Advanced Rotor Part
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_InvalidAmount">
            <summary>
            Invalid amount
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTerminalProduction_SlaveMode">
            <summary>
            Enable or disable cooperative mode
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_PredefinedAsteroids">
            <summary>
            Predefined Asteroids
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_ProceduralAsteroids">
            <summary>
            Procedural asteroids
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_ProceduralSeed">
            <summary>
            Seed (different seed and radius produces different asteroid)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_ProceduralSize">
            <summary>
            Asteroid size
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_SelectAsteroidType">
            <summary>
            Select Asteroid Type
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipItemFilter_AmmoMagazineInput">
            <summary>
            Any ammo magazine accepted by {0}
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_Detach">
            <summary>
            Detach
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_Attach">
            <summary>
            Attach
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Notification_NoControl">
            <summary>
            Someone else is using this ship!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Notification_NoControlStation">
            <summary>
            Someone else is using this station!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MissileLauncherReloadingNotification">
            <summary>
            Reloading
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ProjectionOffsetX">
            <summary>
            Horizontal offset
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ProjectionOffsetY">
            <summary>
            Vertical offset
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ProjectionOffsetZ">
            <summary>
            Forward offset
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ProjectionRotationX">
            <summary>
            Pitch
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ProjectionRotationY">
            <summary>
            Yaw
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ProjectionRotationZ">
            <summary>
            Roll
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_Projector">
            <summary>
            Projector
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationProjectorGridSize">
            <summary>
            Incorrect grid size. Blueprint size must match that of the projector.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationProjectorMultipleGrids">
            <summary>
            Multiple grids are not supported. Only the largest grid will be used.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_PivotBtn">
            <summary>
            Show grid pivot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Animation_ThumbUp">
            <summary>
            Thumb-Up
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Animation_Victory">
            <summary>
            Victory
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ControlPanel">
            <summary>
            Control Panel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_SteelCatwalkCorner">
            <summary>
            Steel Catwalk Corner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_SteelCatwalkPlate">
            <summary>
            Steel Catwalk Plate
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_SteelCatwalkTwoSides">
            <summary>
            Steel Catwalk Two Sides
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.KeepProjectionToggle">
            <summary>
            Keep Projection
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.KeepProjectionTooltip">
            <summary>
            Keep projection after building is complete. Useful for automated building, but can degrade performance.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ShowOnlyBuildableBlockToggle">
            <summary>
            Show Only Buildable
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ShowOnlyBuildableTooltip">
            <summary>
            Show Only Buildable
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.RemoveProjectionButton">
            <summary>
            Remove
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_SpaceBall">
            <summary>
            Space Ball
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_GridCreateTool_CreateSmallShip">
            <summary>
            Create New Small Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_GridCreateTool_CreateLargeShip">
            <summary>
            Create New Large Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_GridCreateTool_CreateStation">
            <summary>
            Create New Station
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_VoxelHands">
            <summary>
            Voxel Hands
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_SpaceBallFriction">
            <summary>
            Friction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_SpaceBallVirtualMass">
            <summary>
            Virtual mass
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_SoundBlockRange">
            <summary>
            Range of played sound
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_SoundBlockVolume">
            <summary>
            Volume of played sound
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SoundBlockRange">
            <summary>
            Range
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SoundBlockVolume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_SoundBlock">
            <summary>
            Sound Block
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_VoxelHand_Box">
            <summary>
            Box
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_VoxelHand_Sphere">
            <summary>
            Sphere
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsLimitWorldSize">
            <summary>
            When set, the game area is limited to a cube with a side length set to the chosen size. All objects that leave the game area will be removed from the game. Characters leaving the game area will be killed.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_WorldSize100Km">
            <summary>
            100 km
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_WorldSize10Km">
            <summary>
            10 km
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_WorldSize20Km">
            <summary>
            20 km
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_WorldSize50Km">
            <summary>
            50 km
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_WorldSizeUnlimited">
            <summary>
            Unlimited
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_WorldSizeCustom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SoundBlockLoopTime">
            <summary>
            Loop time
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SoundBlockPlay">
            <summary>
            Play
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SoundBlockSoundList">
            <summary>
            Sound list
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SoundBlockStop">
            <summary>
            Stop
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_LoopTimer">
            <summary>
            Loop timer: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_VoxelHand_AutoLevel">
            <summary>
            Terrain auto level
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_VoxelHand_Capsule">
            <summary>
            Capsule
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SoundBlock_SoundName_Alert1">
            <summary>
            Alert 1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SoundBlock_SoundName_Alert2">
            <summary>
            Alert 2
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SoundBlock_SoundName_Alert3">
            <summary>
            Alert 3
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SoundBlock_SoundName_EnemyDetected">
            <summary>
            Enemy detected
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SoundBlock_SoundName_LightsOff">
            <summary>
            Lights off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SoundBlock_SoundName_LightsOn">
            <summary>
            Lights on
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SoundBlock_SoundName_Music1">
            <summary>
            Music 1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SoundBlock_SoundName_Music2">
            <summary>
            Music 2
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SoundBlock_SoundName_ObjectiveComplete">
            <summary>
            Objective complete
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_EditCode">
            <summary>
            Edit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_RunCode">
            <summary>
            Run
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_VoxelHand_Ramp">
            <summary>
            Ramp
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_AsteroidAmountProceduralHigh">
            <summary>
            Infinite: High density
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_AsteroidAmountProceduralLow">
            <summary>
            Infinite: Low density
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_AsteroidAmountProceduralNormal">
            <summary>
            Infinite: Normal density
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsDestructibleBlocks">
            <summary>
            Enable/Disable blocks destruction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_DestructibleBlocks">
            <summary>
            Destructible blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorkshopTag_Exploration">
            <summary>
            Exploration
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlueprintScreen_DevMismatchCaption">
            <summary>
            Blueprint created in development version
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlueprintScreen_DevMismatchMessage">
            <summary>
            This blueprint was created in development version. It could cause issues in game.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorkshopTag_Dev">
            <summary>
            Development
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Programmable_Block">
            <summary>
            Programmable block
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_CodeChanged">
            <summary>
            Code changed
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_CodeEditor_SaveExit" -->
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_CodeEditor_Title">
            <summary>
            Code editor
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Exception_AllreadyRunning">
            <summary>
            Program is already running.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Exception_ExceptionCaught">
            <summary>
            Caught exception during execution of script:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Exception_NoAssembly">
            <summary>
            Assembly not found. Please compile script.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Exception_NoMain">
            <summary>
            Main method not found. Please add Main method into script.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Exception_TooComplex">
            <summary>
            Script execution terminated, script is too complex. Please edit and rebuild script.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_SaveChanges">
            <summary>
            Do you want to remember changes ?
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_EditCode_Tooltip">
            <summary>
            Opens code editor where you can create new scripts and upload/download them from steam workshop
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_RunCode_Tooltip">
            <summary>
            Run current script and notifies about any exception during run.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_CodeEditor_SaveExit_Tooltip">
            <summary>
            Remembers code inside editor and returns to terminal panel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Editor_BrowseWorkshop_Tooltip">
            <summary>
            Opens workshop where you can upload your scripts or subscribe to another author's scripts.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Editor_CheckCode">
            <summary>
            Check code
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Editor_CheckCode_Tooltip">
            <summary>
            Checks code inside editor for errors
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Editor_CompilationFailed">
            <summary>
            Compilation failed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Editor_CompilationFailedErrorFormat">
            <summary>
            Line {0} : {1}
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Editor_CompilationFailedErrorList">
            <summary>
            Error list
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Editor_CompilationOk">
            <summary>
            Compilation successful.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Editor_LineNo">
            <summary>
            Line : {0} / {1}
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Editor_RememberCode">
            <summary>
            Remember code
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Editor_RememberCode_Tooltip">
            <summary>
            Remember current script and leave editor window open
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_ButtonCreateFromEditor">
            <summary>
            Create from editor
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_ButtonDetails">
            <summary>
            Details
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_ButtonRefreshScripts">
            <summary>
            Refresh Scripts
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_ButtonRename">
            <summary>
            Rename
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_ButtonReplaceFromEditor">
            <summary>
            Replace from editor
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_NewScriptName">
            <summary>
            Enter new name
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_OpenInWorkshop">
            <summary>
            
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_PublishScriptDialogText">
            <summary>
            Do you want to publish this script?
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_PublishScriptPublished">
            <summary>
            SCRIPT PUBLISHED
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_ReplaceScriptDialogText">
            <summary>
            Are you sure to replace existing script with new one from editor ?
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_ReplaceScriptNameDialogText">
            <summary>
            Script with the name  {0} already exists. Do you want to replace it?
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_ReplaceScriptNameDialogTitle">
            <summary>
            Replace
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_ReplaceScriptNameUsed">
            <summary>
            Cannot rename script because it is used by another process.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_ScriptNotFound">
            <summary>
            Cannot find the script file
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_ScriptsScreenTitle">
            <summary>
            Scripts screen
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Editor_Help">
            <summary>
            Help
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Editor_HelpTooltip">
            <summary>
            Opens steam workshop page with description about in-game programming
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_DeleteScriptDialogText">
            <summary>
            Are you sure you want to delete this script ?
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Exception_NotAllowed">
            <summary>
            In-game scripts are disabled for this world
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableIngameScripts">
            <summary>
            In-game scripts
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorDetectEnemy">
            <summary>
            Detect enemy
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorDetectFriendly">
            <summary>
            Detect friendly
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorDetectOwner">
            <summary>
            Detect owner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorDetectNeutral">
            <summary>
            Detect neutral
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Exception_Ownershipchanged">
            <summary>
            Ownership of programmable block changed. Please recompile program.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Chat_GlobalChat">
            <summary>
            -Broadcast-
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Chat">
            <summary>
            Comms
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ViewDistance">
            <summary>
            View distance
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ViewDistance_10_Km">
            <summary>
            10 km
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ViewDistance_15_Km">
            <summary>
            15 km
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ViewDistance_20_Km">
            <summary>
            20 km
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ViewDistance_30_Km">
            <summary>
            30 km - small performance hit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ViewDistance_40_Km">
            <summary>
            40 km - performance hit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ViewDistance_50_Km">
            <summary>
            50 km - big performance hit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ViewDistance_5_Km">
            <summary>
            5 km - low end machines
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ViewDistance_7_Km">
            <summary>
            7 km - performance friendly
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ViewDistance_Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsViewDistance">
            <summary>
            Larger view distances can cause performance issues depending on how many objects are in the world. Large view distances are not recommended on worlds with high asteroid densities.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_SpaceBallRestitution">
            <summary>
            Restitution
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TooltipScreenMods_Category_All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TooltipScreenMods_Category_Animation">
            <summary>
            Animation
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TooltipScreenMods_Category_Block">
            <summary>
            Block
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TooltipScreenMods_Category_Character">
            <summary>
            Character
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TooltipScreenMods_Category_Modpack">
            <summary>
            Modpack
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TooltipScreenMods_Category_Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TooltipScreenMods_Category_Production">
            <summary>
            Production
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TooltipScreenMods_Category_RespawnShip">
            <summary>
            Respawn Ship
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TooltipScreenMods_Category_Script">
            <summary>
            Script
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TooltipScreenMods_Category_Skybox">
            <summary>
            Skybox
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_ShowOnHud">
            <summary>
            Show on  HUD
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_AlwaysVisible">
            <summary>
            Always Visible
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_AlwaysVisible_Tooltip">
            <summary>
            Prevents this GPS coordinate from getting clustered or fading out.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_X">
            <summary>
            X
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_Z">
            <summary>
            Z
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS">
            <summary>
            GPS
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_Add">
            <summary>
            New
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_CopyToClipboard">
            <summary>
            Copy to clipboard
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_Delete">
            <summary>
            Delete
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_NewFromClipboard">
            <summary>
            New from clipboard
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_NewFromCurrent">
            <summary>
            New from current pos.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_GenerateSeed">
            <summary>
            Generate seed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_SaveWarning">
            <summary>
            Warning: illegal data. Modifications will not be saved.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Chat_NoFaction">
            <summary>
            Only faction members can use faction-to-faction communications
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Chat_Offline">
            <summary>
            offline
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Chat_Pending">
            <summary>
            PENDING
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_FromChatDescPrefix">
            <summary>
            By: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_NewCoord_Desc">
            <summary>
            New coordinates
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_NewCoord_Name">
            <summary>
            New
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_NewFromClipboard_Desc">
            <summary>
            Pasted from clipboard
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_NewFromCurrent_Desc">
            <summary>
            Current position
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_NewFromCurrent_Name">
            <summary>
            Current
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_TextPanelShowTextPanel">
            <summary>
            Edit private text
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_TextPanelTitle">
            <summary>
            Private title
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_TextPanel">
            <summary>
            Text panel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintPressToShowScreen">
            <summary>
            Press {0} to show screen
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_Shoot">
            <summary>
            Shoot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_ShootOnce">
            <summary>
            Shoot once
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockComboBoxValue_TextPanelAccessOnlyOwner">
            <summary>
            Only owner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockComboBoxValue_TextPanelAccessReadAll">
            <summary>
            Everyone read-only
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockComboBoxValue_TextPanelAccessReadFaction">
            <summary>
            Faction read-only
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockComboBoxValue_TextPanelAccessReadWriteAll">
            <summary>
            Everyone read/write
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockComboBoxValue_TextPanelAccessReadWriteFaction">
            <summary>
            Faction read/write
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_TextPanelAccessType">
            <summary>
            Access type
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Category_GeneratedBlocks">
            <summary>
            Generated Blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_NewFromBroadcast">
            <summary>
            New from broadcast
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_NewFromFactionComms">
            <summary>
            New from faction comms
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_GPS_NewFromPrivateComms">
            <summary>
            New from private comms
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_ToolShake">
            <summary>
            Enable shaking of ship drills and welders
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableToolShake">
            <summary>
            Enable tools shake
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Editor_TextTooLong">
            <summary>
            Text is too long. It won't be saved.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_Console">
            <summary>
            Console
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlDescCameraZoom">
            <summary>
            Camera zoom
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.EnableDamageEffects">
            <summary>
            Enable damage effects
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipVideoOptionsEnableDamageEffects">
            <summary>
            Enables/disables particle effects  for damaged blocks 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorkshopTag_Asteroid">
            <summary>
            Asteroid
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyAngledArmorCorner">
            <summary>
            Angled Heavy Armor Corner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyAngledArmorSlope">
            <summary>
            Angled Heavy Armor Slope
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyRoundedArmorCorner">
            <summary>
            Rounded Heavy Armor Corner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyRoundedArmorSlope">
            <summary>
            Rounded Heavy Armor Slope
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightAngledArmorCorner">
            <summary>
            Angled Armor Corner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightAngledArmorSlope">
            <summary>
            Angled Armor Slope
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightRoundedArmorCorner">
            <summary>
            Rounded Armor Corner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightRoundedArmorSlope">
            <summary>
            Rounded Armor Slope
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlDescNetgraph">
            <summary>
            Toggle netgraph
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_BackgroundColor">
            <summary>
            Backgr.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_FontColor">
            <summary>
            Color
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LCDScreenDefinitionsTextures">
            <summary>
            Loaded textures
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LCDScreenRefreshInterval">
            <summary>
            Image change interval
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LCDScreenRemoveSelectedTextures">
            <summary>
            Remove selected
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LCDScreenSelectedTextures">
            <summary>
            Selected textures
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LCDScreenSelectTextures">
            <summary>
            Add to selection
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LCDScreenTextSize">
            <summary>
            Font Size
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ShowTextOnScreen">
            <summary>
            Show text on screen
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_LCD_Panel">
            <summary>
            LCD Panel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_LCD_PanelWide">
            <summary>
            Wide LCD panel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockComboBoxValue_TextPanelShowTextNone">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockComboBoxValue_TextPanelShowTextPrivate">
            <summary>
            Private
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockComboBoxValue_TextPanelShowTextPublic">
            <summary>
            Public
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_TextPanelPublicTitle">
            <summary>
            Title
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_TextPanelShowPublicTextPanel">
            <summary>
            Edit text
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LaserAntenna">
            <summary>
            Laser Antenna
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaModeIdle">
            <summary>
            Idle
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaCopyCoords">
            <summary>
            Copy my coords
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaCopyCoordsHelp">
            <summary>
            Copy this antenna's position into clipboard
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaIdleButton">
            <summary>
            Idle
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaConnectButton">
            <summary>
            Connect to receiver
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaConnectGPS">
            <summary>
            Connect to coords
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaSelectedCoords">
            <summary>
            Selected GPS coordinates
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaPasteGPS">
            <summary>
            Paste coords
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaReceiversList">
            <summary>
            Known receivers
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightRoundArmorCorner">
            <summary>
            Round Armor Corner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightRoundArmorInvCorner">
            <summary>
            Round Armor Inv. Corner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightRoundArmorSlope">
            <summary>
            Round Armor Slope
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyRoundArmorCorner">
            <summary>
            Heavy Armor Round Corner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyRoundArmorInvCorner">
            <summary>
            Heavy Armor Round Inv. Corner
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyRoundArmorSlope">
            <summary>
            Heavy Armor Round Slope
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaModeConnectedTo">
            <summary>
            Connected to 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaModeContactRec">
            <summary>
            Trying to establish connection to 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaModeRotGPS">
            <summary>
            Rotating towards GPS coordinates 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaModeRotRec">
            <summary>
            Rotating towards 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaModeSearchGPS">
            <summary>
            Searching for a laser at GPS coordinates 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorCorner2">
            <summary>
            Light Armor Corner 2x1x1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorCorner2Smooth">
            <summary>
            Light Armor Corner 2x1x1 Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorCorner3">
            <summary>
            Light Armor Corner 3x1x1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorCorner3Smooth">
            <summary>
            Light Armor Corner 3x1x1 Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorInvCorner2">
            <summary>
            Light Armor Inv. Corner 2x1x1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorInvCorner2Smooth">
            <summary>
            Light Armor Inv. Corner 2x1x1 Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorInvCorner3">
            <summary>
            Light Armor Inv. Corner 3x1x1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorInvCorner3Smooth">
            <summary>
            Light Armor Inv. Corner 3x1x1 Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorSlope2">
            <summary>
            Light Armor Slope 2x1x1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorSlope2Smooth">
            <summary>
            Light Armor Slope 2x1x1 Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorSlope3">
            <summary>
            Light Armor Slope 3x1x1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorSlope3Smooth">
            <summary>
            Light Armor Slope 3x1x1 Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorCorner2Base">
            <summary>
            Light Armor Corner 2x1x1 Base
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorCorner2BaseSmooth">
            <summary>
            Light Armor Corner 2x1x1 Base Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorCorner2Tip">
            <summary>
            Light Armor Corner 2x1x1 Tip
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorCorner2TipSmooth">
            <summary>
            Light Armor Corner 2x1x1 Tip Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorInvCorner2Base">
            <summary>
            Light Armor Inv. Corner 2x1x1 Base
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorInvCorner2BaseSmooth">
            <summary>
            Light Armor Inv. Corner 2x1x1 Base Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorInvCorner2Tip">
            <summary>
            Light Armor Inv. Corner 2x1x1 Tip
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorInvCorner2TipSmooth">
            <summary>
            Light Armor Inv. Corner 2x1x1 Tip Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorSlope2Base">
            <summary>
            Light Armor Slope 2x1x1 Base
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorSlope2BaseSmooth">
            <summary>
            Light Armor Slope 2x1x1 Base Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorSlope2Tip">
            <summary>
            Light Armor Slope 2x1x1 Tip
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LightArmorSlope2TipSmooth">
            <summary>
            Light Armor Slope 2x1x1 Tip Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorCorner2">
            <summary>
            Heavy Armor Corner 2x1x1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorCorner2Base">
            <summary>
            Heavy Armor Corner 2x1x1 Base
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorCorner2BaseSmooth">
            <summary>
            Heavy Armor Corner 2x1x1 Base Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorCorner2Smooth">
            <summary>
            Heavy Armor Corner 2x1x1 Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorCorner2Tip">
            <summary>
            Heavy Armor Corner 2x1x1 Tip
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorCorner2TipSmooth">
            <summary>
            Heavy Armor Corner 2x1x1 Tip Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorInvCorner2">
            <summary>
            Heavy Armor Inv. Corner 2x1x1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorInvCorner2Base">
            <summary>
            Heavy Armor Inv. Corner 2x1x1 Base
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorInvCorner2BaseSmooth">
            <summary>
            Heavy Armor Inv. Corner 2x1x1 Base Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorInvCorner2Smooth">
            <summary>
            Heavy Armor Inv. Corner 2x1x1 Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorInvCorner2Tip">
            <summary>
            Heavy Armor Inv. Corner 2x1x1 Tip
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorInvCorner2TipSmooth">
            <summary>
            Heavy Armor Inv. Corner 2x1x1 Tip Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorSlope2">
            <summary>
            Heavy Armor Slope 2x1x1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorSlope2Base">
            <summary>
            Heavy Armor Slope 2x1x1 Base
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorSlope2BaseSmooth">
            <summary>
            Heavy Armor Slope 2x1x1 Base Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorSlope2Smooth">
            <summary>
            Heavy Armor Slope 2x1x1 Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorSlope2Tip">
            <summary>
            Heavy Armor Slope 2x1x1 Tip
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HeavyArmorSlope2TipSmooth">
            <summary>
            Heavy Armor Slope 2x1x1 Tip Smooth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaReceiversListHelp">
            <summary>
            These receivers are in radio range and can report their position. Their current state and target is in parenthesis: idle   laser is idling >> laser is rotating towards other receiver or GPS coordinates ?>  searching for other laser at requested GPS coordinates ~> contacting other side of link (this includes waiting for other laser        to turn its face to me or futile effort to contact receiver        which is turned off or is not there any more) => connection is established To connect to lasers not listed here you can connect to coordinates.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LargeTurretEnableTurretIdleMovement">
            <summary>
            Enable idle movement
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaCopyTargetCoords">
            <summary>
            Copy target coords
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaCopyTargetCoordsHelp">
            <summary>
            Copy target's current or last known position into clipboard
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockAction_ConveyorSorterBlacklist">
            <summary>
            Blacklist
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockAction_ConveyorSorterWhitelist">
            <summary>
            Whitelist
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ConveyorSorterFilterMode">
            <summary>
            Filter Mode
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ConveyorSorter">
            <summary>
            Conveyor Sorter
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaOnlyPerm">
            <summary>
            Only receivers set to permanent connection found
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaPermanentCheckbox">
            <summary>
            Permanent connection
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ConveyorSorterAdd">
            <summary>
            Add
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ConveyorSorterCandidatesList">
            <summary>
            Add new filter
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ConveyorSorterFilterItemsList">
            <summary>
            Active filters
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ConveyorSorterFilterModeBlacklist">
            <summary>
            Blacklist
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ConveyorSorterFilterModeWhitelist">
            <summary>
            Whitelist
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ConveyorSorterRemove">
            <summary>
            Remove
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_SmallConveyorSorter">
            <summary>
            Small Conveyor Sorter
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_ConvSorterTypes_Ammo">
            <summary>
            *ammo*
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_ConvSorterTypes_Component">
            <summary>
            *components*
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_ConvSorterTypes_HandTool">
            <summary>
            *hand tools*
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_ConvSorterTypes_Ingot">
            <summary>
            *ingots*
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_ConvSorterTypes_Ore">
            <summary>
            *ore*
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Depressurize">
            <summary>
            The vent will remove air from the room and store it in tanks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Stockpile">
            <summary>
            Stockpiling tanks will not get drained by air vents
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Depressurize">
            <summary>
            Depressurize
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Stockpile">
            <summary>
            Stockpile
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_AirVent">
            <summary>
            Air Vent
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_OxygenGenerator">
            <summary>
            Oxygen Generator
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_OxygenTank">
            <summary>
            Oxygen Tank
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_Ice">
            <summary>
            Ice
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Oxygen">
            <summary>
            Oxygen
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxTextAreYouSureEnableOxygen">
            <summary>
            Are you sure you want to enable oxygen? Doing so will cause materials on untouched asteroids to change. This is irreversible.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnableOxygen">
            <summary>
            Enable oxygen processing. Used by space suit and cockpits.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.World_Settings_EnableOxygen">
            <summary>
            Enable oxygen
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_DrainAll">
            <summary>
            Drain All
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockOwner_TransferTo">
            <summary>
            Transfer to:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_AirtightHangarDoor">
            <summary>
            Airtight Hangar Door
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LargeTurretTargetCharacters">
            <summary>
            Target characters
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LargeTurretTargetLargeGrids">
            <summary>
            Target large ships
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LargeTurretTargetSmallGrids">
            <summary>
            Target small ships
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LargeTurretTargetStations">
            <summary>
            Target stations
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_OxygenBottle">
            <summary>
            Oxygen Bottle
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_OxygenBottles">
            <summary>
            Oxygen Bottles
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_OxygenBottles">
            <summary>
            Oxygen Bottles
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Refill">
            <summary>
            Refill Bottles
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_Planets">
            <summary>
            Planets
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_CreateLayer">
            <summary>
            Create layer
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_RemoveLayer">
            <summary>
            Remove layer
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_AutoRefill">
            <summary>
            Auto-Refill
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_ShowInTerminal">
            <summary>
            Show block in terminal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_ShowAllInTerminal">
            <summary>
            Show hidden blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_ShowInToolbarConfig">
            <summary>
            Show block in toolbar config
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationBottleRefill">
            <summary>
            Oxygen refilled from bottles.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationOxygenCritical">
            <summary>
            Oxygen is critical.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationOxygenLow">
            <summary>
            Oxygen is low.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_PickPlanet">
            <summary>
            Pick planet to edit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.buttonBrowseWorkshop">
            <summary>
            Browse Workshop
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.buttonEdit">
            <summary>
            Edit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.buttonOpenInWorkshop">
            <summary>
            Open in Workshop
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.buttonPublish">
            <summary>
            Publish
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.buttonRefresh">
            <summary>
            Refresh
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.buttonRemove">
            <summary>
            Remove
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Difficulty">
            <summary>
            Difficulty
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DifficultyEasy">
            <summary>
            Easy
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DifficultyHard">
            <summary>
            Hard
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DifficultyNormal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenCaptionScenario">
            <summary>
            Scenario
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenCaptionAISchool">
            <summary>
            AI School Scenario
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationSuitEnergyCriticalNoDamage">
            <summary>
            Warning: Suit energy is critically low.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationSuitEnergyLowNoDamage">
            <summary>
            Suit energy is low.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_Helmet">
            <summary>
            Helmet on / off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationNoHelmetVariation">
            <summary>
            Cannot remove helmet on this suit.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoHelmet">
            <summary>
            Helmet
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_UpdatePlanet">
            <summary>
            Update planet
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_ShowInTerminalToolTip">
            <summary>
            Show/hide current block in terminal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_ShowInToolbarConfigToolTip">
            <summary>
            Show/hide current block in toolbar config
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHelmetOff">
            <summary>
            Helmet Off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHelmetOn">
            <summary>
            Helmet On
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_MainCockpit">
            <summary>
            Main ship cockpit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Cockpit_MainCockpit">
            <summary>
            Main cockpit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintNoAction">
            <summary>
            Empty
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyText_Button">
            <summary>
            Button
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyText_ButtonList">
            <summary>
            Available buttons
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyText_ButtonName">
            <summary>
            Button name
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_Enable3rdPersonCamera">
            <summary>
            Enable 3rd person view
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_OxygenOutput">
            <summary>
            Oxygen Output: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_OxygenFarm">
            <summary>
            Oxygen Farm
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_Encounters">
            <summary>
            Random encounters
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_EnemyAntennaRange">
            <summary>
            Show distance for enemy antennas
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_FriendlyAntennaRange">
            <summary>
            Show distance for friendly antennas
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_OwnedAntennaRange">
            <summary>
            Show distance for owned antennas
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenButtonBattle">
            <summary>
            Battle
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_CryoChamber">
            <summary>
            Cryo Chamber
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_Lights">
            <summary>
            Lights
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_Terminal">
            <summary>
            Show terminal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_MissionSettings">
            <summary>
            Scenario Settings
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MissionScreenCaption">
            <summary>
            Scenario Settings
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MissionTriggerOtherWon">
            <summary>
            Other side won
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MissionTriggerReachPosition">
            <summary>
            Reach GPS position
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerCaptionPositionLeft">
            <summary>
            Leave game area
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerCaptionPositionReached">
            <summary>
            Reach GPS position
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerCaptionSomeoneWon">
            <summary>
            Someone Won
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerMessage">
            <summary>
            Message
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockIsNotPowered">
            <summary>
            Block is not powered
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiMissionTriggersLostCondition">
            <summary>
            Lost condition:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiMissionTriggersWinCondition">
            <summary>
            Win condition:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerPasteGps">
            <summary>
            Paste GPS
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerPositionRadius">
            <summary>
            Radius
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_RunArgument">
            <summary>
            Argument
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_Dampeners">
            <summary>
            Dampeners
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_RunArgument_ToolTip">
            <summary>
            An argument passed to your code when clicking the Run button
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_Helmet">
            <summary>
            Helmet
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_Jetpack">
            <summary>
            Jetpack
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_BuildMode">
            <summary>
            Build Mode
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_LandingGear">
            <summary>
            Landing gears
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_Reactors">
            <summary>
            Reactors
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_Thrusts">
            <summary>
            Thrusters
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_Broadcasting">
            <summary>
            Broadcasting
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_ShowTerminal">
            <summary>
            Show terminal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_EffectivenessModule">
            <summary>
            Effectiveness Module
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_PowerEfficiencyModule">
            <summary>
            Power Efficiency Module
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_ProductivityModule">
            <summary>
            Productivity Module
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_Battle">
            <summary>
            Battle
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_Extend">
            <summary>
            Extend
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_Retract">
            <summary>
            Retract
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintJoystickPressToOpenControlPanel">
            <summary>
            Access control menu to open control panel of {0}
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintJoystickPressToOpenTerminal">
            <summary>
            Access control menu to open terminal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_OpenInventory">
            <summary>
            Open inventory
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_SetupButtons">
            <summary>
            Setup buttons
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_ShowControlPanel">
            <summary>
            Show control panel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintJoystickPressToOpenButtonPanel">
            <summary>
            Access control menu to setup panel's buttons
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DialogTextJoiningBattle">
            <summary>
            Joining battle
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DialogTextJoiningScenario">
            <summary>
            Joining scenario
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DialogTextJoinBattleFailed">
            <summary>
            Joining battle failed, reason: {0}
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintPressToEnterCryochamber">
            <summary>
            Press {0} to enter cryo chamber
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHintLeaveCryoChamber">
            <summary>
            Press {0} to leave cryo chamber
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_SpawnFlora">
            <summary>
            Spawn flora
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_ScrapIngot">
            <summary>
            Old Scrap Metal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_AddWaypoint">
            <summary>
            Add
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_MoveWaypointDown">
            <summary>
            Move Down
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_MoveWaypointUp">
            <summary>
            Move Up
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_RemoveWaypoint">
            <summary>
            Remove
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_AutoPilot">
            <summary>
            Autopilot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_FlightMode">
            <summary>
            Flight Mode
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_FlightMode_Circle">
            <summary>
            Circle
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_FlightMode_OneWay">
            <summary>
            One Way
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_FlightMode_Patrol">
            <summary>
            Patrol
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_GpsLocations">
            <summary>
            GPS Locations
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Waypoints">
            <summary>
            Waypoints
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyPopup_AutoPilotToolbarOpen">
            <summary>
            Set actions to be done when autopilot reaches this waypoint
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_AutoPilotToolbarOpen">
            <summary>
            Setup Actions
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Notification_NoControlAutoPilot">
            <summary>
            Autopilot enabled
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenGraphicsOptions_Renderer">
            <summary>
            Renderer
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenGraphicsOptions_ShadowMapResolution">
            <summary>
            Shadow quality
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipVideoOptionsRenderer">
            <summary>
            Changing the renderer requires restart of the game.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.StationRotation_Static">
            <summary>
            Station rotation
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.StationRotation_Static_Desc">
            <summary>
            Enables rotation of station block
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationStationRotation">
            <summary>
            Station rotation mode, press {0} to switch off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxTextRestartNeededAfterRendererSwitch">
            <summary>
            Applied changes will be visible after restarting the game
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiScenarioPlayerName">
            <summary>
            Player name
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiScenarioPlayerStatus">
            <summary>
            Status
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiScenarioSend">
            <summary>
            Send
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiScenarioStart">
            <summary>
            Start
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_EnableDockingMode">
            <summary>
            Precision Mode
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ForwardDirection">
            <summary>
            Forward Direction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_RemoteCopy">
            <summary>
            Copy
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_RemotePaste">
            <summary>
            Paste
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_WaypointReset">
            <summary>
            Reset waypoint
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTooltip_WaypointReset">
            <summary>
            Resets current waypoint to first position
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiScenarioTimeout">
            <summary>
            Connection timeout:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiScenarioTimeout10min">
            <summary>
            10 min
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiScenarioTimeout3min">
            <summary>
            3 min
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiScenarioTimeout5min">
            <summary>
            5 min
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiScenarioTimeoutUnlimited">
            <summary>
            Unlimited
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_GameScenario">
            <summary>
            Scenario
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Organic">
            <summary>
            Organic
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.IconSymbol_Organic">
            <summary>
            Organic
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Notification_CockpitIsDamaged">
            <summary>
            Cockpit is damaged
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LaserAntennaOutsideLimits">
            <summary>
            Target outside movement range
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnableFlora">
            <summary>
             Enables flora for planets
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnableConvertToStation">
            <summary>
            Add option to ship's terminal to convert ship to station
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_FloraDensity">
            <summary>
            Density of flora elements on planets
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableFlora">
            <summary>
            Enable Flora
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableConvertToStation">
            <summary>
            Enable convert to station
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_FloraDensity">
            <summary>
            Flora Density
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_FloraDensity_High">
            <summary>
            High
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_FloraDensity_Low">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_FloraDensity_Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableRespawnShips">
            <summary>
            Enable respawn ships
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnableRespawnShips">
            <summary>
            Enable respawn in ships and suit. When disabled and no valid medical rooms exist, respawn won't be possible at all!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorPlaySound">
            <summary>
            Audible Proximity Alert
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxCaptionDoYouWishToPublishScenario">
            <summary>
            PUBLISH SCENARIO
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxCaptionDoYouWishToUpdateScenario">
            <summary>
            UPDATE SCENARIO
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxCaptionScenarioPublished">
            <summary>
            SCENARIO PUBLISHED
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxCaptionScenarioPublishFailed">
            <summary>
            PUBLISH FAILED
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxTextDoYouWishToPublishScenario">
            <summary>
            Are you sure you want to upload and publish selected scenario on Steam Workshop? Note that by submitting this item, you agree to the workshop terms of service (see http://steamcommunity.com/sharedfiles/workshoplegalagreement).
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxTextDoYouWishToUpdateScenario">
            <summary>
            Are you sure you want to upload and overwrite selected scenario on Steam Workshop?
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxTextScenarioPublished">
            <summary>
            Publish has been completed successfully. If you have Steam Overlay enabled, a page will open and you can edit attributes such as title, description or visibility (it is public by default).
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxTextScenarioPublishFailed">
            <summary>
            Failed to publish on Steam Workshop
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_ScenarioEditMode">
            <summary>
            Allows additional ingame options for creating scenario. Also displays your saved game in scenario start screen.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_ScenarioEditMode">
            <summary>
            Scenario edit mode
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenMedicals_NoRespawnPossible">
            <summary>
            No respawn point is available!  Try the refresh button for any available Medical rooms. If there is no chance of accessing a medical room, the game is over and you can leave the game.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnablePlanets">
            <summary>
            Enable/disable spawning of planets in world
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnablePlanets">
            <summary>
            Enable planets
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxTextWorkshopDownloadFailed">
            <summary>
            Download failed, please try again later.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerCaptionLives">
            <summary>
            Limited lives
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggersLives">
            <summary>
            Lives
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MedicalRoom_ownershipAssignmentLabel">
            <summary>
            Ownership Assignment
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MedicalRoom_ownershipAssignmentTooltip">
            <summary>
            Medical room's owner will be set to anyone who spawns in it as long as former ownership is set to nobody.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalScenarioSettingsLabel">
            <summary>
            Scenario settings:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_ProjectionSpawn">
            <summary>
            Spawn projection
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Projector_BlocksPerProjection">
            <summary>
            Number of blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Projector_BlocksPerProjection_Tooltip">
            <summary>
            The maximum number of blocks a projection can have when building instantly
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Projector_InstantBuilding">
            <summary>
            Instant building
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Projector_InstantBuilding_Tooltip">
            <summary>
            Enable the projector to build the blueprint instantly, even in survival
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Projector_NumberOfProjections">
            <summary>
            Number of projections
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Projector_NumberOfProjections_Tooltip">
            <summary>
            The maximum number of projections this projector can build instantly
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudScenarioInfoLivesLeft">
            <summary>
            Lives:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_DestructibleBlocks">
            <summary>
            Destructible blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_DestructibleBlocks_Tooltip">
            <summary>
            Toogles destructible blocks only for this grid. If destructible blocks are disabled in world settings, this is ignored. Only available in scenarios.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiScenarioCannotJoin">
            <summary>
            Scenario is already running, cannot join game.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiScenarioCannotJoinCaption">
            <summary>
            CANNOT JOIN
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScenarioSettings_CanJoinRunning">
            <summary>
            Players can join when game is already running
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableSunRotation">
            <summary>
            Enable sun rotation
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SunRotationPeriod">
            <summary>
            Day duration
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerCaptionAllOthersLost">
            <summary>
            All others lost
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScenarioSettings_CanJoinRunningShort">
            <summary>
            Players can join running game
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerCaptionTimeLimit">
            <summary>
            Scenario time limit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerTimeLimit">
            <summary>
            Limit (in minutes)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudScenarioInfoTimeLeft">
            <summary>
            Time left:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MyGuiScreenTriggerTimeLimit">
            <summary>
            Time limit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_FloraDensity_Extreme">
            <summary>
            Extreme
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_FloraDensity_None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnableJetpack">
            <summary>
            If this is turned off, characters won't be able to use jetpacks at all.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_SpawnWithTools">
            <summary>
            If this is turned off, characters won't spawn with any tools in their inventory.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableJetpack">
            <summary>
            Enable jetpack
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_SpawnWithTools">
            <summary>
            Spawn with tools
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesTooltip_Projector_GetOwnership">
            <summary>
            All blocks from the spawned ship will have the same ownership settings as this projector.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Projector_GetOwnership">
            <summary>
            Ownership from projector
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerBlockDestroyed_ColumnName">
            <summary>
            Block name
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerCaptionBlockDestroyed">
            <summary>
            Block destroyed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerPasteBlocks">
            <summary>
            Add blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MyGuiScreenTriggerBlockDestroyed">
            <summary>
            Block destroyed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerBlockDestroyedSingleMessage">
            <summary>
            Message after each block is destroyed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerDeleteBlocks">
            <summary>
            Delete
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerPasteBlocksTooltip">
            <summary>
            Adds blocks copied through button at the end of block terminal screen.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiScenarioEdit_CopyIds">
            <summary>
            Copy block IDs
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiScenarioEdit_CopyIdsTooltip">
            <summary>
            You can then paste them into "Block destroyed" trigger
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerNoSpawnTimeLimit">
            <summary>
            Time limit (sec):
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerCaptionNoSpawn">
            <summary>
            Spawn screen time limit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MyGuiScreenTriggerNoSpawn">
            <summary>
            No spawn place
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_2Planets">
            <summary>
            2 habitable planets near each other
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_Planet">
            <summary>
            World with one habitable planet 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_2Planets">
            <summary>
            2 planets
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_Planet">
            <summary>
            Habitable planet
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenMedicals_NoRespawnPlace">
            <summary>
            No respawn point is available!  Try the refresh button for any available Medical rooms. If there is no chance of accessing a medical room, the game will be over in {0:00}:{1:00}.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenCaptionWorldGeneratorSettings">
            <summary>
            World generator settings
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_MoonSizeMax">
            <summary>
            Maximum size of moons
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_MoonSizeMin">
            <summary>
            Minimum size of moons
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_PlanetSizeMax">
            <summary>
            Maximum size of planets
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_PlanetSizeMin">
            <summary>
            Minimum size of planets
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_WorldGenerator">
            <summary>
            World generator
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiScenarioDescription">
            <summary>
            Scenario description
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenMedicals_NoRespawnPlaceHeader">
            <summary>
            You must spawn in:  {0:00}:{1:00}
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScenarioProgressLoseConditions">
            <summary>
            Lose conditions
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScenarioProgressOthersLost">
            <summary>
            All others lost. Players pending:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScenarioProgressWinConditions">
            <summary>
            Win conditions
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerNextMission">
            <summary>
            Next mission
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerWwwLink">
            <summary>
            WWW link (opens in steam overlay)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScenarioProgressDestroyBlocks">
            <summary>
            Destroy blocks:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScenarioProgressLimitedLives">
            <summary>
            Limited lives: {0} left
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScenarioProgressNoSpawn">
            <summary>
            Spend more than {0} seconds in respawn screen.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScenarioProgressPositionLeft">
            <summary>
            Leave sphere [{0:0},{1:0},{2:0}], radius {3:0} meters
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScenarioProgressPositionReached">
            <summary>
            Get closer than {3:0} meters to [{0:0},{1:0},{2:0}]
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScenarioProgressSomeoneWon">
            <summary>
            Somebody else wins the scenario. Possible winners:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScenarioProgressTimeLimit">
            <summary>
            Scenario time limit {0} minutes
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.AddNpcToFaction">
            <summary>
            Add NPC
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.AddNpcToFactionHelp">
            <summary>
            Adds new NPC identity to this faction - faction will not cease to exist when last player leaves. Available in scenario edit mode only.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiLabelVideoOnStart">
            <summary>
            Video on start:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_Jump">
            <summary>
            Jump
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_DestinationGPS">
            <summary>
            Destination GPS coordinates:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_JumpDistance">
            <summary>
            Distance
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_JumpDrive">
            <summary>
            Jump Drive
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTooltip_SelectedJumpTarget">
            <summary>
            To execute the jump, assign the "Jump" command to the toolbar of a cockpit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationJumpWarmupTime">
            <summary>
            Ship will jump in {0} seconds.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GuiTriggerNextMissionTooltip">
            <summary>
            You can put a scenario name here (must already exist on local computer to be loaded)  or workshop ID number (user does *not* have to have it subscribed in that case). Workshop ID can be seen in the URL link of scenario in question on steam workshop web.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxTextScenarioNotFound">
            <summary>
            Next scenario was not found and cannot be loaded. Both {0} and {1} does not exist or contain invalid data. Please contact scenario author to fix it.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationNextScenarioWillLoad">
            <summary>
            Prepare for next scenario ...
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MedicalRoom_factionAssignmentLabel">
            <summary>
            Assign player to faction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MedicalRoom_factionAssignmentTooltip">
            <summary>
            Respawned player will be assigned to this medical room's faction.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationJumpAborted">
            <summary>
            Jump was aborted!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationJumpDriveNotFullyCharged">
            <summary>
            Jump drive is only {0} charged!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_StartInRespawnScreen">
            <summary>
            When played as scenario: player will start in respawn screen with new identity, all ownership will be lost.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_StartInRespawnScreen">
            <summary>
            Start in respawn screen
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WwwLinkNotAllowed">
            <summary>
            This link is not allowed and will not open. Allowed sites: steamcommunity, youtube, KSH forum.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_ScenarioBriefing">
            <summary>
            Show scenario briefing
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_Connectors">
            <summary>
            Connectors
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlMenuItemLabel_ShowBuildScreen">
            <summary>
            Show build screen
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationJoystickColorFormat">
            <summary>
            Press {0} to apply color, access control menu to change color
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnableVoxelDestruction">
            <summary>
            Enables voxel destrucion in world.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableVoxelDestruction">
            <summary>
            Enable voxel destruction
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenCaptionTutorials">
            <summary>
            Tutorials
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TrainingLevel">
            <summary>
            Training Level
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TrainingLevel_Advanced">
            <summary>
            Advanced
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TrainingLevel_Basic">
            <summary>
            Basic
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TrainingLevel_Intermediate">
            <summary>
            Intermediate
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxCaptionTutorial">
            <summary>
            Tutorial
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxCaptionVideoTutori">
            <summary>
            
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoState">
            <summary>
            State
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxCaptionVideo">
            <summary>
            Video
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxTextWatchVideo">
            <summary>
            Would you like to watch video before tutorial starts?
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoGravityArtificial">
            <summary>
            Artif. Gravity:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoGravityNatural">
            <summary>
            Planet Gravity:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoOxygen">
            <summary>
            Oxygen: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_BigSmall">
            <summary>
            One 120 km planet and one 50 km planet
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_BigSmall">
            <summary>
            Big and small planet
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationCannotJumpFromGravity">
            <summary>
            Jump drives cannot be used in natural gravity.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_ScaleTest">
            <summary>
            Scale test
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Cockpit_HorizonIndicator">
            <summary>
            Show horizon and altitude
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_DebugSphere1">
            <summary>
            Debug spheres 1
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationCannotJumpIntoGravity">
            <summary>
            Jump drives cannot be used to jump into natural gravity field.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_StarSystem">
            <summary>
            Empty Star System with 3 planets and their moons
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_StarSystem">
            <summary>
            Star System
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenGraphicsOptions_ShadowMapResolution_Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_DebugSphere2">
            <summary>
            Debug spheres 2 (no metal)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_DebugSphere3">
            <summary>
            Debug spheres 3 (fixed gloss)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_GridMass">
            <summary>
            Grid mass:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_TestStarSystem">
            <summary>
            Testing Star System to show Planet generation possibilities - all available planets and moons
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_TestStarSystem">
            <summary>
            Test Star System
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_StarSystemAligned">
            <summary>
            Planets and their moons aligned next to each other.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_StarSystemAligned">
            <summary>
            Star System Aligned
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Notification_NoControlNotMain">
            <summary>
            This is not main cockpit!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_EnabledLabel">
            <summary>
            Bots enabled
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_EnabledTooltip">
            <summary>
            Enables the integration in general
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_IPLabel">
            <summary>
            IP address
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_PortLabel">
            <summary>
            Port
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_ScreenCaption">
            <summary>
            GoodAI Bot Settings
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_WrongIpAlert">
            <summary>
            The specified IP address is not valid, please correct it. (Use 127.0.0.1 for local connection.)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_WrongPortCaption">
            <summary>
            Invalid Port Number
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_WrongPortMessage">
            <summary>
            The specified port is invalid number. Use a number between 0 and 65536.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_WrongIpCaption">
            <summary>
            Invalid IP Address
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenOptionsGame_BrainSimulatorIntegration">
            <summary>
            GoodAI bots
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_ExperimentalWarning">
            <summary>
            This feature is experimental and may lead to severely reduced game performance or unstability!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_ExperimentalFeatureCaption">
            <summary>
            Experimental Feature
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_ExperimentalFeatureConfirmation">
            <summary>
            I have read the warning and still want to turn the feature on!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_RequirementsNotMet">
            <summary>
            Automatic mode is not supported because this computer does not meet these requirements:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_ManualModeAllowed">
            <summary>
            You can still use the manual mode.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_BrainNotFoundCaption">
            <summary>
            Brain not found
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_BrainNotFoundMessage">
            <summary>
            The selected brain was not found.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_NotConnectedCaption">
            <summary>
            Brain Simulator not connected
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_NotConnectedMessage">
            <summary>
            Could not connect to the Brain Simulator. Please check if the settings are correct. The game will continue to try to connect.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_RunnerIssueCaption">
            <summary>
            Brain Simulator issue
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_RunnerRestarted">
            <summary>
            Unable to run brains automatically, the Brain Simulator has crashed and been restarted too many times. The bot will not function.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_RunnerNotFound">
            <summary>
            Unable to run brains automatically, the Brain Simulator executable has not been found. The bot will not function.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_ChooseBrainCaption">
            <summary>
            Add GoodAI Bot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_ChooseBrainLabel">
            <summary>
            Brain
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_ChooseBrainAddButton">
            <summary>
            Add
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BrainSimulatorIntegration_AISchoolButton">
            <summary>
            AI School
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_RewardPunishmentTool">
            <summary>
            GoodAI Bot Feedback
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenCubeBuilderAddGoodAiBot">
            <summary>
            Add GoodAI bot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HydrogenTank">
            <summary>
            Hydrogen Tank
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_HydrogenTankSmall">
            <summary>
            Hydrogen Tank Small
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_BlueprintClass_HydrogenBottles">
            <summary>
            Hydrogen Bottles
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_HydrogenBottle">
            <summary>
            Hydrogen Bottle
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_HydrogenBottles">
            <summary>
            Hydrogen Bottles
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_CollisionAvoidance">
            <summary>
            Collision avoidance
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnableDrones">
            <summary>
            Random NPC pirate ship will be generated from time to time. These ships are enemies and will try to attack you with their drones.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnableWolfs">
            <summary>
            Enable / disable spawning of Wolves
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableWolfs">
            <summary>
            Enable wolves
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnableSpiders">
            <summary>
            Enable / disable spawning of spiders
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableSpiders">
            <summary>
            Enable spiders
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableDrones">
            <summary>
            Enable drones
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_CargoShipsEnabled">
            <summary>
            Random NPC cargoships will fly through world from time to time.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_ClientCanSave">
            <summary>
            Client can save network game. If unchecked then only server can save.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_Enable3rdPersonCamera">
            <summary>
            Camera can be switched to 3rd person view, looking on your astronaut from behind.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnableEncounters">
            <summary>
            Random abandoned ships and stations can be encountered.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnableIngameScripts">
            <summary>
            If disabled, scripts will not be run in game. Scripts are used in programmable block and can also be used by some mods to create advanced logic and effects.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnableSunRotation">
            <summary>
            Sun moves around to create day and night.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Hydrogen">
            <summary>
            Hydrogen
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_RunCodeDefault">
            <summary>
            Run with default argument
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LargeAtmoThrust">
            <summary>
            Large Atmospheric Thruster
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_SmallAtmoThrust">
            <summary>
            Atmospheric Thrusters
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationShipEnergyCritical">
            <summary>
            Warning: Ship fuel is critically low. Life support failure imminent.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationShipEnergyCriticalNoDamage">
            <summary>
            Warning: Ship fuel is critically low.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationShipEnergyLow">
            <summary>
            Warning: Ship fuel is low. Life support systems may fail.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationShipEnergyLowNoDamage">
            <summary>
            Warning: Ship fuel is low.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_LargeHydrogenThrust">
            <summary>
            Large Hydrogen Thruster
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_SmallHydrogenThrust">
            <summary>
            Hydrogen Thrusters
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Motor_SuspensionSpeed">
            <summary>
            Wheels will not be propeled over this speed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Motor_SuspensionSpeed">
            <summary>
            Speed limit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Motor_InvertPropulsion">
            <summary>
            Invert Propulsion
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Motor_InvertPropulsion">
            <summary>
            Invert the propulsion direction.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_MotorAttached">
            <summary>
            Attached
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_MotorAttachingAny">
            <summary>
            Looking for any rotor to attach
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_MotorAttachingSpecific">
            <summary>
            Looking for specific rotor to attach
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_HeadAttachingAny">
            <summary>
            Looking for any Head to attach
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_HeadAttachingSpecific">
            <summary>
            Looking for specific Head to attach
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_MotorLocked">
            <summary>
            Safety locked
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertiesText_MotorDetached">
            <summary>
            Detached
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Superconductor">
            <summary>
            Superconductor Conduits
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyDescription_Connector_Strength">
            <summary>
            Connector strength when aligning ship (yellow color), smaller strength of two connectors is used
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Connector_Strength">
            <summary>
            Strength
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Discharge">
            <summary>
            Discharge
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipBatteryBlock_Discharge">
            <summary>
            Discharge the battery
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationGasBottleRefill">
            <summary>
            Gas refilled from bottles.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Block_AirtightSlideDoor">
            <summary>
            Sliding Door
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Faction_SpaceSpiders">
            <summary>
            Space spiders
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenGraphicsOptions_VoxelQuality">
            <summary>
            Voxel quality
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_AstronautBackpack">
            <summary>
            Backpack
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Animation_SpiderAttackBite">
            <summary>
            Bite attack
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Animation_SpiderAttackLegs">
            <summary>
            Leg attack
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Animation_SpiderAttackStinger">
            <summary>
            Stinger attack
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Animation_SpiderBurrow">
            <summary>
            Burrow
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Animation_SpiderDeburrow">
            <summary>
            Deburrow
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_DebugStart">
            <summary>
            Minimal world with platform and few fighters, loads quickly, good for testing and debugging
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_DebugStart">
            <summary>
            Debug fast start
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.String">
            <summary>
            
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_Caption">
            <summary>
            Space Master
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_DepowerTrash">
            <summary>
            Depower trash
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_Controlled">
            <summary>
            Controlled
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_Powered">
            <summary>
            Powered
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_Stationary">
            <summary>
            Stationary
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_Stations">
            <summary>
            Fixed (stations)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_WithMedBay">
            <summary>
            With medical room
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_WithProduction">
            <summary>
            With production
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.AdminMenuNotAvailable">
            <summary>
            Admin menu is available only when you're admin or when admin promotes you to Space Master
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_SortBy">
            <summary>
            Sort by
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_Depower">
            <summary>
            Depower
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BuilderModeOff">
            <summary>
            Builder mode off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BuilderModeOn">
            <summary>
            Builder mode on
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.SwitchBuilderMode">
            <summary>
            Switch cockpit builder mode
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationPlayerDemoted_SpaceMaster">
            <summary>
            You have been demoted to Space Master
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationPlayerPromoted_SpaceMaster">
            <summary>
            You have been promoted to Space Master
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_ReplicateEverythingServer_Tooltip">
            <summary>
            You are on server and allready have all objects
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_MedbayNotification">
            <summary>
            Removing ships or stations with Medical Room can be dangerous, because you can remove players' only respawn points, be careful
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Faction_SpacePirates">
            <summary>
            Space Pirates
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_EarthEasyStart">
            <summary>
            Start on a habitable planet on a station equipped with basic vehicles. The base is under an imminent threat of pirate attacks.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_MarsEasyStart">
            <summary>
            Start on a barren planet on a station equipped with basic vehicles. Youre under an imminent attack by pirates.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_EarthEasyStart">
            <summary>
            Easy Start Earth
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_MarsEasyStart">
            <summary>
            Easy Start Mars
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_AlienEasyStart">
            <summary>
            Start on a mysterious planet and face attacks from pirates and local fauna.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_AlienEasyStart">
            <summary>
            Easy Start Alien
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.QuickstartDX11NotAvailable">
            <summary>
            It seems that your system does not support DirectX 11, game will load scenario with no planets
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.QuickstartDX11PleaseRestartGame">
            <summary>
            Please restart the game to finish switching to DX11
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.QuickstartDX11SwitchQuestion">
            <summary>
            Please switch to DirectX 11 to play a planet scenario
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.QuickstartNoPlanets">
            <summary>
            Game will load scenario with no planets
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.QuickstartNoDx9SelectDifferent">
            <summary>
            It seems that your system does not support DirectX 11, please select scenario with no planets
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.QuickstartSelectDifferent">
            <summary>
            Please select scenario with no planets
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_Scenario_MoonEasyStart">
            <summary>
            Start on a moon with basic mining machinery but there is a threat of pirates occupying the moon's pole.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Faction_FirstColonyFaction">
            <summary>
            First Colony
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Scenario_MoonEasyStart">
            <summary>
            Easy Start Moon
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_PlanetaryLander">
            <summary>
            PlanetaryLander
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationStationRotationOff">
            <summary>
            Press {0} for station rotation mode
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_EliteAutomaticRifle">
            <summary>
            Elite Automatic Rifle
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_PreciseAutomaticRifle">
            <summary>
            Precise Automatic Rifle
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_RapidFireAutomaticRifle">
            <summary>
            Rapid-Fire Automatic Rifle
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_LargeTurretTargetNeutrals">
            <summary>
            Target neutrals
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorkshopTag_Planet">
            <summary>
            Planet
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TooltipScreenMods_Category_Planet">
            <summary>
            Planet
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BriefingTutorial01Movements">
            <summary>
            Learn movement essentials, how to keep your engineer alive with life support energy and oxygen and how to use each of the character tools, the welder, grinder and hand drill.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BriefingTutorial02Inventory">
            <summary>
            An introduction to player and cargo inventories, how to add/withdraw items and a basic initiation to control panels and terminals for controlling block functions.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BriefingTutorial03Energy">
            <summary>
            Learn how to recharge your suit energy by tackling a series of small challenges that    explain the behaviour of power within Space Engineers and the different ways you can provide it.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BriefingTutorial04Oxygen">
            <summary>
            This tutorial covers the various oxygen related blocks, oxygen farms, generators, vents, bottles, tanks and ice, including their control panel functions. The concept of creating an airtight room for pressurization is also addressed.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BriefingTutorial05OreRefining">
            <summary>
            The basics of infrastructure and industry are taught in this tutorial. You will learn how to mine ores, process them in a refinery and then commission new block components to be made in the assembler from the refined elements.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BriefingTutorial06Conveyors">
            <summary>
            Setting up a good conveyor system is very useful and can save you a lot of time. Learn how to move items through conveyors and the different ways to have separate systems interact or connect with each other.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BriefingTutorial07Jetpack">
            <summary>
            The jetpack tutorial displays the controls needed for flight which is followed by a series of assault course style sections to challenge your ability to fly quickly and accurately, you have a limited time from the moment you begin each section to reach the exit door. Watch out for hazards!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BriefingTutorial08YourFirstShip">
            <summary>
            The true test of any engineer is the ability to build a space-worthy ship from scratch, this tutorial will provide instruction on how to build a simple one-person transport vessel. Learn how to place blocks, weld them to completion and make a simple flight, you will also be taught essential rules of ship building that you can apply to create your own designs.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BriefingTutorial09ShipFlight">
            <summary>
            This tutorial offers instruction on how to fly a ship and use the three ship tools. You must use each ship in turn to navigate through several chambers that demonstrate how to grind, weld and drill as well as how to stock a weld ships cargo and how to dock with connectors.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BriefingTutorial10Grids">
            <summary>
            This tutorial aims to illuminate the nature of small, large and station grids, the rules that govern them and how you can join them with the merge block. There is also a brief section on floating objects.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_AngleGrinder2">
            <summary>
            Enhanced Grinder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_AngleGrinder3">
            <summary>
            Proficient Grinder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_AngleGrinder4">
            <summary>
            Elite Grinder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_HandDrill2">
            <summary>
            Enhanced Hand Drill
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_HandDrill3">
            <summary>
            Proficient Hand Drill
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_HandDrill4">
            <summary>
            Elite Hand Drill
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Welder2">
            <summary>
            Enhanced Welder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Welder3">
            <summary>
            Proficient Welder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Item_Welder4">
            <summary>
            Elite Welder
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_EmptyVoxelMap">
            <summary>
            Empty Voxel Map
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.LowMemSwitchToLowQuestion">
            <summary>
            Your game has ran out of memory last time. Do you want to switch to LOW preset and restart game to apply changes?
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TrainingLevel_Planetary">
            <summary>
            Planetary
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_WeldForce">
            <summary>
            Safety lock override
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_WeldSpeed">
            <summary>
            Safety lock speed
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Exception_NestedTooComplex">
            <summary>
            Script execution halted temporarily. The combined execution between a calling programmable block and this script became too complex. This script has not been terminated, but the calling script has.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_OpenHelmet">
            <summary>
            Open Helmet
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_CloseHelmet">
            <summary>
            Close Helmet
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_OpenHelmet">
            <summary>
            Open Helmet
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Description_CloseHelmet">
            <summary>
            Close Helmet
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GPS_Body_Location_Name">
            <summary>
            Body Location
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.GPS_Body_Location_Desc">
            <summary>
            Last known body location
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_AlienLander">
            <summary>
            Alien Planet Landing
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_MarsLander">
            <summary>
            Mars Planet Landing
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_AddPistonHead">
            <summary>
            Add Piston Head
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTooltip_AddPistonHead">
            <summary>
            Tries to add a piston head if no head is present.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_AddRotorHead">
            <summary>
            Add Rotor Head
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTooltip_AddRotorHead">
            <summary>
            Tries to add a Rotor head if no head is present.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_AddSmallRotorHead">
            <summary>
            Add Small Head
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTooltip_AddSmallRotorHead">
            <summary>
            Tries to add a Small Rotor head on Large Rotor if no head is present.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTitle_AddWheel">
            <summary>
            Add Wheel
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockActionTooltip_AddWheel">
            <summary>
            Tries to add a Wheel if no wheel is present.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Notification_PistonHeadNotPlaced">
            <summary>
            Piston head could not be placed.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Notification_PistonHeadAlreadyExists">
            <summary>
            Piston head already exists.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationLandingGearSwitchLocked">
            <summary>
            Landing gears Locked
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationLandingGearSwitchUnlocked">
            <summary>
            Landing gears Unlocked
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Silent">
            <summary>
            Silent
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipTimerBlock_Silent">
            <summary>
            Turn off timer beep sounds
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Exception_NoValidConstructor">
            <summary>
            This program has no valid constructor.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_DefaultScript_Constructor">
            <summary>
            The constructor, called only once every session and always before any other method is called. Use it to initialize your script.       The constructor is optional and can be removed if not needed.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_DefaultScript_Main">
            <summary>
            The main entry point of the script, invoked every time one of the programmable block's Run actions are invoked.  The method itself is required, but the argument above can be removed if not needed.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_DefaultScript_Save">
            <summary>
            Called when the program needs to save its state. Use this method to save your state to the Storage field or some other means.   This method is optional and can be removed if not needed.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHandbrakeOff">
            <summary>
            Handbrake off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHandbrakeOn">
            <summary>
            Handbrake on
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_RemoveFloating">
            <summary>
            Remove floating objects
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_RemoteBlockSpeedLimit">
            <summary>
            Speed limit
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationConnectorsDisabled">
            <summary>
            Connectors Disabled
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationConnectorsEnabled">
            <summary>
            Connectors Enabled
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationCannotJumpOutsideWorld">
            <summary>
            Jump drives cannot be used to jump outside world limits.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastStatus_IsPreviewGrid">
            <summary>
            Preview Grid
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ProgrammableBlock_Editor_CompilationOkWarningList">
            <summary>
            Warning list
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.CubeBuilder_CubeSizeModeChange">
            <summary>
            Press {0} again{1}to change block size.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockSize_NotAvailable">
            <summary>
            This block is for {0} only
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_ConvertButton_TT">
            <summary>
            Converts this station to a ship. Ships can move and rotate. WARNING: Make sure your station is not connected to asteroid when you convert to a ship. If it was, it might explode on you  when it changes to a ship.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_ConvertToStationButton">
            <summary>
            Convert to station
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_ConvertToStationButton_TT">
            <summary>
            Converts this ship to a station. Ship has to be stationary in order to convert it to a station (both angular and linear velocity have to be 0). Stations are more performance friendly. WARNING: Converting ship to a station is possible in planets gravity, but it will be converted to a ship in the moment of station being split and not in voxel. 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.RemoteControlCoord">
            <summary>
            Coords:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.RemoteControlUsedBy">
            <summary>
            Controlled by another player: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.RemoteControlWaypoint">
            <summary>
            Current waypoint:
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MessageBoxTextAreYouSureEnableOxygenPressurization">
            <summary>
            Are you sure you want to enable airtightness? This can have negative influence to performance.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnableOxygenPressurization">
            <summary>
            Allow pressurization of ships and stations.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.World_Settings_EnableOxygenPressurization">
            <summary>
            Enable airtightness
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ControlName_CubeDefaultMountpoint">
            <summary>
            Reset orientation
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationHint_CubeDefaultMountpoint">
            <summary>
            Press {0} to toggle auto orientation
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.MaxBackupSaves">
            <summary>
            Max backup saves
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsMaxBackupSaves">
            <summary>
            Configure the maximum number of saves that should be backed up. The backup folder is located on the respective save directory. When this is 0 then the backup feature is disabled and all backups are deleted upon save!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Chat_ChatHistory">
            <summary>
            -Global Chat History-
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_AdminTools">
            <summary>
            Admin Tools
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_Cleanup">
            <summary>
            Cleanup
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_Invulnerable">
            <summary>
            Invulnerable
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_InvulnerableToolTip">
            <summary>
            Makes you invulnerable to all damage, and invisible to turrets.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_ModeSelect">
            <summary>
            Mode Select
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_ShowPlayers">
            <summary>
            Show All Players
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_ShowPlayersToolTip">
            <summary>
            Shows all player names on HUD, even when broadcast is off.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_TeleportHere">
            <summary>
            Teleport Here
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_TeleportHereToolTip">
            <summary>
            Teleports your character to the spectator camera.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_UseTerminals">
            <summary>
            Can Use All Terminals
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_UseTerminalsToolTip">
            <summary>
            Allows you to use any terminal, regardless of ownership.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_EntityList">
            <summary>
            Entity List
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_SortOptions">
            <summary>
            Sort Options
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugAdminMenu_StopAll">
            <summary>
            Stop All Entities
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DetectedEntity_Asteroid">
            <summary>
            Asteroid
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DetectedEntity_CharacterHuman">
            <summary>
            Human
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DetectedEntity_LargeGrid">
            <summary>
            Large Grid
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DetectedEntity_Meteor">
            <summary>
            Meteor
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DetectedEntity_Planet">
            <summary>
            Planet
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DetectedEntity_SmallGrid">
            <summary>
            Small Grid
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DetectedEntity_Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationShipOverLimits">
            <summary>
            Cannot place. Ship would exceed regulations.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_MaxBlocksPerPlayer">
            <summary>
            Max blocks per player
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_MaxGridSize">
            <summary>
            Max ship size
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsMaxBlocksPerPlayer">
            <summary>
            Maximum number of blocks each player can build. Destroyed blocks are refunded
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettingsMaxGridSize">
            <summary>
            Maximum size (in blocks) of ships and stations
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_Assign">
            <summary>
            Assign
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_BlocksLower">
            <summary>
            blocks
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_Overview">
            <summary>
            Owned blocks overview
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalTab_Info_YouBuilt">
            <summary>
            You built
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_EnableRemoteBlockRemoval">
            <summary>
            Enable players to remotely remove owned blocks to free up their limit.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_EnableRemoteBlockRemoval">
            <summary>
            Remote block removal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipWorldSettings_StationVoxelSupport">
            <summary>
            By enabling this option grids will no longer turn dynamic when disconnected from static grids
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_StationVoxelSupport">
            <summary>
            Unsupported Stations
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_AssignedCamera">
            <summary>
            Assigned camera
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_ShowInInventory">
            <summary>
            Show block in Inventory Screen
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_ShowInInventoryToolTip">
            <summary>
            Show block in inventory screen. If you access the block directly it will be visible regardless of this setting.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationPlayerDemoted_None">
            <summary>
            You have been demoted to Player
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationPlayerDemoted_Scripter">
            <summary>
            You have been demoted to Scripter
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationPlayerPromoted_Admin">
            <summary>
            You have been promoted to Administrator
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationPlayerPromoted_Scripter">
            <summary>
            You have been promoted to Scripter
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Recompile">
            <summary>
            Recompile
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Recompile_Tooltip">
            <summary>
            Recompiles the current script.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationPlayerDemoted_Moderator">
            <summary>
            You have heen demoted to Moderator
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.NotificationPlayerPromoted_Moderator">
            <summary>
            You have been promoted to Moderator
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_CurrentTarget">
            <summary>
            Current target: 
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ScreenDebugSpawnMenu_SpawnTargeted">
            <summary>
            Spawn into targeted container
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.HudInfoMagnetic">
            <summary>
            Magnetic
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_Font">
            <summary>
            Font
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_RemoteControl_Button">
            <summary>
            Remote Access
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_SensorDetectSubgrids">
            <summary>
            Detect subgrids
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastScreen_TakeControlButton">
            <summary>
            Take Control
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastScreen_UnavailableControlButton">
            <summary>
            Unavailable
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastScreen_NoOwnership">
            <summary>
            Wrong ownership setting.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastScreen_Ownership">
            <summary>
            Ownership correct
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastScreen_TakeControlButton_NoMainRemoteControl">
            <summary>
            Multiple Remote Controllers on grid. Set one as main!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastScreen_TakeControlButton_NoRemoteToolTip">
            <summary>
            No Remote Controller on grid.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastScreen_TakeControlButton_RemoteToolTip">
            <summary>
            Remote Control ready
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastScreen_TakeControlButton_ToolTip">
            <summary>
            Take control of target grid.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastScreen_TerminalButton_NoStableConnectionToolTip">
            <summary>
            Cannot establish connection to grid.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastScreen_TerminalButton_StableConnectionToolTip">
            <summary>
            Connection stable
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastScreen_TerminalButton_ToolTip">
            <summary>
            Open terminal of target grid.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.TerminalControlPanel_Cockpit_MainRemoteControl">
            <summary>
            Main Remote Control
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BroadcastScreen_TerminalButton_PlayerBroadcastOffToolTip">
            <summary>
            Players antenna off
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DetectedEntity_CharacterOther">
            <summary>
            Animal
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.ToolTipAudioOptionsEnableReverb">
            <summary>
            Enables Echo. Note that if your audio rate is larger than 48 kHz, Echo will not work.You can change the rate from your system's Speaker properties and restart game
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.DisplayName_Dead_Astronaut">
            <summary>
            Dead Astronaut
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_CustomData">
            <summary>
            Custom Data
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Terminal_CustomDataTooltip">
            <summary>
            Shows and editor for custom data to be used by scripts and mods
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Notification_BlueprintScriptRemoved">
            <summary>
            Some scripts were removed from this blueprint because you do not have Scripter permissions
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.WorldSettings_AsteroidAmountProceduralNone">
            <summary>
            Infinite: None
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.BlockPropertyTitle_AssignedPB">
            <summary>
            Assigned Programmable Block
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Antenna_IgnoreAlliedBroadcast">
            <summary>
            Ignore Allied Broadcast
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Antenna_IgnoreAlliedBroadcastTooltip">
            <summary>
            Ignores broadcasts sent by friendly antenna that do not belong to you
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Antenna_IgnoreOtherBroadcast">
            <summary>
            Ignore Other Broadcast
            </summary>
        </member>
        <member name="F:Sandbox.Game.Localization.MySpaceTexts.Antenna_IgnoreOtherBroadcastTooltip">
            <summary>
            Ignores broadcasts sent by neutral and enemy antenna
            </summary>
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MySyncScenario.PrepareScenarioFromLobby(System.Int64)">
            <summary>
            Send message to all clients to prepare Scenario (Start Scenario has been pressed in lobby screen, clients will download world).
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGridGroups.CreateLink(Sandbox.Game.Entities.GridLinkTypeEnum,System.Int64,Sandbox.Game.Entities.MyCubeGrid,Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Creates link between parent and child.
            Parent is owner of constraint.
            LinkId must be unique only for parent, for grid it can be packed position of block which created constraint.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGridGroups.BreakLink(Sandbox.Game.Entities.GridLinkTypeEnum,System.Int64,Sandbox.Game.Entities.MyCubeGrid,Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Breaks link between parent and child, you can set child to null to find it by linkId.
            Returns true when link was removed, returns false when link was not found.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.IMyMissileGunObject.ShootMissile(VRageMath.Vector3)">
            <summary>
            Should create a missile with the given parameters, make a sound, create particle effects, etc.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Multiplayer.MyFactionCollection.m_factions">
            <summary>
            All factions in a game.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Multiplayer.MyFactionCollection.m_factionsByTag">
            <summary>
            Ditto, indexed by their faction tag
            </summary>
        </member>
        <member name="F:Sandbox.Game.Multiplayer.MyFactionCollection.m_factionRequests">
            <summary>
            
            </summary>
        </member>
        <member name="F:Sandbox.Game.Multiplayer.MyFactionCollection.m_relationsBetweenFactions">
            <summary>
            Relations between factions.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Multiplayer.MyFactionCollection.m_playerFaction">
            <summary>
            Player in faction dictionary.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MyFactionCollection.Contains(System.Int64)">
            <summary>
            Checks if faction exists.
            </summary>
            <param name="factionId">Faction id.</param>
            <returns>If true, faction exists.</returns>
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MyFactionCollection.CreateDefaultFactions">
            <summary>
            Creates adds default factions to the faction collection.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MyFactionCollection.GetRelationBetweenFactions(System.Int64,System.Int64)">
            <summary>
            Use this for quick check of relation between two factions.
            </summary>
            <param name="factionId1">First faction id</param>
            <param name="factionId2">Second faction id</param>
            <returns>Enum that describes the relation between given factions</returns>
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MyFactionCollection.CreateFactionServer(System.Int64,System.String,System.String,System.String,System.String,Sandbox.Definitions.MyFactionDefinition)">
            <summary>
            Creates faction on server and sends message to client to create one there. If faction definition is provided than faction will be created from definition and
            faction name, description and private info will be taken from definition.
            </summary>
            <param name="founderId">Founder id</param>
            <param name="factionTag">Faction tag</param>
            <param name="factionName">Faction name</param>
            <param name="description">Faction Description</param>
            <param name="privateInfo">Private info</param>
            <param name="factionDef">Optional: faction definition.</param>
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MyFactionCollection.CreateFactionInternal(System.Int64,System.Int64,Sandbox.Definitions.MyFactionDefinition)">
            <summary>
            Creates faction from definition.
            </summary>
            <param name="founderId">Identity id of the owner.</param>
            <param name="factionId">Faction id to be used for the faction.</param>
            <param name="factionDef">Faction definition.</param>
            <returns>If true than faction was created.</returns>
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MyFactionCollection.DetermineRequestFromRelation(VRage.Game.MyRelationsBetweenFactions)">
            <summary>
            Determines what kind of faction change request should be used depending on default faction
            relation to other ones.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MyFactionCollection.SetDefaultFactionStateInternal(System.Int64,VRage.Game.ModAPI.IMyFaction,Sandbox.Definitions.MyFactionDefinition)">
            <summary>
            Sets default faction relation on provided faction.
            </summary>
            <param name="factionId">Faction on which set the default faction relations.</param>
            <param name="defaultFaction">Default faction which contains definition of the relation.</param>
            <param name="defaultFactionDef">Default faction definition.</param>
        </member>
        <member name="F:Sandbox.Game.Multiplayer.MyFactionCollection.AddFactionMsg.FactionId">
            <summary>
            Do not use this for request, this value is always generated by server!
            </summary>
        </member>
        <member name="T:Sandbox.Game.MyGridExplosion">
            <summary>
            This class is responsible for calculating damage from explosions
            It works by recursively raycasting from the point it needs to 
            calculate to the explosion center. It does two types of raycast, 
            3D DDA raycasts for traversing grids (ships, stations) and Havok 
            raycasts for traversing space between grids. For each block, it builds
            a stack of blocks that are between it and the explosion center and then
            calculates the damage for all blocks in this stack. 
            It early exits if it encounters a block that was already calculated.
            </summary>
        </member>
        <member name="M:Sandbox.Game.MyGridExplosion.ComputeDamagedBlocks">
            <summary>
            Computes damage for all blocks assigned in constructor
            </summary>
        </member>
        <member name="M:Sandbox.Game.MyGridExplosion.ComputeDamageForEntity(VRageMath.Vector3D)">
            <summary>
            Used to calculate damage for entities that are not grids
            Can be called even if ComputeDamagedBlocks was not called before, but it doesn't do any caching
            </summary>
            <param name="worldPosition">World position from where the cast starts (usually the entity position)</param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.MyGridExplosion.CastDDA(Sandbox.Game.Entities.Cube.MySlimBlock)">
            <summary>
            Performs a grid raycast (is prone to aliasing effects).
            It can be recursive (it calls CastPhysicsRay when exiting the grid or when it hits an empty cell).
            </summary>
            <param name="cubeBlock">Starting block</param>
            <returns>Returns starting damage for current stack</returns>
        </member>
        <member name="M:Sandbox.Game.MyGridExplosion.CastPhysicsRay(VRageMath.Vector3D)">
            <summary>
            Performes a physics raycast
            It can be recursive (it calls CastDDA when it hits a grid).
            </summary>
            <param name="fromWorldPos"></param>
            <returns>Returns starting damage for current stack</returns>
        </member>
        <member name="P:Sandbox.Game.Screens.Helpers.MyGuiControlOnOffSwitch.Value">
            <summary>
            On/Off value of this switch. true = On; false = Off
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyGuiScreenHudSpace.GetRealPositionOnCenterScreen(VRageMath.Vector2)">
            <summary>
            Return position on middle screen based on real desired position on gamescreen.
            "Middle" make sense only for tripple monitors. For every else is middle screen all screen.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Sandbox.Game.Gui.MyGuiScreenScenario.LoadWorkshopResult.SubscribedScenarios">
            <summary>
            List of scenarios user is subscribed to, or null if there was an error
            during operation.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyGuiScreenToolbarConfigBase.UpdateGridControl">
            <summary>
            Updates Grid control with current category settings. 
            </summary>
        </member>
        <member name="M:Sandbox.Game.Screens.Helpers.MyToolbarItemTerminalGroup.FindBaseClass(System.Type[],System.Type)">
            <summary>
            Searching for common base class. Used to return more specific group actions than only basic actions of functional blocks (if the blocks are of common origin)
            </summary>
            <param name="types"></param>
            <param name="baseKnownCommonType"></param>
            <returns></returns>
        </member>
        <member name="F:Sandbox.Game.Gui.MyGuiScreenMods.LoadListResult.SubscribedMods">
            <summary>
            List of mods user is subscribed to, or null if there was an error
            during operation.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.ITerminalControlSync.Serialize(VRage.Library.Collections.BitStream,Sandbox.Game.Entities.Cube.MyTerminalBlock)">
            <summary>
            (De)serializes block data.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.ITerminalControl.GetGuiControl">
            <summary>
            Returns control to show in terminal.
            When control does not exists yet, it creates it
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.ITerminalControl.UpdateVisual">
            <summary>
            Updates gui controls
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.ITerminalControl.IsVisible(Sandbox.Game.Entities.Cube.MyTerminalBlock)">
            <summary>
            Returns true when control is visible for given block
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.ITerminalControl.SupportsMultipleBlocks">
            <summary>
            If control supports multiple blocks
            The only control which does not is Name editor control
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.ITerminalControl.TargetBlocks">
            <summary>
            Sets blocks which are controlled now
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.ITerminalControl.Actions">
            <summary>
            Returns terminal actions
            </summary>
        </member>
        <member name="T:Sandbox.Game.Gui.MyTerminalControl`1">
            <summary>
            Terminal control for specified block type.
            E.g. Torque slider for stator
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyTerminalControl`1.CreateGui">
            <summary>
            Called when app needs GUI (not on DS)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyTerminalControl`1.OnUpdateVisual">
            <summary>
            Called when GUI needs update
            </summary>
        </member>
        <member name="F:Sandbox.Game.Screens.Terminal.Controls.MyTerminalValueControl`2.Serializer">
            <summary>
            Serializer which (de)serializes the value.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Screens.Terminal.Controls.MyTerminalValueControl`2.Getter">
            <summary>
            Getter which gets value from block.
            Can be set by anyone, but used only by MyTerminalValueControl.
            If you need to get the value, use GetValue method.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Screens.Terminal.Controls.MyTerminalValueControl`2.Setter">
            <summary>
            Setter which sets value to block.
            Can be set by anyone, but used only by MyTerminalValueControl.
            If you need to set the value, use SetValue method, which does handles notification.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyTerminalControlCombobox`1.SetSerializerDefault">
            <summary>
            Sets default serializer which serializes always 8B
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyTerminalControlCombobox`1.SetSerializerBit">
            <summary>
            Serializes values as 0 or 1
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyTerminalControlCombobox`1.SetSerializerRange(System.Int32,System.Int32)">
            <summary>
            Sets optimal serizalizer for range of two values (with uniform probability)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyTerminalControlCombobox`1.SetSerializerVariant(System.Boolean)">
            <summary>
            Sets variant length serializer, smaller number takes less bytes than larger.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.MyTerminalControlCombobox`1.Sandbox#ModAPI#Interfaces#Terminal#IMyTerminalControlTitleTooltip#Title">
            <summary>
            Implements IMyTerminalControlCombobox for Mods
            </summary>
        </member>
        <member name="P:Sandbox.Game.Screens.Terminal.Controls.MyTerminalControlLabel`1.Sandbox#ModAPI#Interfaces#Terminal#IMyTerminalControlLabel#Label">
            <summary>
            Implement IMyTerminalControlLabel for Mods
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyTerminalControls.CreateControl``2(System.String)">
            <summary>
            This will create a control to be added to the terminal screen.  This only really applies to ModAPI, as MyTerminalControlFactory class isn't whitelist
            </summary>
            <typeparam name="TControl">Interface of control type</typeparam>
            <param name="blockType">Block type to add this control to</param>
            <param name="id">Identifier of this control</param>
            <returns>Interface of created control</returns>
        </member>
        <member name="T:Sandbox.Game.SessionComponents.MyHitReportingComponent">
            <summary>
            Handles client-side reactions to hits (change in crosshair color, hit sounds, etc...).
            Also handles sending the hit messages on the server so that clients can react on them.
            
            CH: TODO: The logic of how the game will react to the hits should be defined somewhere and not hardcoded
            But please think about this before doint it and don't put it into MyPerGameSettings, as it's already full of terrible stuff!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Components.MyRopeComponent.m_ropeAttacher">
            <summary>
            Default rope attaching mechanism in creative mode.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Components.MyRopeComponent.GetRopesForGrids(System.Collections.Generic.HashSet{Sandbox.Game.Entities.MyCubeGrid},System.Collections.Generic.HashSet{Sandbox.Game.Entities.MyRope})">
            <summary>
            Writes rope entity IDs (to outRopes) associated with given grids.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Components.MyRopeComponent.ReleaseData.Orientation">
            <summary>
            Given as 2 angles of rotation around X and Y axes.
            </summary>
        </member>
        <member name="P:Sandbox.Game.SessionComponents.MyRespawnComponentBase.ShowPermaWarning">
            <summary>
            Indicates if permadeath ownership warning should be shown.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.MyTerminalControlListbox`1.Sandbox#ModAPI#Interfaces#Terminal#IMyTerminalControlTitleTooltip#Title">
            <summary>
            Implements IMyTerminalControlListBox for Mods
            </summary>
        </member>
        <member name="M:Sandbox.Game.WorldEnvironment.MyProceduralLogicalSector.RaiseItemEvent``1(System.Int32,System.Object,System.Boolean)">
            <summary>
            Raise event from a storage module.
            
            Can be either a client event to server (fromClient = true)
            or a broadcast of a server event to all clients with this logical sector (fromClient = false). 
            </summary>
            <typeparam name="TModule">Type of the storage module to notify</typeparam>
            <param name="logicalItem">Logical item Id</param>
            <param name="eventData">Data to send along with the event.</param>
            <param name="fromClient">Weather this event comes from client to server or server to all clients.</param>
        </member>
        <member name="M:Sandbox.Game.WorldEnvironment.MyProceduralLogicalSector.HandleItemEvent(System.Int32,VRage.ObjectBuilders.SerializableDefinitionId,System.Object,System.Boolean)">
            Handler for multiplayer events.
            
            Depending on the provided module definition the event may be coming from server to clients or from a clientto the server.
        </member>
        <member name="F:Sandbox.Game.World.Generator.MyCompositeShapes.AsteroidGenerators">
            <summary>
            Table of methods that take care of creation of asteroids and possibly other composite shapes.
            Backwards compatibility! Do not change indices of these entries!
            </summary>
        </member>
        <member name="M:Sandbox.Game.SessionComponents.MySessionComponentVoxelHand.TrySetBrush(System.String)">
            <summary>
            Tries to set the brush on voxel hand.
            </summary>
            <param name="brushSubtypeName">Brush subtype name.</param>
            <returns>False if brush with given name does not exist.</returns>
        </member>
        <member name="T:Sandbox.Game.World.MySession">
            <summary>
            Base class for all session types (single, coop, mmo, sandbox)
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MySession.IsUserAdmin(System.UInt64)">
            <summary>
            Checks if a given player is an admin.
            </summary>
            <param name="steamId"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.World.MySession.OnServerPerformanceWarning(System.String)">
            <summary>
            Show performance warning from server
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MySession.PerformanceWarning(VRage.MySimpleProfiler.MySimpleProfilingBlock)">
            <summary>
            Send performance warnings to clients
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MySession.#ctor(Sandbox.Game.Multiplayer.MySyncLayer,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sandbox.Game.World.MySession"/> class.
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MySession.StartServer(Sandbox.Engine.Multiplayer.MyMultiplayerBase)">
            <summary>
            Starts multiplayer server with current world
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MySession.Update(VRage.Library.Utils.MyTimeSpan)">
            <summary>
            Updates resource.
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MySession.Start(System.String,System.String,System.String,VRage.Game.MyObjectBuilder_SessionSettings,System.Collections.Generic.List{VRage.Game.MyObjectBuilder_Checkpoint.ModItem},Sandbox.Game.World.MyWorldGenerator.Args)">
            <summary>
            Initializes a new single player session and start new game with parameters
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MySession.StartServerRequest">
            <summary>
            Creates new Steam lobby
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MySession.FixMissingCharacter">
            <summary>
            Make sure there's character, will be removed when dead/respawn done
            In creative mode, there will be respawn too
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MySession.InitializeFactions">
            <summary>
            Initializes faction collection.
            </summary>
        </member>
        <member name="E:Sandbox.Game.World.MySession.OnLoading">
            <summary>
            Called after session is created, but before it's loaded.
            MySession.Static.Statis is valid when raising OnLoading.
            </summary>
        </member>
        <member name="P:Sandbox.Game.World.MySession.HasCreativeRights">
            <summary>
            Checks if the local player has access to creative tools.
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MySessionCompatHelper.ConvertBuilderToEntityBase(VRage.ObjectBuilders.MyObjectBuilder_EntityBase,System.String)">
            <summary>
            Converts the given builder to be of type EntityBase only with components. Prefix is added to sub type name for the created EntityBase and also for component builders.
            Should be used when an entity was transformed to components and do not need specific entity implementation at all. 
            </summary>
        </member>
        <member name="T:Sandbox.Game.World.MySessionLoader">
            <summary>
            This class is a Loading helper toolbox that holds syntax
            that was split all across the GUI screens.
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MySessionLoader.StartNewSession(System.String,VRage.Game.MyObjectBuilder_SessionSettings,System.Collections.Generic.List{VRage.Game.MyObjectBuilder_Checkpoint.ModItem},Sandbox.Definitions.MyScenarioDefinition,System.Int32,System.String,System.String)">
            <summary>
            Starts new session and unloads outdated if theres any.
            </summary>
            <param name="sessionName">Created session name.</param>
            <param name="settings">Session settings OB.</param>
            <param name="mods">Mod selection.</param>
            <param name="scenarioDefinition">World generator argument.</param>
            <param name="asteroidAmount">Hostility settings.</param>
            <param name="description">Session description.</param>
            <param name="passwd">Session password.</param>
        </member>
        <member name="M:Sandbox.Game.World.MyWorldGeneratorStartingStateBase.CreateAndSetPlayerFaction">
            <summary>
            Setups player faction accoring to Factions.sbc and Scenario.sbx settings. If faction is not created yet. It will be created 
            for the player with Faction.sbc settings. Faction have to accept humans.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.MyDetectedEntityInfoHelper">
            <summary>
            Provides an easy method to create a MyDetectedEntityInfo struct from the detected entity and sensor owner ID
            </summary>
        </member>
        <member name="F:Sandbox.Game.Weapons.MyLargeTurretBase.m_lastNetMoveState">
            <summary>
            Used to serialize user input.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Weapons.MyLargeTurretBase.BeginShoot(Sandbox.Game.Entities.MyShootActionEnum)">
            <summary>
            This will be called locally to start shooting with the given action
            </summary>
        </member>
        <member name="M:Sandbox.Game.Weapons.MyLargeTurretBase.EndShoot(Sandbox.Game.Entities.MyShootActionEnum)">
            <summary>
            This will be called locally to start shooting with the given action
            </summary>
        </member>
        <member name="M:Sandbox.Game.Weapons.MyLargeTurretBase.OnBeginShoot(Sandbox.Game.Entities.MyShootActionEnum)">
            <summary>
            This will be called back from the sync object both on local and remote clients
            </summary>
            
        </member>
        <member name="M:Sandbox.Game.Weapons.MyLargeTurretBase.OnEndShoot(Sandbox.Game.Entities.MyShootActionEnum)">
            <summary>
            This will be called back from the sync object both on local and remote clients
            </summary>
            
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyShape.GetVolume(VRageMath.Vector3D@)">
            <summary>
            Gets volume of intersection of shape and voxel
            </summary>
            <param name="voxelPosition">Left bottom point of voxel</param>
            <returns>Normalized volume of intersection</returns>
        </member>
        <member name="M:Sandbox.Engine.Voxels.MyShape.SignedDistanceToDensity(System.Single)">
            <returns>Recomputed density value from signed distance</returns>
        </member>
        <member name="T:Sandbox.MyCommonProgramStartup">
            <summary>
            Serves as the main wrapper class that will be used for the program initialization.
            The individual games should use the services of this class and should not need to do things "on their own"
            </summary>
        </member>
        <member name="M:Sandbox.MyCommonProgramStartup.GetAppDataPath">
            <summary>
            Determines the application data path to use for configuration, save games and other dynamic data.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="F:Sandbox.MyMessageBoxCrashForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sandbox.MyMessageBoxCrashForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sandbox.MyMessageBoxCrashForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.ITerminalAction.GetParameterDefinitions">
            <summary>
            This collection contains the names, types and default values of any available parameter for this action.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.ITerminalAction.RequestParameterCollection(System.Collections.Generic.IList{Sandbox.ModAPI.Ingame.TerminalActionParameter},System.Action{System.Boolean})">
            <summary>
            If available, this method will show any dialogs required to retrieve user arguments
            for the given action.
            </summary>
            <param name="callback">The callback to run when any dialog is complete</param>
            <param name="parameters">The parameters collection to be filled. This list will be cleared of any existing items.</param>
        </member>
        <member name="M:Sandbox.Game.Gui.ITerminalAction.Apply(Sandbox.Game.Entities.Cube.MyTerminalBlock,VRage.Collections.ListReader{Sandbox.ModAPI.Ingame.TerminalActionParameter})">
            <summary>
            Applies the action with the given parameter list.
            </summary>
            <param name="block"></param>
            <param name="parameters"></param>
        </member>
        <member name="F:Sandbox.Game.Gui.MyTerminalAction`1.DoUserParameterRequest">
            <summary>
            Replace this callback to allow your block to display a custom dialog to fill action parameters.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.MyTerminalAction`1.Sandbox#ModAPI#Interfaces#Terminal#IMyTerminalAction#Enabled">
            <summary>
            Implementation of IMyTerminalAction for Mods
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.MyTerminalControlCheckbox`1.Sandbox#ModAPI#Interfaces#Terminal#IMyTerminalControlCheckbox#OnText">
            <summary>
            Implement IMyTerminalControlCheckbox for mods
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.MyTerminalControlOnOffSwitch`1.Sandbox#ModAPI#Interfaces#Terminal#IMyTerminalControlTitleTooltip#Title">
            <summary>
             Implements IMyTerminalControlOnOffSwitch for Mods
            </summary>
        </member>
        <member name="T:Sandbox.Graphics.GUI.MyControlHelpers">
            <summary>
            This is here because we have stupid labels
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.MyTerminalControlButton`1.Sandbox#ModAPI#Interfaces#Terminal#IMyTerminalControlButton#Action">
            <summary>
            Implement IMyTerminalControlButton for Mods
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.MyTerminalControlSlider`1.Sandbox#ModAPI#Interfaces#Terminal#IMyTerminalControlTitleTooltip#Title">
            <summary>
            Implementation of IMyTerminalControlSlider for Mods
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.MyTerminalControlTextbox`1.Getter">
            <summary>
            Returns borrowed string builder instance which won't be stored or overwritten
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.MyTerminalControlTextbox`1.Sandbox#ModAPI#Interfaces#Terminal#IMyTerminalControlTitleTooltip#Title">
            <summary>
            Implements IMyTerminalControlTextbox for ModAPI
            </summary>
        </member>
        <member name="P:Sandbox.Game.Gui.MyTerminalControlTextbox`1.Sandbox#ModAPI#Interfaces#Terminal#IMyTerminalValueControl{System#Text#StringBuilder}#Getter">
            <summary>
            Implements IMyTerminalValueControl for Mods
            </summary>
        </member>
        <member name="P:Sandbox.Game.Weapons.MyDeviceBase.InventoryItemId">
            <summary>
            Reference to the inventory item that this device originated from.
            Can be used to update the inventory item (when ammo changes etc...)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Weapons.MySmallMissileLauncher.ShowReloadNotification(System.Int32)">
            <summary>
            Will show the reload notification for the specified duration.
            </summary>
            <param name="duration">The time in MS it should show reloading.</param>
        </member>
        <member name="P:Sandbox.Game.World.MyEntityController.ControlledEntity">
            <summary>
            The entity that this controller controls
            </summary>
        </member>
        <member name="E:Sandbox.Game.World.MyEntityController.ControlledEntityChanged">
            <summary>
            event params: oldEntity, newEntity
            </summary>
        </member>
        <member name="F:Sandbox.Game.World.MyPlayer.Grids">
            #warning: This should probably be on the identity. Check whether it's correct
            <summary>
            Grids in which this player has at least one block
            </summary>
        </member>
        <member name="P:Sandbox.Game.World.MyPlayer.Controller">
            <summary>
            This is created with the creation of the player, so it should never be null
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MyIdentity.PerformFirstSpawn">
            <summary>
            This is to prevent spawning after permadeath - in such cases, the player needs new identity!
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MyIdentity.SetDisplayName(System.String)">
            <summary>
            This should only be called during initialization
            It is used to assume the identity of someone else,
            but keep your name
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Sandbox.Game.World.MyIdentity.IncreaseBlocksBuilt(System.String,Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Increase the amount of blocks (in general and of particular type) this player has built
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MyIdentity.DecreaseBlocksBuilt(System.String,Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Decrease the amount of blocks (in general and of particular type) this player has built
            </summary>
        </member>
        <member name="F:Sandbox.Game.Weapons.MyEngineerToolBase.DEFAULT_REACH_DISTANCE">
            <summary>
            Default reach distance of a tool. It is modified by "distance modifier" defined in definition of a tool.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Weapons.MyEngineerToolBase.GetTargetBlock">
            <summary>
            Action distance is taken into account
            </summary>
        </member>
        <member name="T:Sandbox.Game.World.MyPrefabManager.CreateGridsData">
            <summary>
            Holds data for asynchrnonous initialization of prefabs
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.MyCubeGrid">
            <summary>
            Grid - small ship, large ship, station
            Cubes (armor, walls...) are merge and rendered by this entity
            Blocks (turret, thrusts...) are rendered as child entities
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.CheckConnectivity(Sandbox.Game.Entities.Cube.IMyGridConnectivityTest,Sandbox.Definitions.MyCubeBlockDefinition,Sandbox.Definitions.MyCubeBlockDefinition.MountPoint[],VRageMath.Quaternion@,VRageMath.Vector3I@)">
            <summary>
            Performs check whether cube block given by its definition, rotation and position is connected to some other
            block in a given grid.
            </summary>
            <param name="grid">Grid in which the check is performed.</param>
            <param name="rotation">Rotation of the cube block within grid.</param>
            <param name="position">Position of the cube block within grid.</param>
            <returns>True when there is a connectable neighbor connected by a mount point, otherwise false.</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.CheckConnectivitySmallBlockToLargeGrid(Sandbox.Game.Entities.MyCubeGrid,Sandbox.Definitions.MyCubeBlockDefinition,VRageMath.Quaternion@,VRageMath.Vector3I@)">
            <summary>
            Performs check whether small cube block given by its definition, rotation  can be connected to large grid. 
            Function checks whether a mount point on placed block exists in opposite direction than addNomal.
            </summary>
            <param name="grid">Grid in which the check is performed.</param>
            <param name="def">Definition of small cube block for checking.</param>
            <param name="rotation">Rotation of the small cube block.</param>
            <param name="addNormal">Grid hit normal.</param>
            <returns>True when small block can be connected, otherwise false.</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.CheckMountPointsForSide(Sandbox.Definitions.MyCubeBlockDefinition,Sandbox.Definitions.MyCubeBlockDefinition.MountPoint[],VRageMath.MyBlockOrientation@,VRageMath.Vector3I@,VRageMath.Vector3I@,Sandbox.Definitions.MyCubeBlockDefinition,Sandbox.Definitions.MyCubeBlockDefinition.MountPoint[],VRageMath.MyBlockOrientation@,VRageMath.Vector3I@)">
            <summary>
            Checkes whether blocks A and B have matching mount point on one of their sides. Each block is given by its
            definition, rotation and position in grid. Position has to be relative to same center. Also, normal relative to block A specifies
            wall which is used for checking.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.CheckMountPointsForSide(System.Collections.Generic.List{Sandbox.Definitions.MyCubeBlockDefinition.MountPoint},VRageMath.MyBlockOrientation@,VRageMath.Vector3I@,VRage.Game.MyDefinitionId,VRageMath.Vector3I@,System.Collections.Generic.List{Sandbox.Definitions.MyCubeBlockDefinition.MountPoint},VRageMath.MyBlockOrientation@,VRageMath.Vector3I@,VRage.Game.MyDefinitionId)">
            <summary>
            Checkes whether blocks A and B have matching mount point on one of their sides. Each block is given by its
            definition, rotation and position in grid. Position has to be relative to same center. Also, normal relative to block A specifies
            wall which is used for checking.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.GetTargetGrid">
            <summary>
            Obtain grid that player is aiming/looking at.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.GetTargetEntity">
            <summary>
            Obtain entity that player is aiming/looking at.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.TestPlacementAreaCube(Sandbox.Game.Entities.MyCubeGrid,VRage.Game.ObjectBuilders.Definitions.SessionComponents.MyGridPlacementSettings@,VRageMath.Vector3I,VRageMath.Vector3I,VRageMath.MyBlockOrientation,Sandbox.Definitions.MyCubeBlockDefinition,Sandbox.Game.Entities.MyCubeGrid@,VRage.Game.Entity.MyEntity,System.Boolean)">
            <summary>
            Test cube block placement area in grid.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.IsAabbInsideVoxel(VRageMath.MatrixD,VRageMath.BoundingBoxD,VRage.Game.ObjectBuilders.Definitions.SessionComponents.MyGridPlacementSettings)">
            <summary>
            Checks if aabb is in voxel. If settings provided it will return false if penetration settings allow for it.
            </summary>
            <param name="worldMatrix">World matrix of the aabb.</param>
            <param name="localAabb">Local aabb</param>
            <param name="settings">Game settings</param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.TransformMountPoints(System.Collections.Generic.List{Sandbox.Definitions.MyCubeBlockDefinition.MountPoint},Sandbox.Definitions.MyCubeBlockDefinition,Sandbox.Definitions.MyCubeBlockDefinition.MountPoint[],VRageMath.MyBlockOrientation@)">
            <summary>
            Fills passed lists with mount point data, which is transformed using orientation
            of the block.
            </summary>
            <param name="outMountPoints">Output buffer.</param>
            <param name="performCorrection">True when you want to have correction performed for when rotation of fractional values would have different result than integers.</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.StaticGlobalGrid_WorldToUGInt(VRageMath.Vector3D,System.Single,System.Boolean)">
            <summary>
            Converts world coordinate to static global grid uniform coordinate (virtual large grid in whole world which every large grid is snapped to). 
            Grid size is already used inside calculation.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.StaticGlobalGrid_WorldToUG(VRageMath.Vector3D,System.Single,System.Boolean)">
            <summary>
            Converts world coordinate to static global grid uniform coordinate (virtual large grid in whole world which every large grid is snapped to). 
            Grid size is already used inside calculation.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.StaticGlobalGrid_UGToWorld(VRageMath.Vector3D,System.Single,System.Boolean)">
            <summary>
            Converts static global uniform grid coordinate to world coordinate. 
            Grid size is already used inside calculation.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyCubeGrid.m_totalBoneDisplacement">
            <summary>
            Used when calculating damage from deformation application
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyCubeGrid.m_precalculatedCornerBonesDisplacementDistance">
            <summary>
            Value used by MoveCornerBones() to precalculate the bones displacement distance.
            A performance boost is gained because we can then avoid having to use Vector3.Length() which means we don't need sqrt() each time.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyCubeGrid.m_canHavePhysics">
            <summary>
            This caches if grid can have physics, once set to false, it stays false and grid is eventually closed.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyCubeGrid.m_isRespawnGrid">
            <summary>
            Indicates if a grid corresponds to a respawn ship/cart.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyCubeGrid.m_playedTime">
            <summary>
            Grid play time with player. Used by respawn ship. 
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.GetFatBlockCount``1">
            <summary>
            Return how much fat blocks defined by T is pressent in grid.
            </summary>
            <typeparam name="T">Type of Fatblock</typeparam>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.CreateSplits(Sandbox.Game.Entities.MyCubeGrid,System.Collections.Generic.List{Sandbox.Game.Entities.Cube.MySlimBlock},System.Collections.Generic.List{Sandbox.Game.Entities.Cube.MyDisconnectHelper.Group},System.Boolean)">
            <summary>
            SplitBlocks list can contain null when received from network
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.TryReduceGroupControl">
            <summary>
            Reduces the control of the current group if the current grid is the one that the player is sitting in
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.IsWithinWorldLimits(System.Int64,System.Int32,System.String)">
            <summary>
            Determines whether newly placed blocks still fit within block limits set by server
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.EnqueueRemovedBlockWithId(VRageMath.Vector3I,System.Nullable{System.UInt16},System.Boolean)">
            <summary>
            Server method, adds removed block with compound id into queue
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.RemoveBlocksBuiltByID(System.Int64)">
            <summary>
            Remove all blocks from the grid built by specific player
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.TransferBlocksBuiltByID(System.Int64,System.Int64)">
            <summary>
            Transfer all blocks built by a specific player to another player
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.SendTransferRequestMessage(System.Int64,System.Int64,System.UInt64)">
            <summary>
            Send a message to a player who is supposed to receive blocks built by a player
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.FindBlocksBuiltByID(System.Int64)">
            <summary>
            Find all blocks built by a specific player. May be public if really needed.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.IsTransferBlocksBuiltByIDPossible(System.Int64,System.Int64)">
            <summary>
            Find out whether a player blocks are supposed to be trasfered to has enough free blocks to accept them
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.BuildBlocks(Sandbox.Game.Entities.MyCubeGrid.MyBlockBuildArea@,System.Int64,System.Int64)">
            <summary>
            Network friendly alternative for building block
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.BuildBlocks(VRageMath.Vector3,System.Collections.Generic.HashSet{Sandbox.Game.Entities.MyCubeGrid.MyBlockLocation},System.Int64,System.Int64)">
            <summary>
            Builds many same blocks, used when building lines or planes.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.RazeBlocks(System.Collections.Generic.List{VRageMath.Vector3I})">
            <summary>
            Razes blocks (unbuild)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.ColorBlocks(VRageMath.Vector3I,VRageMath.Vector3I,VRageMath.Vector3,System.Boolean)">
            <summary>
            Color block in area. Verry slow.
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <param name="newHSV"></param>
            <param name="playSound"></param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.BuildBlock(Sandbox.Definitions.MyCubeBlockDefinition,VRageMath.Vector3,VRageMath.Vector3I,VRageMath.Quaternion,System.Int64,System.Int64,VRage.Game.Entity.MyEntity,VRage.Game.MyObjectBuilder_CubeBlock,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Builds block without checking connectivity
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.FixTargetCube(VRageMath.Vector3I@,VRageMath.Vector3)">
            <summary>
            Iterate over all the neighbors of the cube and return when one of them exists.
            </summary> 
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.CanHavePhysics">
            <summary>
            Returns true when grid have at least one block which has physics (e.g. interior lights have no physics)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.CanHavePhysics(System.Collections.Generic.List{Sandbox.Game.Entities.Cube.MySlimBlock},System.Int32,System.Int32)">
            <summary>
            Returns true when grid have at least one block which has physics (lights has no physics)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.RemoveDestroyedBlock(Sandbox.Game.Entities.Cube.MySlimBlock,System.Int64)">
            <summary>
            Removes destroyed block, applies damage and deformation to close blocks
            Won't update physics!
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.BlocksRemoved(System.Collections.Generic.List{VRageMath.Vector3I})">
            <summary>
            Client only method, not called on server
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.RemoveBlockInternal(Sandbox.Game.Entities.Cube.MySlimBlock,System.Boolean,System.Boolean)">
            <summary>
            Removes block, should be used only by server or on server request
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.GetClosestCorner(VRageMath.Vector3I,VRageMath.Vector3)">
            <summary>
            Returns cube corner which is closest to position
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.AddCube(Sandbox.Game.Entities.Cube.MySlimBlock,VRageMath.Vector3I@,VRageMath.Matrix,Sandbox.Definitions.MyCubeBlockDefinition)">
            <summary>
            Add new cube in the grid
            </summary>
            <param name="block"></param>
            <param name="pos"></param>
            <param name="rotation"></param>
            <param name="cubeBlockDefinition"></param>
            <returns>false if add failed (can be caused be block structure change during the development</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.MoveCornerBones(VRageMath.Vector3I,VRageMath.Vector3I,VRageMath.Vector3I@,VRageMath.Vector3I@)">
            <summary>
            For moving bones in corner, offset must contain two one's (positive or negative) and one zero
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.DetectMerge(Sandbox.Game.Entities.Cube.MySlimBlock,Sandbox.Game.Entities.MyCubeGrid,System.Collections.Generic.List{VRage.Game.Entity.MyEntity})">
            <summary>
            Tries to merge this grid with any other grid
            Merges grids only when both are static
            Returns the merged grid (which does not necessarily have to be this grid)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.IsMergePossible_Static(Sandbox.Game.Entities.Cube.MySlimBlock,Sandbox.Game.Entities.MyCubeGrid,VRageMath.Vector3I@)">
            <param name="gridOffset">Offset of second grid</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.MergeGrid_MergeClient(System.Int64,VRage.SerializableVector3I,VRageMath.Base6Directions.Direction,VRageMath.Base6Directions.Direction,VRageMath.Vector3I)">
            <summary>
            Merges grids on client side.
            </summary>
            <param name="gridId">Grid id to be merge with.</param>
            <param name="gridOffset">Grid offset.</param>
            <param name="gridForward">Grid forward.</param>
            <param name="gridUp">Grid Up.</param>
            <param name="mergingBlockPos">Position of block that triggered merge.</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.MoveBlocksAndClose(Sandbox.Game.Entities.MyCubeGrid,Sandbox.Game.Entities.MyCubeGrid,VRageMath.MatrixI,System.Boolean)">
            <summary>
            Used only when all blocks of grid are moved.
            Moving only some blocks is unsupported now.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.AddBlockInternal(Sandbox.Game.Entities.Cube.MySlimBlock)">
            <summary>
            Adds the block to the grid. The block's position and orientation in the grid should be set elsewhere
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.GetLineIntersectionExactAll(VRageMath.LineD@,System.Double@,Sandbox.Game.Entities.Cube.MySlimBlock@)">
            <summary>
            Returns closest line (in world space) intersection with all cubes. 
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.TransformCubeToGrid(VRage.Game.Models.MyIntersectionResultLineTriangleEx@,VRageMath.Matrix@,System.Nullable{VRageMath.MatrixD}@)">
            <summary>
            Correct interesection transforming vertices from cube to grid coordinates
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.GetBlocksInsideSpheres(VRageMath.BoundingSphereD@,VRageMath.BoundingSphereD@,VRageMath.BoundingSphereD@,System.Collections.Generic.HashSet{Sandbox.Game.Entities.Cube.MySlimBlock},System.Collections.Generic.HashSet{Sandbox.Game.Entities.Cube.MySlimBlock},System.Collections.Generic.HashSet{Sandbox.Game.Entities.Cube.MySlimBlock},System.Boolean,System.Single,VRageMath.MatrixD@)">
            <summary>
            Optimized version where spheres are sorted from smallest to largest
            </summary>
            <param name="sphere1"></param>
            <param name="sphere2"></param>
            <param name="sphere3"></param>
            <param name="blocks1"></param>
            <param name="blocks2"></param>
            <param name="blocks3"></param>
            <param name="respectDeformationRatio"></param>
            <param name="detectionBlockHalfSize"></param>
            <param name="invWorldGrid"></param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.RayCastBlocksAll(VRageMath.Vector3,VRageMath.Vector3)">
            <summary>
            Obtains all blocks intersected by raycast
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.RayCastBlocksAllOrdered(VRageMath.Vector3,VRageMath.Vector3)">
            <summary>
            Obtains all blocks intersected by raycast
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.RayCastBlocks(VRageMath.Vector3D,VRageMath.Vector3D)">
            <summary>
            Obtains position of first hit block.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.RayCastCells(VRageMath.Vector3D,VRageMath.Vector3D,System.Collections.Generic.List{VRageMath.Vector3I},System.Nullable{VRageMath.Vector3I},System.Boolean,System.Boolean)">
            <summary>
            Obtains positions of grid cells regardless of whether these cells are taken up by blocks or not.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.RayCastStaticCells(VRageMath.Vector3D,VRageMath.Vector3D,System.Collections.Generic.List{VRageMath.Vector3I},System.Single,System.Nullable{VRageMath.Vector3I},System.Boolean)">
            <summary>
            Obtains positions of static grid cells regardless of whether these cells are taken up by blocks or not. Usefull when placing block on voxel.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.GetGeneratedBlocks(Sandbox.Game.Entities.Cube.MySlimBlock,System.Collections.Generic.List{Sandbox.Game.Entities.Cube.MySlimBlock})">
            <summary>
            Returns array of generated blocks from given generating block. 
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.GetBiggestGridInGroup">
            <summary>
            Returns biggest grid in physical group by AABB volume
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.GetBlocksInMultiBlock(System.Int32,System.Collections.Generic.HashSet{System.Tuple{Sandbox.Game.Entities.Cube.MySlimBlock,System.Nullable{System.UInt16}}})">
            <summary>
            Writes multiblocks (compound block and block ID) to outMultiBlocks collection with the same multiblockId.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.BuildMultiBlocks(Sandbox.Game.Entities.Cube.MyCubeGridMultiBlockInfo,VRageMath.MatrixI@,System.Collections.Generic.List{System.Int32},System.Int64)">
            <summary>
            Builds multiblock parts according to specified indices. 
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.CanAddOtherBlockInMultiBlock(VRageMath.Vector3I,VRageMath.Vector3I,VRageMath.MyBlockOrientation,Sandbox.Definitions.MyCubeBlockDefinition,System.Nullable{System.Int32})">
            <summary>
            Checks if the given block can be added to place where multiblock area (note that even if some parts of multiblock are destroyed then they still 
            occupy - virtually - its place). 
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.GetTargetedBlock(VRageMath.Vector3D)">
            <param name="position">In world coordinates</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyCubeGrid.SendGridCloseRequest">
            <summary>
            Use only for cut request
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyCubeGrid.NumberOfGridColors">
            <summary>
            Return how many colors are on grid
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyCubeGrid.GridSizeR">
            <summary>
            Reciprocal of gridsize
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyCubeGrid.IsRespawnGrid">
            <summary>
            Gets or sets indication if a grid coresponds to a respawn ship/cart.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyCubeGrid.SmallOwners">
            <summary>
            players that have at least one block in cube grid
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyCubeGrid.BigOwners">
            <summary>
            players that have the maximum number of functional blocks in cube grid
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyCubeGrid.LocalCoordSystem">
            <summary>
            Local coord system under which this cube exists. (its id)
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.MyCubeGrid.BlockTypeCounter">
            <summary>
            Used when calculating index of added block. Might not be count of
            blocks since removal of a block does not decrement this. Key is numerical
            ID of cube block definition.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.MyShipConnector.MinStrength">
            <summary>
            Minimal strength for setting in terminal (must be > 0, it's used as log limit)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.MyShipConnector.DisconnectSleepTime">
            <summary>
            For this time the connector won't create aproach constraint (it's still possible to lock)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.MyShipConnector.m_isMaster">
            <summary>
            Whether this block created the constraint and should also remove it. Only valid if Connected == true;
            Master is block with higher EntityId.
            </summary>
            
        </member>
        <member name="T:Sandbox.Game.Entities.Cube.MyShipConnector.State">
            <summary>
            Represents connector state, atomic for sync, 8 B + 1b + 1b/12.5B
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyControllableSphere.SwitchDamping">
            <summary>
            Switches jetpack modes for character.
            </summary>
        </member>
        <member name="M:Sandbox.Graphics.GUI.MyDX9Gui.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="M:Sandbox.Graphics.GUI.MyDX9Gui.LoadData">
            <summary>
            Loads the data.
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.Conveyors.PullInformation.Inventory">
            <summary>
            Inventory of the block
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.Conveyors.PullInformation.OwnerID">
            <summary>
            Owner of the block
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.Conveyors.PullInformation.Constraint">
            <summary>
            Inventory constraint in case this block pulls/pushes multiple items
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.Conveyors.PullInformation.ItemDefinition">
            <summary>
            Item definition in case this block only pulls/pushes 1 specific item
            </summary>
        </member>
        <member name="F:Sandbox.Game.GameSystems.Conveyors.ConveyorLinePosition.Direction">
            <summary>
            Direction in local grid coordinates.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.Conveyors.MyConveyorLine.InitializeSectionList(System.Int32)">
            <summary>
            (Re)initializes the section list and ensures there will be enough space in it
            </summary>
            <param name="size">Required capacity of the section list. -1 means no resizing or initial capacity</param>
        </member>
        <member name="M:Sandbox.Game.GameSystems.Conveyors.MyConveyorLine.Merge(Sandbox.Game.GameSystems.Conveyors.MyConveyorLine,Sandbox.Game.GameSystems.Conveyors.IMyConveyorSegmentBlock)">
            <summary>
            Merges the other line into this line
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.Conveyors.MyConveyorLine.Reverse">
            <summary>
            Helper method that reverses the direction of the line.
            This method serves as a helper for the merging and splitting methods and should be relatively quick,
            because each added or removed conveyor block will trigger line merging or splitting.
            Once this won't be the case, consider refactoring the places from where this method is called.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.Conveyors.MyConveyorLine.RemovePortion(VRageMath.Vector3I,VRageMath.Vector3I)">
            <summary>
            Returns a conveyor line that is newly created by removing a segment in position "position"
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.Conveyors.MyConveyorLine.PositionIsInSection(VRageMath.Vector3I,VRageMath.Vector3I,Sandbox.Game.GameSystems.Conveyors.MyConveyorLine.SectionInformation,System.Int32@)">
            <summary>
            Tells, whether the given position lies within the given section (start point included and end point excluded).
            If it does, the sectionLength variable contains the distance from sectionStart to position.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.Conveyors.MyConveyorLine.RotateCircularLine(VRageMath.Vector3I)">
            <summary>
            Rotates the circular line so that the block to be removed is the first block in the line
            </summary>
        </member>
        <member name="T:Sandbox.Game.GameSystems.Conveyors.MyConveyorLine.LinePositionEnumerator">
            <summary>
            Enumerates inner line positions (i.e. not endpoint positions)
            </summary>
        </member>
        <member name="T:Sandbox.Game.Gui.MyWarningDetectionMethod">
            <summary>
            Delegate of warning detection method
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sandbox.Game.Gui.MyHudWarning">
            <summary>
            This class represents HUD warning
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudWarning.#ctor(Sandbox.Game.Gui.MyWarningDetectionMethod,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new instance of HUD warning
            </summary>
            <param name="detectionMethod">Warning's detection method</param>
            <param name="soundWarning">Sound warning</param>
            <param name="textWarning">Text warning</param>
            <param name="priority">Warning's priority</param>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudWarning.Update(System.Boolean)">
            <summary>
            Call it in each update
            </summary>
            <param name="isWarnedHigherPriority">Indicated if warning with greater priority was signalized</param>
            <returns>Returns true if warning detected. Else returns false</returns>
        </member>
        <member name="P:Sandbox.Game.Gui.MyHudWarning.WarningPriority">
            <summary>
            Warning's priority
            </summary>
        </member>
        <member name="T:Sandbox.Game.Gui.MyHudWarningGroup">
            <summary>
            This class represents HUD warning group. Only 1 warning can be signalized, from this group.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudWarningGroup.#ctor(System.Collections.Generic.List{Sandbox.Game.Gui.MyHudWarning},System.Boolean)">
            <summary>
            Creates new instance of HUD warning group
            </summary>
            <param name="hudWarnings"></param>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudWarningGroup.Update">
            <summary>
            Call it in each update.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudWarningGroup.Add(Sandbox.Game.Gui.MyHudWarning)">
            <summary>
            Adds new HUD warning to this group
            </summary>
            <param name="hudWarning">HUD warning to add</param>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudWarningGroup.Remove(Sandbox.Game.Gui.MyHudWarning)">
            <summary>
            Removes HUD warning from this group
            </summary>
            <param name="hudWarning">HUD warning to remove</param>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudWarningGroup.Clear">
            <summary>
            Removes all HUD warnings from this group
            </summary>        
        </member>
        <member name="T:Sandbox.Game.Gui.MyHudWarnings">
            <summary>
            This class represents HUD warnings for entities
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudWarnings.Add(Sandbox.Game.Gui.MyHudWarningGroup)">
            <summary>
            Register new HUD warning group for entity
            </summary>
            <param name="entity">Entity</param>
            <param name="hudWarningGroup">HUD warning group</param>
        </member>
        <member name="M:Sandbox.Game.Gui.MyHudWarnings.Remove(Sandbox.Game.Gui.MyHudWarningGroup)">
            <summary>
            Unregister HUD warning group for entity
            </summary>
            <param name="entity">Entity</param>
            <param name="hudWarningGroup">HUD warning group</param>
        </member>
        <member name="F:Sandbox.Game.Weapons.MyShipToolBase.DEFAULT_REACH_DISTANCE">
            <summary>
            Default reach distance of a tool;
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyMeteorShower.HORIZON_ANGLE_FROM_ZENITH_RATIO">
            <summary>
            Angle above horizon on which meteor direction leaves sun direction.
            value = Sin(angle_in_radians)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyMeteorShower.METEOR_BLUR_KOEF">
            <summary>
            Can change size of hit area.
            0 - meteorits aim to center of structure
            1 - aim to circle which is cut from sphere BB and plane perpendicular to hit vector (from sun to center of BB)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyMeteorShower.GetCorrectedDirection(VRageMath.Vector3)">
            <summary>
            Calculate propper direction for meteorits. Everytime above horizon.
            </summary>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Graphics.GUI.MyGuiSandbox.LoadData(System.Boolean)">
            <summary>
            Loads the data.
            </summary>
        </member>
        <member name="F:Sandbox.Graphics.GUI.MyGuiSandbox.GuiControlCreated">
            <summary>
            Event triggered on gui control created.
            </summary>
        </member>
        <member name="F:Sandbox.Graphics.GUI.MyGuiSandbox.GuiControlRemoved">
            <summary>
            Event triggered on gui control removed.
            </summary>
        </member>
        <member name="M:Sandbox.Graphics.GUI.MyGuiSandbox.OpenUrlWithFallback(System.String,System.String,System.Boolean)">
            <summary>
            Opens URL in Steam overlay or external browser.
            </summary>
            <param name="url">Url to open.</param>
            <param name="urlFriendlyName">Friendly name of URL to show in confirmation screen, e.g. Steam Workshop</param>
        </member>
        <member name="M:Sandbox.Graphics.GUI.MyGuiSandbox.OpenUrl(System.String,Sandbox.Graphics.GUI.UrlOpenMode,System.Text.StringBuilder)">
            <summary>
            Opens URL in Steam overlay or external browser.
            </summary>
            <param name="url">Url to open.</param>
            <param name="openMode">How to open the url.</param>
        </member>
        <member name="F:Sandbox.Game.MyBasicGameInfo.GameNameSafe">
            <summary>
            Game name without any spaces and generally usable for folder names.
            </summary>
        </member>
        <member name="F:Sandbox.Game.MyPerGameSettings.TerminalEnabled">
            <summary>
            Simplest way to get rid of terminal for anything but SE.
            Terminal has leaked into a lot of places and should get decoupled somehow.
            </summary>
        </member>
        <member name="F:Sandbox.Game.MyPerGameSettings.MultiplayerEnabled">
            <summary>
            MULTIPLAYER RELATED SETTINGS
            </summary>
        </member>
        <member name="F:Sandbox.Game.MyPerGameSettings.LargeGridRBFlag">
            <summary>
            CLIENT ANIMATING / SIMULATING
            </summary>
        </member>
        <member name="M:Sandbox.AppCode.Game.TransparentGeometry.MySunWind.ComputeMaxDistances">
            <summary>
            Compute MaxDistances for uninitialized SmallBillboards
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyGuiScreenDebugHandItemBase.OnClosed">
            <summary>
            Called when [show].
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Cube.MyDepositQuery">
            <summary>
            This is not in Sandbox.Engine.Voxels as I consider it gameplay related,
            rather than voxel engine functionality.
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Networking.MyReceiveQueue">
            <summary>
            Receives messages from Steam immediatelly on separate thread
            Precise receive time is required for proper interpolation
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MyReceiveQueue.AddMessage(System.Byte[],System.Int32,System.UInt64)">
            <summary>
            Enqueues message for processing, useful for loopback
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MyReceiveQueue.Process(Sandbox.Engine.Networking.NetworkMessageDelegate,VRage.Library.Utils.MyTimeSpan)">
            <summary>
            Processes messages
            Delay indicates how long must be message in queue before processing (lag emulation)
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Networking.MyReceiveQueue.Mode.Synchronized">
            <summary>
            Read messages synchronized when calling Process, timestamps won't be accurate
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Networking.MyReceiveQueue.Mode.Timer">
            <summary>
            High precision timer will read messages (1ms intervals)
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Networking.MyReceiveQueue.Mode.Spin">
            <summary>
            Messages will be read in spin cycle, HIGH CPU USAGE!
            </summary>
        </member>
        <member name="T:Sandbox.Game.Multiplayer.MyNetworkTimer">
            <summary>
            Returns continuous server time including network lag
            For server it's real time, and speed won't ever change
            </summary>
        </member>
        <member name="F:Sandbox.Game.Multiplayer.MyNetworkTimer.m_deltas">
            <summary>
            Deltas of server times, localTime - serverTime
            </summary>
        </member>
        <member name="T:Sandbox.Game.Screens.Helpers.MyGuiControlInventoryOwner">
            <summary>
            Composite control for inventory. Not a general-use control so don't use 
            it for anything but inventories. Also not meant for editor or serialization.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseStaticEvent(System.Func{VRage.Network.IMyEventOwner,System.Action},VRage.Network.EndpointId)">
            <summary>
            Raises static multiplayer event.
            Usage: MyMultiplayer.RaiseStaticEvent(s => MyClass.MyStaticFunction);
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseStaticEvent``1(System.Func{VRage.Network.IMyEventOwner,System.Action{``0}},``0,VRage.Network.EndpointId)">
            <summary>
            Raises static multiplayer event.
            Usage: MyMultiplayer.RaiseStaticEvent(s => MyClass.MyStaticFunction, arg);
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseStaticEvent``2(System.Func{VRage.Network.IMyEventOwner,System.Action{``0,``1}},``0,``1,VRage.Network.EndpointId)">
            <summary>
            Raises static multiplayer event.
            Usage: MyMultiplayer.RaiseStaticEvent(s => MyClass.MyStaticFunction, arg2, arg3);
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseStaticEvent``3(System.Func{VRage.Network.IMyEventOwner,System.Action{``0,``1,``2}},``0,``1,``2,VRage.Network.EndpointId)">
            <summary>
            Raises static multiplayer event.
            Usage: MyMultiplayer.RaiseStaticEvent(s => MyClass.MyStaticFunction, arg2, arg3, arg4);
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseStaticEvent``4(System.Func{VRage.Network.IMyEventOwner,System.Action{``0,``1,``2,``3}},``0,``1,``2,``3,VRage.Network.EndpointId)">
            <summary>
            Raises static multiplayer event.
            Usage: MyMultiplayer.RaiseStaticEvent(s => MyClass.MyStaticFunction, arg2, arg3, arg4, arg5);
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseStaticEvent``5(System.Func{VRage.Network.IMyEventOwner,System.Action{``0,``1,``2,``3,``4}},``0,``1,``2,``3,``4,VRage.Network.EndpointId)">
            <summary>
            Raises static multiplayer event.
            Usage: MyMultiplayer.RaiseStaticEvent(s => MyClass.MyStaticFunction, arg2, arg3, arg4, arg5, arg6);
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseStaticEvent``6(System.Func{VRage.Network.IMyEventOwner,System.Action{``0,``1,``2,``3,``4,``5}},``0,``1,``2,``3,``4,``5,VRage.Network.EndpointId)">
            <summary>
            Raises static multiplayer event.
            Usage: MyMultiplayer.RaiseStaticEvent(s => MyClass.MyStaticFunction, arg2, arg3, arg4, arg5, arg6);
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseEvent``1(``0,System.Func{``0,System.Action},VRage.Network.EndpointId)">
            <summary>
            Raises multiplayer event.
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseBlockingEvent``2(``0,``1,System.Func{``0,System.Action},VRage.Network.EndpointId)">
            <summary>
            Raises blocking multiplayer event.
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseEvent``2(``0,System.Func{``0,System.Action{``1}},``1,VRage.Network.EndpointId)">
            <summary>
            Raises multiplayer event.
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseBlockingEvent``3(``0,``2,System.Func{``0,System.Action{``1}},``1,VRage.Network.EndpointId)">
            <summary>
            Raises blocking multiplayer event.
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseEvent``3(``0,System.Func{``0,System.Action{``1,``2}},``1,``2,VRage.Network.EndpointId)">
            <summary>
            Raises multiplayer event.
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseBlockingEvent``4(``0,``3,System.Func{``0,System.Action{``1,``2}},``1,``2,VRage.Network.EndpointId)">
            <summary>
            Raises blocking multiplayer event.
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseEvent``4(``0,System.Func{``0,System.Action{``1,``2,``3}},``1,``2,``3,VRage.Network.EndpointId)">
            <summary>
            Raises multiplayer event.
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseBlockingEvent``5(``0,``4,System.Func{``0,System.Action{``1,``2,``3}},``1,``2,``3,VRage.Network.EndpointId)">
            <summary>
            Raises blocking multiplayer event.
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseEvent``5(``0,System.Func{``0,System.Action{``1,``2,``3,``4}},``1,``2,``3,``4,VRage.Network.EndpointId)">
            <summary>
            Raises multiplayer event.
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseBlockingEvent``6(``0,``5,System.Func{``0,System.Action{``1,``2,``3,``4}},``1,``2,``3,``4,VRage.Network.EndpointId)">
            <summary>
            Raises blocking multiplayer event.
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseEvent``6(``0,System.Func{``0,System.Action{``1,``2,``3,``4,``5}},``1,``2,``3,``4,``5,VRage.Network.EndpointId)">
            <summary>
            Raises multiplayer event.
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseBlockingEvent``7(``0,``6,System.Func{``0,System.Action{``1,``2,``3,``4,``5}},``1,``2,``3,``4,``5,VRage.Network.EndpointId)">
            <summary>
            Raises blocking multiplayer event.
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseEvent``7(``0,System.Func{``0,System.Action{``1,``2,``3,``4,``5,``6}},``1,``2,``3,``4,``5,``6,VRage.Network.EndpointId)">
            <summary>
            Raises multiplayer event.
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.RaiseEvent``8(``0,``7,System.Func{``0,System.Action{``1,``2,``3,``4,``5,``6}},``1,``2,``3,``4,``5,``6,VRage.Network.EndpointId)">
            <summary>
            Raises blocking multiplayer event.
            </summary>
            <param name="targetEndpoint">Target of the event. When broadcasting, it's exclude endpoint.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.ReplicateImmediatelly(VRage.Network.IMyReplicable,VRage.Network.IMyReplicable)">
            <summary>
            This is hack for immediate replication, it's necessary because of logic dependency.
            E.g. Character is created on server, sent to client and respawn message sent immediatelly.
            Should be called only on server.
            </summary>
            <param name="replicable">Replicable to replicate to clients</param>
            <param name="dependency">Replicable will be replicated only to clients who has dependency.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.ReplicateImmediatelly(VRage.Network.IMyReplicable,VRage.Network.EndpointId)">
            <summary>
            This is hack for immediate replication, it's necessary because of logic dependency.
            E.g. Character is created on server, sent to client and respawn message sent immediatelly.
            Should be called only on server.
            </summary>
            <param name="replicable">Replicable to replicate.</param>
            <param name="clientEndpoint">Client who will receive the replicable immediatelly.</param>
        </member>
        <member name="M:Sandbox.Engine.Multiplayer.MyMultiplayer.GetMultiplayerStats">
            <summary>
            Gets multiplayer statistics in formatted string. Use only for Debugging.
            </summary>
            <returns>Formatted multiplayer statistics.</returns>
        </member>
        <member name="T:Sandbox.Engine.Multiplayer.MessageIdAttribute">
            <summary>
            Message id, random number from 0 to 16383
            Must be unique (there's assert for it to)
            </summary>
        </member>
        <member name="P:Sandbox.Engine.Multiplayer.MyTransportLayer.IsBuffering">
            <summary>
            Setting to false will process buffer
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Networking.MySteamWorkshop.WORKSHOP_DEVELOPMENT_TAG">
            <summary>
            Do NOT change this value, as it would break worlds published to workshop!!!
            Tag for workshop items which contain world data.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MySteamWorkshop.PublishItemBlocking(System.String,System.String,System.String,System.Nullable{System.UInt64},SteamSDK.PublishedFileVisibility,System.String[],System.String[])">
            <summary>
            Do NOT call this method from update thread. Use PublishWorldAsync or worker thread, otherwise it will block update.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MySteamWorkshop.GetSubscribedWorldsBlocking(System.Collections.Generic.List{Sandbox.Engine.Networking.MySteamWorkshop.SubscribedItem})">
            <summary>
            Do NOT call this method from update thread.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MySteamWorkshop.GetSubscribedCampaignsBlocking(System.Collections.Generic.List{Sandbox.Engine.Networking.MySteamWorkshop.SubscribedItem})">
            <summary>
            Do NOT call this method from update thread.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MySteamWorkshop.GetSubscribedModsBlocking(System.Collections.Generic.List{Sandbox.Engine.Networking.MySteamWorkshop.SubscribedItem})">
            <summary>
            Do NOT call this method from update thread.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MySteamWorkshop.GetSubscribedScenariosBlocking(System.Collections.Generic.List{Sandbox.Engine.Networking.MySteamWorkshop.SubscribedItem})">
            <summary>
            Do NOT call this method from update thread.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MySteamWorkshop.GetSubscribedBlueprintsBlocking(System.Collections.Generic.List{Sandbox.Engine.Networking.MySteamWorkshop.SubscribedItem})">
            <summary>
            Do NOT call this method from update thread.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MySteamWorkshop.GetSubscribedItemsBlocking(System.Collections.Generic.List{Sandbox.Engine.Networking.MySteamWorkshop.SubscribedItem},System.String)">
            <summary>
            Do NOT call this method from update thread.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MySteamWorkshop.DownloadItemBlocking(System.String,System.UInt64)">
            <summary>
            Do NOT call this method from update thread.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MySteamWorkshop.DownloadModsBlocking(System.Collections.Generic.List{Sandbox.Engine.Networking.MySteamWorkshop.SubscribedItem})">
            <summary>
            Do NOT call this method from update thread.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MySteamWorkshop.DownloadBlueprintsBlocking(System.Collections.Generic.List{Sandbox.Engine.Networking.MySteamWorkshop.SubscribedItem})">
            <summary>
            Do NOT call this method from update thread.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MySteamWorkshop.DownloadWorldModsBlocking(System.Collections.Generic.List{VRage.Game.MyObjectBuilder_Checkpoint.ModItem})">
            <summary>
            Do NOT call this method from update thread.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MySteamWorkshop.IsModUpToDateBlocking(System.String,Sandbox.Engine.Networking.MySteamWorkshop.SubscribedItem,System.Boolean,System.Int64)">
            <summary>
            Do NOT call this method from update thread.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MySteamWorkshop.TryCreateWorldInstanceBlocking(Sandbox.Engine.Networking.MySteamWorkshop.SubscribedItem,Sandbox.Engine.Networking.MySteamWorkshop.MyWorkshopPathInfo,System.String@,System.Boolean)">
            <summary>
            Do NOT call this method from update thread.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MySteamWorkshop.TryCreateBattleWorldInstanceBlocking(Sandbox.Engine.Networking.MySteamWorkshop.SubscribedItem,System.String,System.String@)">
            <summary>
            Do NOT call this method from update thread.
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Utils.MyLocalityGrouping">
            <summary>
            Use this class to prevent multiple instances close to each other at the same time.
            Call add instance to test whether instance can be added.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyLocalityGrouping.AddInstance(System.TimeSpan,VRageMath.Vector3,System.Single,System.Boolean)">
            <summary>
            This is currently O(n), when it's not enough, bounding volume tree or KD-tree will be used.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyLocalityGrouping.RemoveOld">
            <summary>
            This is O(r) where r is number of removed elements
            </summary>
        </member>
        <member name="M:VRage.MyRandomExtensions.FloatNormal(VRage.Library.Utils.MyRandom)">
            <summary>
            Normal distribution, Returns number from -3,3
            </summary>
            <param name="rnd"></param>
            <returns></returns>
        </member>
        <member name="M:VRage.MyRandomExtensions.FloatNormal(VRage.Library.Utils.MyRandom,System.Single,System.Single)">
            <summary>
            Some distribution, probably normal?
            </summary>
            <param name="standardDeviation">0.2f gets numbers aprox from -1,1</param>
        </member>
        <member name="M:VRage.MyRandomExtensions.FloatExponential(VRage.Library.Utils.MyRandom,System.Single)">
            <summary>
            Returns exponentially distributed numbers.
            For example, time between events of a Poisson process (i.e. events that happen independently of each other with a
            constant rate of generation - raindrops falling onto a surface, incoming meteors, webserver requests, etc.) is an
            exponentially distributed random variable.
            </summary>
            <param name="mean">Mean value of the exponential distribution. This is the same as 1/lambda.</param>
        </member>
        <member name="M:VRage.MyRandomExtensions.NextDeviatingVector(VRage.Library.Utils.MyRandom,VRageMath.Vector3,System.Single)">
            <summary>
            Create random vector, whose direction is 'originalVector', but deviated by random angle (whose interval is 0..maxAngle).
            Use if you want deviate vector by a smal amount (e.g. debris thrown from projectile hit point)
            </summary>
        </member>
        <member name="M:VRage.MyRandomExtensions.NextDeviatingVector(VRage.Library.Utils.MyRandom,VRageMath.Matrix@,System.Single)">
            <summary>
            Create random vector, whose direction is 'originalVector', but deviated by random angle (whose interval is 0..maxAngle).
            Use if you want deviate vector by a smal amount (e.g. debris thrown from projectile hit point)
            Optimized version with Matrix precalculated
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Utils.MyVoxelSegmentationType.ExtraSimple">
            <summary>
            Fastest method, but not very efficient, there's usually 100% more shapes (compared to optimized).
            It's about 40x faster than optimized version and 50x faster than fast version.
            Often generates just long lines instead of boxes.
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Utils.MyVoxelSegmentationType.Fast">
            <summary>
            Quite fast method and quite efficient, there's usually similar number of shapes (compared to optimized).
            It's about 3x faster than optimized version, but prefers longer boxes.
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Utils.MyVoxelSegmentationType.Optimized">
            <summary>
            Slowest method, generates lowest number of shapes.
            Prefers cubic boxes.
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Utils.MyVoxelSegmentationType.Simple">
            <summary>
            Generates a number of shapes comparable to Optimized in a time comparable to ExtraSimple.
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Utils.MyVoxelSegmentationType.Simple2">
            <summary>
            Little optimization added to Simple
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyVoxelSegmentation.FindSegments(Sandbox.Engine.Utils.MyVoxelSegmentationType,System.Int32)">
            <summary>
            Creates segments from voxel data.
            </summary>
            <param name="filledVoxels">Positions on filled voxels (or one material).</param>
            <param name="mergeIterations">Number of post-process merge iterations, one should be always sufficient, algorithm works pretty well with 0 too.</param>
            <param name="fastMethod">Fast method is about 3x faster, but prefers longer boxes instead of cubic and generates about 5 - 10% more segments.</param>
            <returns>List of segments.</returns>
        </member>
        <member name="T:Sandbox.Game.Entities.AnimationPlayer">
            <summary>
            Animation clip player. It maps an animation clip onto a model
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.AnimationPlayer.m_position">
            <summary>
            Current position in time in the clip
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.AnimationPlayer.m_boneInfos">
            <summary>
            We maintain a BoneInfo class for each bone. This class does
            most of the work in playing the animation.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.AnimationPlayer.m_boneCount">
            <summary>
            The number of bones
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.AnimationPlayer.m_skinnedEntity">
            <summary>
            An assigned model
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.AnimationPlayer.m_frameOption">
            <summary>
            The looping option
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.AnimationPlayer.#ctor">
            <summary>
            Constructor for the animation player. It makes the 
            association between a clip and a model and sets up for playing
            </summary>
            <param name="clip"></param>
        </member>
        <member name="P:Sandbox.Game.Entities.AnimationPlayer.Position">
            <summary>
            The position in the animation
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.AnimationPlayer.Looping">
            <summary>
            The looping option. Set to true if you want the animation to loop
            back at the end
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.AnimationPlayer.BoneInfo">
            <summary>
            Information about a bone we are animating. This class connects a bone
            in the clip to a bone in the model.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.AnimationPlayer.BoneInfo.m_currentKeyframe">
            <summary>
            The current keyframe. Our position is a time such that the 
            we are greater than or equal to this keyframe's time and less
            than the next keyframes time.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.AnimationPlayer.BoneInfo.m_assignedBone">
            <summary>
            Bone in a model that this keyframe bone is assigned to
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.AnimationPlayer.BoneInfo.Rotation">
            <summary>
            Current animation rotation
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.AnimationPlayer.BoneInfo.Translation">
            <summary>
            Current animation translation
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.AnimationPlayer.BoneInfo.Keyframe1">
            <summary>
            We are at a location between Keyframe1 and Keyframe2 such 
            that Keyframe1's time is less than or equal to the current position
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.AnimationPlayer.BoneInfo.Keyframe2">
            <summary>
            Second keyframe value
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.AnimationPlayer.BoneInfo.m_clipBone">
            <summary>
            The bone in the actual animation clip
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.AnimationPlayer.BoneInfo.#ctor">
            <summary>
            Constructor
            </summary>
            <param name="bone"></param>
        </member>
        <member name="M:Sandbox.Game.Entities.AnimationPlayer.BoneInfo.SetPosition(System.Single)">
            <summary>
            Set the bone based on the supplied position value
            </summary>
            <param name="position"></param>
        </member>
        <member name="M:Sandbox.Game.Entities.AnimationPlayer.BoneInfo.SetKeyframes">
            <summary>
            Set the keyframes to a valid value relative to 
            the current keyframe
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.AnimationPlayer.BoneInfo.SetModel(Sandbox.Game.Entities.MySkinnedEntity)">
            <summary>
            Assign this bone to the correct bone in the model
            </summary>
            <param name="model"></param>
        </member>
        <member name="P:Sandbox.Game.Entities.AnimationPlayer.BoneInfo.ModelBone">
            <summary>
            The bone this animation bone is assigned to in the model
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyWarhead.Countdown(System.Int32)">
            <summary>
            Returns true if the warhead should explode
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyFloatingObjects.SpawnInventoryItems">
            <summary>
            Spawning of inventory items is delayed to UpdateAfterSimulation
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyFloatingObjects.RemoveFloatingObject(Sandbox.Game.Entities.MyFloatingObject,VRage.MyFixedPoint)">
            <param name="amount">MyFixedPoint.MaxValue to remove object</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyFloatingObjects.ChangeObjectBuilder(Sandbox.Definitions.MyComponentDefinition,VRage.ObjectBuilders.MyObjectBuilder_EntityBase)">
            <summary>
            This is used mainly for compactibility issues, it takes the builder of an entity of old object representation and creates a floating object builder for it
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyFloatingObjects.RequestSpawnCreative(VRage.Game.MyObjectBuilder_FloatingObject)">
            <summary>
            Players are allowed to spawn any object in creative
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Cube.MyProductionBlock">
            <summary>
            Common base for Assembler and Refinery blocks
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyProductionBlock.AddQueueItemRequest(Sandbox.Definitions.MyBlueprintDefinitionBase,VRage.MyFixedPoint,System.Int32)">
            <summary>
            Sends request to server to add item to queue. (Can be also called on server. In that case it will be local)
            </summary>
            <param name="blueprint"></param>
            <param name="ammount"></param>
            <param name="idx">idx - index to insert (-1 = last).</param>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyProductionBlock.MoveQueueItemRequest(System.UInt32,System.Int32)">
            <summary>
            Sends request to server to move queue item. (Can be also called on server. In that case it will be local)
            </summary>
            <param name="srcItemId"></param>
            <param name="dstIdx"></param>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyProductionBlock.RemoveQueueItemRequest(System.Int32,VRage.MyFixedPoint,System.Single)">
            <summary>
            Sends request to server to remove item from queue. (Can be also called on server. In that case it will be local)
            </summary>
            <param name="idx"></param>
            <param name="amount"></param>
            <param name="progress"></param>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyProductionBlock.RemoveFirstQueueItemAnnounce(VRage.MyFixedPoint,System.Single)">
            <summary>
            Removes specified amount from the first item in the queue. This is called by 
            subclasses (eg. assembler puts an item into its current production, refinery
            processes some ore, etc.) in their own specific situations.
            </summary>
            <param name="amount">Amount to be removed.</param>
            <param name="progress">Current progress of he processed item.</param>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyProductionBlock.SwapQueue(System.Collections.Generic.List{Sandbox.Game.Entities.Cube.MyProductionBlock.QueueItem}@)">
            <summary>
            Swaps this and other queue. This operation is not synchronized. Those using
            this method should take care of proper synchronization.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyProductionBlock.UpdateProduction(System.Int32)">
            <summary>
            Note: The child production block should update the IsProducing flag in this method
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Cube.MyProductionBlock.IsProducing">
            <summary>
            Set by subclasses indicating whether they are working on something or not.
            Determines required power input.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Cube.MyProductionBlock.Queue">
            <summary>
            Do not make changes to values in this enumerable. Consider it const reference.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.Cube.MyAssembler.CurrentProgress">
            <summary>
            Progress of currently built item in % (range 0 to 1).
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.MyCubeGridRenderData.SplitCellCubeCount">
            <summary>
            Cell cube count per axis (cell is 30x30x30)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeGridRenderData.SetBasePositionHint(VRageMath.Vector3)">
            <summary>
            Set base position, usually min of bounding box
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyFourEdgeInfo.GetIndex(VRageMath.Vector3@)">
            <summary>
            Based on block position and edge position, calculated block index from 0 to 4 (no more than for blocks shares edge)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyComponentStack.MOUNT_THRESHOLD">
            <summary>
            Mount threshold, required because of float inaccuracy.
            Component that has integrity beyond this threshold is considered unmounted.
            The integrity of the whole stack will never fall beyond this level (unless the stack is fully dismounted)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyComponentStack.UpdateIndices">
            <summary>
            Updates the top 
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyComponentStack.DecreaseMountLevel(System.Single,Sandbox.Game.Entities.MyConstructionStockpile,System.Boolean)">
            <summary>
            Dismounts component stack, dismounted items are put into output stockpile
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyComponentStack.ApplyDamage(System.Single,Sandbox.Game.Entities.MyConstructionStockpile)">
            <summary>
            Applies damage to the component stack. The method works almost the same as dismounting, it just leaves the
            build level at the original value and also the parts that are put into the outputStockpile are damaged.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyComponentStack.IsFunctional">
            <summary>
            Component stack is functional when critical part is not destroyed (integrity > 0).
            IMPORTANT: When you change the logic beyond this property, don't forget to call CheckFunctionalState every time the
                       functional state could have been changed! (Also, remove calls to CheckFunctionalState where no longer needed)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyComponentStack.GroupInfo.Integrity">
            <summary>
            Integrity of group, increases when mounting more components
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeBlockCollector.IsValid">
            <summary>
            Tests whether there are no overlaps.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeBlockCollector.CollectArea(Sandbox.Game.Entities.MyCubeGrid,System.Collections.Generic.HashSet{VRageMath.Vector3I},Sandbox.Engine.Utils.MyVoxelSegmentation,Sandbox.Engine.Utils.MyVoxelSegmentationType,System.Collections.Generic.IDictionary{VRageMath.Vector3I,Havok.HkMassElement})">
            <summary>
            Intended for quite small refreshes (few blocks).
            Collect is faster for large refresh.
            Removes also dirty mass elements.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyCubeBlockCollector.AddBoxes(Sandbox.Game.Entities.Cube.MySlimBlock)">
            <param name="block"></param>
            <param name="applySkeleton"></param>
            <param name="allowedDeformation">Absolute value of allowed deformation (in meters) to consider cube full</param>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyDirtyRegion.AddCubeRegion(VRageMath.Vector3I,VRageMath.Vector3I)">
            <summary>
            Adds dirty region, min and max are inclusive
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MyGridShape.GetBreakableShape(System.String,Sandbox.Definitions.MyCubeBlockDefinition,System.Boolean)">
            <summary>
            
            </summary>
            <param name="block"></param>
            <returns>Cloned shape</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Sandbox.Game.Entities.MyGridSkeleton.BoneDensity" -->
        <member name="F:Sandbox.Game.Entities.MyGridSkeleton.MAX_BONE_ERROR">
            <summary>
            Multiply this with your grid size before use!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyGridSkeleton.m_tempAffectedCubes">
            <summary>
            This needs to be ThreadStatic because mods can call MyCubeGrid.GetObjectBuilder from other threads
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyGridSkeleton.CopyTo(Sandbox.Game.Entities.MyGridSkeleton,VRageMath.Vector3I,VRageMath.Vector3I)">
            <summary>
            Copies part of skeleton to other skeleton, both positions are inclusive
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyGridSkeleton.FixBone(VRageMath.Vector3I,VRageMath.Vector3I,System.Single,System.Single)">
            <summary>
            Fixes bone in way that it won't be further than neighbour bones.
            This helps fix invalid triangles during rendering.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyGridSkeleton.ClearBone(VRageMath.Vector3I@)">
            <summary>
            Returns true when bone was really removed
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyGridSkeleton.MultiplyBone(VRageMath.Vector3I@,System.Single,VRageMath.Vector3I@,Sandbox.Game.Entities.MyCubeGrid,System.Single)">
            <summary>
            Returns true when bone was changed.
            When new bone offset length is smaller than epsilon, it will remove bone.
            Factor is used as t paramter in a lerp. This is because the default position
            for a bone may not be 0
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyGridSkeleton.Wrap(VRageMath.Vector3I@,VRageMath.Vector3I@)">
            <summary>
            Bone offset is normally between 0 and BoneDensity (including)
            This function takes any other values and transforms it into cube and proper bone offset
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyGridSkeleton.GetAffectedCubes(VRageMath.Vector3I,VRageMath.Vector3I,System.Collections.Generic.List{VRageMath.Vector3I},Sandbox.Game.Entities.MyCubeGrid)">
            <summary>
            Gets all cubes which are affected by bone.
            </summary>
            <param name="onlyExisting">Returns only cubes which were added to skeleton.</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyGridSkeleton.AddUsedBones(VRageMath.Vector3I)">
            <summary>
            MArks the bones of the cube at position "pos" as used
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyGridSkeleton.GetDefinitionOffset(Sandbox.Game.Entities.Cube.MySlimBlock,VRageMath.Vector3I)">
            <summary>
            Assumes cubeBlock is not null
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.MySlimBlock.Neighbours">
            <summary>
            Neighbours which are connected by mount points
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.MySlimBlock.MultiBlockDefinition">
            <summary>
            Multiblock definition which the block was created from or null.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.MySlimBlock.MultiBlockId">
            <summary>
            Multiblock unique identifier (all blocks in a multiblock have the same identifier). 0 means single block (default). Unique in one grid.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.MySlimBlock.MultiBlockIndex">
            <summary>
            Index of block in multiblock definition.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Cube.MySlimBlock.m_modelTotalFracturesCount">
            <summary>
            Cached count of all breakable shapes per model.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MySlimBlock.InitOrientation(VRageMath.Base6Directions.Direction,VRageMath.Base6Directions.Direction)">
            <summary>
            Initializes the orientation of the slim block according to the given forward and up vectors.
            Note that the resulting orientation can be different than the supplied orientation due to symmetries.
            This function chooses one canonical orientation for all orientations from one symetry equivalent group of orientations.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MySlimBlock.InitOrientation(VRageMath.MyBlockOrientation)">
            <summary>
            An argument variant of the previous function
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MySlimBlock.MoveItemsFromConstructionStockpile(VRage.Game.Entity.MyInventoryBase,VRage.Game.MyItemFlags)">
            <summary>
            Moves items with the given flags from the construction inventory to the character.
            If the flags are None, all items are moved.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MySlimBlock.ApplyDestructionDamage(System.Single)">
            <summary>
            Destruction does not apply any damage to block (instead triggers destruction) so it is applied through this method 
            when fracture component is created or when any of internal fratures is removed from component.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MySlimBlock.ApplyAccumulatedDamage(System.Boolean,System.Int64)">
            <summary>
            Do not call explicitly. Will be done automatically by the grid.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MySlimBlock.FullyDismount(Sandbox.Game.MyInventory)">
            <summary>
            Completely deconstruct this block
            Intended for server-side use
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MySlimBlock.ComputeMax(Sandbox.Definitions.MyCubeBlockDefinition,VRageMath.MyBlockOrientation,VRageMath.Vector3I@,VRageMath.Vector3I@)">
            <summary>
            Called when block is destroyed before being removed from grid
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MySlimBlock.UpgradeBuildLevel">
            <summary>
            Forced change of build progress so that next model is shown.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MySlimBlock.RandomizeBuildLevel">
            <summary>
            Forced change of build progress to a random value.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MySlimBlock.GetWorldBoundingBox(VRageMath.BoundingBoxD@,System.Boolean)">
            <summary>
            Returns world AABB of the block (geometry AABB). If useAABBFromBlockCubes = true then AABB from block cubes is returned.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MySlimBlock.RepairMultiBlock(System.Int64)">
            <summary>
            Repairs multiblock - adds missing blocks and repairs existing ones.
            </summary>
            <param name="toolOwnerId"></param>
            <param name="repairExistingBlocks"></param>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MySlimBlock.RemoveAuthorship">
            <summary>
            Makes sure this block no longer counts towards the block limit of the player who built it
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MySlimBlock.AddAuthorship">
            <summary>
            Makes the block count towards the block limit of the player who built it
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Cube.MySlimBlock.TransferAuthorship(System.Int64)">
            <summary>
            Transfers the block to count towards other player's limit
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Debris.MyDebris">
            <summary>
            Wrapper for different types of debris and their pools. Also used to create debris.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Debris.MyDebrisVoxel">
            <summary>
            This class has two functions: it encapsulated one instance of voxel debris object, and also holds static prepared/preallocated 
            object pool for those instances - and if needed adds them to main phys objects collection for short life.
            It's because initializing JLX object is slow and we don't want to initialize 20 (or so) objects for every explosion.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Debris.MyDebrisBase">
            <summary>
            Single physical debris object. These are stored in a pool and are not meant to be created
            all the time, but only pulled out and returned back to the pool. Therefore, we do not use constructor
            to initialize an instance.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.Debris.MyDebrisBase.MyDebrisBaseLogic.m_onCloseCallback">
            <summary>
             We cannot use OnClose event from entity to deallocate pool objects,
             so this callback solves that (although it isn't quite as pretty). 
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Debris.MyDebrisBase.MyDebrisBaseLogic.Init(Sandbox.Game.Entities.Debris.MyDebrisBaseDescription)">
            <summary>
            One time initialization for debris entity. These are settings that do not change 
            when this debris entity is pulled from the pool.
            Also note that this is the only way Debris should be initialized. It calls other Init methods with 
            correct arguments.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Debris.MyDebrisBase.MyDebrisBaseLogic.Free">
            <summary>
            Called to clean up resources before pool is destroyed. Think of this as finalization.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Debris.MyDebrisBase.MyDebrisBaseLogic.Start(VRageMath.Vector3D,VRageMath.Vector3D,System.Single)">
            <summary>
            Initialization of each debris instance when it is taken out of the pool.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.Debris.MyDebrisVoxel.MyDebrisVoxelLogic.Start(VRageMath.Vector3D,VRageMath.Vector3D,System.Single)">
            <summary>
            Somewhat of a hack to add setting of default voxel material when calling base version of the method.
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.Debris.MyDebrisBaseDescription">
            <summary>
            Description of 
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyFloatingObject.EvaluatePhysicsMaterial(VRage.Utils.MyStringHash)">
            <summary>
            Evaluates what kind of material should be used for this floating object. If material is not defined than returns empty one and throws an assert.
            </summary>
            <param name="originalMaterial">Original material set in this object.</param>
            <returns>Final material.</returns>
        </member>
        <member name="F:Sandbox.Game.MyInventory.m_tmpItemsToAdd">
            <summary>
            Temporary data for processing changes
            </summary>
        </member>
        <member name="F:Sandbox.Game.MyInventory.m_items">
            <summary>
            Items contained in the inventory
            </summary>
        </member>
        <member name="F:Sandbox.Game.MyInventory.m_maxMass">
            <summary>
            Maximal allowed mass in inventory 
            </summary>
        </member>
        <member name="F:Sandbox.Game.MyInventory.m_maxVolume">
            <summary>
            Maximal allowed volume in inventor, in dm3 (1dm3 = 0.001m3, 1m3 = 1000dm3) stored in dm3 / litres because of floating errors
            </summary>
        </member>
        <member name="F:Sandbox.Game.MyInventory.m_currentVolume">
            <summary>
            Current occupied volume in inventory in dm3 / litres
            </summary>
        </member>
        <member name="F:Sandbox.Game.MyInventory.m_currentMass">
            <summary>
            Current occupied mass in inventory
            </summary>
        </member>
        <member name="F:Sandbox.Game.MyInventory.m_flags">
            <summary>
            Flags indicating capabilities of inventory - can send/receive - used by conveiors etc.
            </summary>
        </member>
        <member name="F:Sandbox.Game.MyInventory.UserData">
            <summary>
            Any attached data..
            </summary>
        </member>
        <member name="F:Sandbox.Game.MyInventory.m_usedIds">
            <summary>
            Stores used ids of the items..
            </summary>
        </member>
        <member name="F:Sandbox.Game.MyInventory.Constraint">
            <summary>
            Constraint filtering items added to inventory. If null, everything is allowed.
            Note that setting this constraint will not affect items already in the inventory.
            </summary>
        </member>
        <member name="M:Sandbox.Game.MyInventory.FindUsableItem(VRage.Game.MyDefinitionId)">
            <summary>
            This will try to find the first item that can be use. This means, if durability is enabled on items, it will look for first item with durability HP > 0,
            if this is disabled, this will behave the same as FindItem method
            </summary>
            <param name="contentId">definition id of the item</param>
            <returns>item that has durability > 0 if found</returns>
        </member>
        <member name="M:Sandbox.Game.MyInventory.FixDurabilityForInventoryItem(VRage.Game.MyObjectBuilder_PhysicalObject)">
            <summary>
            TODO: This should be removed when we can initialize components on items that are stored in inventory but don't have entity with components initialized yet.
            DurabilityComponent is not created until Entity is initialized.
            </summary>
        </member>
        <member name="M:Sandbox.Game.MyInventory.TestEntityForPickup(VRage.Game.Entity.MyEntity,System.Nullable{VRageMath.Vector3D},VRage.Game.MyDefinitionId@,System.Boolean)">
            <summary>
            Returns the entity that should be picked up (doesn't always have to be the provided entity)
            </summary>
        </member>
        <member name="M:Sandbox.Game.MyInventory.TransferItemsFrom(VRage.Game.Entity.MyInventoryBase,VRage.Game.ModAPI.Ingame.IMyInventoryItem,VRage.MyFixedPoint)">
            <summary>
            Transfers safely given item from inventory given as parameter to this instance.
            </summary>
            <returns>true if items were succesfully transfered, otherwise, false</returns>
        </member>
        <member name="M:Sandbox.Game.MyInventory.GetInventoryCount">
            <summary>
            Returns number of embedded inventories - this inventory can be aggregation of other inventories.
            </summary>
            <returns>Return one for simple inventory, different number when this instance is an aggregation.</returns>
        </member>
        <member name="M:Sandbox.Game.MyInventory.IterateInventory(System.Int32,System.Int32)">
            <summary>
            Search for inventory having given search index. 
            Aggregate inventory: Iterates through aggregate inventory until simple inventory with matching index is found.
            Simple inventory: Returns itself if currentIndex == searchIndex.
            
            Usage: searchIndex = index of inventory being searched, leave currentIndex = 0.
            </summary>
        </member>
        <member name="P:Sandbox.Game.MyInventory.CargoPercentage">
            <summary>
            Returns a value in the range [0,1] that indicates how full this inventory is.
            0 is empty
            1 is full
            If there are no cargo constraints, will return empty
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.MyGunStatusEnum">
            <summary>
            When attempting to fire a gun, a status from this enum will be returned.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyGunStatusEnum.OK">
            <summary>
            Gun is capable of shooting
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyGunStatusEnum.Cooldown">
            <summary>
            Gun is cooling down after previous shooting
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyGunStatusEnum.OutOfPower">
            <summary>
            Gun does not have enough power to shoot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyGunStatusEnum.NotFunctional">
            <summary>
            Gun is damaged beyond functionality
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyGunStatusEnum.OutOfAmmo">
            <summary>
            Gun does not have ammo
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyGunStatusEnum.Disabled">
            <summary>
            Gun is disabled by player
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyGunStatusEnum.Failed">
            <summary>
            Any other reason not given here
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyGunStatusEnum.NotSelected">
            <summary>
            No gun was selected, so nothing could shoot
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyGunStatusEnum.AccessDenied">
            <summary>
            Shooter does not not have access to the weapon
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyGunStatusEnum.BurstLimit">
            <summary>
            whole burst fired, re-press the trigger
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyCargoContainer.ContainerType">
            <summary>
            Use this only for debugging/cheating purposes!
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyThrust.m_thrustOverride">
            <summary>
            Overridden thrust in Newtons
            </summary>
        </member>
        <member name="P:Sandbox.Game.Entities.MyThrust.ThrustForce">
            <summary>
            Thrust force direction is opposite to thrust forward vector orientation
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.MyShootActionEnum">
            <summary>
            The type of fire action for a gun.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyShootActionEnum.PrimaryAction">
            <summary>
            Primary fire action (eg. left mouse button)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyShootActionEnum.SecondaryAction">
            <summary>
            Secondary fire action (eg. right mouse button)
            </summary>
        </member>
        <member name="F:Sandbox.Game.Entities.MyShootActionEnum.TertiaryAction">
            <summary>
            Tertiary fire action
            </summary>
        </member>
        <member name="T:Sandbox.Game.Entities.MySensor">
            <summary>
            Sensor, detects objects in area defined by physics body.
            Using triangle mesh is not recommended, because entities inside mesh (without any colliding triangles) will be considered "not in sensor".
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MySensor.#ctor">
            <summary>
            Return false when ManifoldPoint was not changed, return true when ManifoldPoint was changed
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyGridConveyorSystem.TryMergeEndpointSegment(Sandbox.Game.GameSystems.Conveyors.IMyConveyorEndpointBlock,Sandbox.Game.GameSystems.Conveyors.IMyConveyorSegmentBlock,Sandbox.Game.GameSystems.Conveyors.ConveyorLinePosition)">
            <summary>
            Tries to merge the conveyor lines of a conveyor block and segment block.
            Also changes the reference in the endpoint block to the correct line.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyGridConveyorSystem.RecomputeConveyorEndpoints">
            <summary>
            Starts the conveyor endpoint mapping recomputation, aborts the current process if needed.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyGridConveyorSystem.StartRecomputationThread">
            <summary>
            Starts the conveyor endpoint mapping recomputation.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyGridConveyorSystem.UpdateConveyorEndpointMapping">
            <summary>
            Computes the conveyor endpoint mappings.
            The conveyor endpoint blocks come from m_conveyorEndpointBlocks, and are processed iteratively.
            It does not process all of them at once, it processes them until the task has been running longer than MAX_RECOMPUTE_DURATION_MILLISECONDS
            If it exceeds this time, it will exit and restart itself the next frame.
            
            The task can also be aborted, when it is aborted, it will throw away all intermediate data and restart.
            
            Accessing the grid conveyor system will be slow until this has finished computing, after which a large performance gain should be had.
            </summary>
        </member>
        <member name="M:Sandbox.Game.GameSystems.MyGridConveyorSystem.OnConveyorEndpointMappingUpdateCompleted">
            <summary>
            Called when the computation finishes. If it was aborted, restarts with a clean slate.
            Otherwise, adds the results of the computation to the main thread accessible connections map.
            Will continue the task if it was interrupted by timeout.
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.MyGridGyroSystem.Gyros">
            <summary>
            This should not be used to modify the gyros.
            Use Register/Unregister for that.
            </summary>
        </member>
        <member name="P:Sandbox.Game.GameSystems.MyGridGyroSystem.Torque">
            <summary>
            Final torque (clamped by available power, added anti-gravity, slowdown).
            </summary>
        </member>
        <member name="M:Sandbox.Game.Screens.Helpers.MyToolbar.SelectNextSlot">
            <summary>
            GK: Used only for Joystick input. Tried to make more consistent implemetation but it is up to designers how it should work for gamepad
            </summary>
        </member>
        <member name="M:Sandbox.Game.Screens.Helpers.MyToolbar.SelectPreviousSlot">
            <summary>
            GK: Used only for Joystick input. Tried to make more consistent implemetation but it is up to designers how it should work for gamepad
            </summary>
        </member>
        <member name="M:Sandbox.Game.Screens.Helpers.MyToolbar.GetNextValidSlotWithItem(System.Int32)">
            <summary>
            Get next slot that has item. Used for joystick/gamepad input
            </summary>
        </member>
        <member name="M:Sandbox.Game.Screens.Helpers.MyToolbar.GetPreviousValidSlotWithItem(System.Int32)">
            <summary>
            Get previous slot that has item. Used for joystick/gamepad input
            </summary>
        </member>
        <member name="P:Sandbox.Game.Screens.Helpers.MyToolbar.EnabledOverride">
            <summary>
            Override value for Enabled state of items. null means that per item state is reported, otherwise this value is reported.
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MyAudioComponent.TryGetSoundEmitter">
            <summary>
            Use this only for 3d one-time nonloop sounds, emitter returns to pool after the sound is played
            Dont forget to set your entity
            </summary>
            <returns>Emitter or null if none is avaliable in pool</returns>
        </member>
        <member name="M:Sandbox.Game.World.MyGlobalEventFactory.CreateEvent``1(VRage.Game.MyDefinitionId)">
            <summary>
            Use for creation of the event in code (ensures correct data class usage)
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MyGlobalEventFactory.CreateEvent(VRage.Game.MyObjectBuilder_GlobalEventBase)">
            <summary>
            Use for deserialization from a saved game
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MyGlobalEventFactory.GetEventDefinitionObsolete(VRage.Game.MyGlobalEventTypeEnum)">
            <summary>
            Gets the definition id of the event definition that corresponds to the event that used to have the given event type
            </summary>
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MyPlayerCollection.SetControlledEntity(System.UInt64,VRage.Game.Entity.MyEntity)">
            <summary>
            Shortcut for setting the first controller of the given player
            </summary>
            <param name="steamUserId"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MyPlayerCollection.GetOnlinePlayerCount">
            <summary>
            Gets current online player count.
            </summary>
            <returns>Returns current online player count.</returns>
        </member>
        <member name="M:Sandbox.Game.Multiplayer.MyPlayerCollection.TryGetPlayerId(System.Int64,Sandbox.Game.World.MyPlayer.PlayerId@)">
            <summary>
            Does a linear search through a dictionary. Do not use unless you actually need this
            </summary>
        </member>
        <member name="T:Sandbox.Game.Multiplayer.Sync">
            <summary>
            Shortcut class for various multiplayer things
            </summary>
        </member>
        <member name="P:Sandbox.Game.Multiplayer.Sync.RelativeSimulationRatio">
            <summary>
            Use this number to achieve same speed as server.
            </summary>
        </member>
        <member name="F:Sandbox.Game.Gui.MyGuiScreenLoadSubscribedWorld.LoadListResult.SubscribedWorlds">
            <summary>
            List of worlds user is subscribed to, or null if there was an error
            during operation.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyGuiScreenCubeBuilder.GenerateSizeNotAvailableText(System.Boolean)">
            <summary>
            Generates multiline text control indicating that block is not available.
            </summary>
            <param name="blockSizeLarge">Is block size large.</param>
            <returns>Multiline text control with block not available info.</returns>
        </member>
        <member name="M:Sandbox.Game.Gui.MyGuiScreenCubeBuilder.GenerateSizeInfoLabel(System.Boolean)">
            <summary>
            Generates label control containing block size info.
            </summary>
            <param name="blockSizeLarge">Is block size large</param>
            <returns>Label control with block size info</returns>
        </member>
        <member name="M:Sandbox.Game.Gui.MyGuiScreenCubeBuilder.GenerateBlockInfos(Sandbox.Definitions.MyCubeBlockDefinition,Sandbox.Graphics.GUI.MyGuiControlBlockInfo.MyControlBlockInfoStyle@)">
            <summary>
            Generates list of block info controls from base block and its stages.
            </summary>
            <param name="blockDefinition">Definition of the block</param>
            <param name="blockInfoStyle">Block info style used in Block info control.</param>
            <returns>Array of block info controls.</returns>
        </member>
        <member name="M:Sandbox.Game.Gui.MyGuiScreenDebugDeveloper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sandbox.Game.Gui.MyGuiScreenDebugDeveloper"/> class.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyGuiScreenTerminal.#ctor">
            <summary>
            Do not call directly. Use static Show() method instead.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyTerminalControlFactory.AddBaseClass``2">
            <summary>
            Base class controls are added automatically
            </summary>
        </member>
        <member name="M:Sandbox.Game.Gui.MyTerminalControlFactory.RemoveControl``1(Sandbox.ModAPI.Interfaces.Terminal.IMyTerminalControl)">
            <summary>
            Remove a control from a terminal block.  These will return on session load.
            </summary>
            <typeparam name="TBlock"></typeparam>
            <param name="id"></param>
        </member>
        <member name="M:Sandbox.Game.Weapons.MyAmmoBase.UpdateBeforeSimulation">
            <summary>
            Updates resource.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Weapons.MyAmmoBase.GuidedInMultiplayer">
            <summary>
            Need per frame position updates in multiplayer
            </summary>
        </member>
        <member name="P:Sandbox.Game.Weapons.MyAmmoBase.TimeToActivate">
            <summary>
            (optional) Time to activate the ammo in milliseconeds, if applicable.
            Now used only in universal launcher shells, but can be extended to elsewhere.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Weapons.MyMissile.UpdateBeforeSimulation">
            <summary>
            Updates resource.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Weapons.MyMissile.WorldPositionChanged(System.Object)">
            <summary>
            Called when [world position changed].
            </summary>
            <param name="source">The source object that caused this event.</param>
        </member>
        <member name="T:Sandbox.Game.Weapons.MyDrillBase">
            <summary>
            Common code for all drills (both cube blocks on ship and hand drill).
            </summary>
            
        </member>
        <member name="M:Sandbox.Game.Weapons.MyDrillBase.#ctor(VRage.Game.Entity.MyEntity,VRage.Game.MyParticleEffectsIDEnum,VRage.Game.MyParticleEffectsIDEnum,VRage.Game.MyParticleEffectsIDEnum,Sandbox.Game.Weapons.Guns.MyDrillSensorBase,Sandbox.Game.Weapons.MyDrillCutOut,System.Single,System.Single,System.Single,System.Single)">
            <param name="drillEntity">Entity to which this drill is attached.</param>
            <param name="inventoryCollectionRatio">Ratio (0 to 1) of mined material that will be stored in inventory (if one is assigned), rest will be thrown out in space.</param>
        </member>
        <member name="M:Sandbox.Game.Weapons.MyDrillBase.TryHarvestOreMaterial(Sandbox.Definitions.MyVoxelMaterialDefinition,VRageMath.Vector3,System.Int32,System.Boolean)">
            <summary>
            Converts voxel material to ore material and puts it into the inventory. If there is no
            corresponding ore for given voxel type, nothing happens.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Weapons.MyGunBase.ShootWithOffset(VRageMath.Vector3,VRageMath.Vector3,System.Single,VRage.Game.Entity.MyEntity)">
            <summary>
            This function changes default shooting position (muzzle flash) with an offset.
            (allow us to shoot at close objects)
            </summary>
        </member>
        <member name="M:Sandbox.Game.Weapons.MyWelder.IsWithinWorldLimits(Sandbox.Game.Entities.MyCubeGrid,System.Int64,System.String)">
            <summary>
            Determines whether the projected grid still fits within block limits set by server after a new block is added
            </summary>
        </member>
        <member name="M:Sandbox.Game.Weapons.MyWeaponPrediction.GetPredictedTargetPosition(Sandbox.Game.Weapons.MyGunBase,VRage.Game.Entity.MyEntity,VRage.Game.Entity.MyEntity,VRageMath.Vector3@,System.Single@,System.Single)">
            <summary>
            Algorithm to predict the position of the target
            </summary>
        </member>
        <member name="M:Sandbox.Game.Weapons.MyProjectile.PrefetchVoxelPhysicsIfNeeded">
            <summary>
            Prefetch voxel physics if it is currently needed.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Weapons.MyProjectile.IsIgnoredEntity(VRage.ModAPI.IMyEntity)">
            <summary>
            Query whether given entity is ignored.
            </summary>
        </member>
        <member name="T:Sandbox.Game.World.MyNetworkClient">
            <summary>
            This class identifies the steam client (basically a computer) on the network.
            </summary>
        </member>
        <member name="F:Sandbox.Game.World.MyNetworkClient.ClientFrameId">
            <summary>
            When player sends input, ClientTime is set on server
            Later when server sends position updates, it includes client time
            It's used for input prediction interpolation on client
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MySessionSnapshot.Backup">
            <summary>
            Backup Saves to Backup folder of save game according to MySession.Static.MaxBackupSaves on advanced settings.
            If this is zero the backup functionality is disabled.
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MySessionSnapshot.IsSorted(System.String[])">
            <summary>
            Determines if string array is sorted from A -> Z
            </summary>
        </member>
        <member name="M:Sandbox.Game.World.MyGodRaysProperties.InterpolateWith(Sandbox.Game.World.MyGodRaysProperties,System.Single)">
            <param name="interpolator">0 - use this object, 1 - use other object</param>
        </member>
        <member name="M:Sandbox.Game.World.MyParticleDustProperties.InterpolateWith(Sandbox.Game.World.MyParticleDustProperties,System.Single)">
            <param name="interpolator">0 - use this object, 1 - use other object</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyVoxelMap.storage_RangeChanged(VRageMath.Vector3I,VRageMath.Vector3I,VRage.Voxels.MyStorageDataTypeFlags)">
            <summary>
            Invalidates voxel cache
            </summary>
            <param name="minChanged">Inclusive min</param>
            <param name="maxChanged">Inclusive max</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyVoxelMaps.GetVoxelMapWhoseBoundingBoxIntersectsBox(VRageMath.BoundingBoxD@,Sandbox.Game.Entities.MyVoxelBase)">
            <summary>
            Return reference to voxel map that intersects the box. If not voxel map found, null is returned.
            </summary>
        </member>
        <member name="T:Sandbox.MessageBoxResult">
            <summary>
            Represents possible values returned by the MessageBox function.
            </summary>
        </member>
        <member name="T:Sandbox.MessageBoxOptions">
            <summary>
             Flags that define appearance and behaviour of a standard message box displayed by a call to the MessageBox function.
             </summary>    
        </member>
        <member name="M:Sandbox.MyInitializer.UnhandledExceptionHandler(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            This handler gets called when unhandled exception occurs in main thread or any other background thread.
            We display our own error message and prevent displaying windows standard crash message because I have discovered that
            if error occurs during XNA loading, no message box is displayed ever. Game just turns off. So this is a solution, user
            sees the same error message every time.
            But I have discovered that it's sometimes not called when CLR throws OutOfMemoryException. But sometimes it is!!!
            I assume there are other fatal exception types that won't be handled here: stack-something or engine-fatal-i-dont-know...
            Possible explanation of this mystery: OutOfMemoryException is so fatal that CRL just shut-downs the application so we can't write to log or display messagebox.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.UnhandledExceptionEventArgs"/> instance containing the event data.</param>
            
        </member>
        <!-- Badly formed XML comment ignored for member "M:Sandbox.MyInitializer.GetNETFromRegistry" -->
        <member name="M:Sandbox.MyInitializer.CheckFor45DotVersion(System.Int32)">
            <summary>
            Return version from releaseKey. Only work for >=4.5 .NET.
            </summary>
            <param name="releaseKey"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Sandbox.MyInitializer.GetVersionFromRegistry" -->
        <member name="T:Sandbox.Engine.Platform.Game">
            <summary>
            The game.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Platform.Game.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sandbox.Engine.Platform.Game"/> class.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Platform.Game.Exit">
            <summary>
            Exits the game.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Platform.Game.RunLoop">
            <summary>
            Updates the game's clock and calls Update
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Platform.Game.Update">
            <summary>
            Reference page contains links to related conceptual articles.
            </summary>
            <param name="gameTime">
            Time passed since the last call to Update.
            </param>
        </member>
        <member name="P:Sandbox.Engine.Platform.Game.IsActive">
            <summary>
            Gets a value indicating whether this instance is active.
            </summary>
            <value><c>true</c> if this instance is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sandbox.Engine.Platform.Game.IsRunning">
            <summary>
            Gets a value indicating whether is running.
            </summary>
        </member>
        <member name="F:Sandbox.MySandboxGame.BuildDateTime">
            <summary>
            Build time of GameLib. Local time (without DST) of machine which build the assembly.
            </summary>
        </member>
        <member name="F:Sandbox.MySandboxGame.m_invokeQueue">
            <summary>
            Queue of actions to be invoked on main game thread.
            </summary>
        </member>
        <member name="M:Sandbox.MySandboxGame.InitQuickLaunch">
            <summary>
            Inicializes the quick launche.
            </summary>
        </member>
        <member name="M:Sandbox.MySandboxGame.InitMultithreading">
            <summary>
            Inits the multithreading.
            </summary>
        </member>
        <member name="M:Sandbox.MySandboxGame.Preallocate">
            <summary>
            Decrease fragmentation of the Large Object Heap by forcing static class constructors to run.
            </summary>
        </member>
        <member name="M:Sandbox.MySandboxGame.LoadData">
            <summary>
            Loads the data.
            </summary>
        </member>
        <member name="M:Sandbox.MySandboxGame.UnloadData">
            <summary>
            Unloads the data.
            </summary>
        </member>
        <member name="M:Sandbox.MySandboxGame.Invoke(System.Action)">
            <summary>
            Invokes the specified action on main thread.
            </summary>
        </member>
        <member name="M:Sandbox.MySandboxGame.ProcessInvoke">
            <summary>
            Processes the invoke queue.
            </summary>
        </member>
        <member name="M:Sandbox.MySandboxGame.ProcessRenderOutput">
            <summary>
            Safe to anytime from update thread, synchronized internally
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Platform.GameWindowForm">
            <summary>
            No events like KeyDown, MouseMove... are raised.
            Activated and Deactivated is still raised.
            Prevents creating garbage.
            </summary>
        </member>
        <member name="P:Sandbox.Engine.Platform.GameWindowForm.BypassedMessages">
            <summary>
            Messages which are bypassed.
            These messages are handled by DefWindowProc before it arrives to window WndProc.
            It prevents allocations in System.Windows.Forms
            </summary>
        </member>
        <member name="P:Sandbox.Engine.Utils.MyFpsManager.FrameTime">
            <summary>
            Returns update + render time of last frame in ms
            </summary>
            <returns></returns>
        </member>
        <member name="P:Sandbox.Engine.Utils.MyFpsManager.FrameTimeAvg">
            <summary>
            Returns update + render time of last frame (Average in last second)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.FindFreePlace(VRageMath.MatrixD@,VRageMath.Vector3D,System.Single,System.Int32,System.Int32,System.Single)">
            <param name="matrix">Reference frame from which search for a free place</param>
            <param name="axis">Axis where to perform a rotation searching for a free place</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.FindFreePlace(VRageMath.Vector3D,System.Single,System.Int32,System.Int32,System.Single)">
            <summary>
            Finds free place for objects defined by position and radius.
            StepSize is how fast to increase radius, 0.5f means by half radius
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.FindFreePlaceVoxelMap(VRageMath.Vector3D,System.Single,Havok.HkShape@,VRageMath.Vector3D@)">
            <returns>True if it a safe position is found</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.IsInsideVoxel(VRageMath.Vector3,VRageMath.Vector3,VRageMath.Vector3@)">
            <summary>
            
            </summary>
            <param name="pos">Position of object</param>
            <param name="hintPosition">Position of object few frames back to test whether object enterred voxel. Usually pos - LinearVelocity * x, where x it time.</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.WorldHalfExtent">
            <summary>
            Returns shortest distance (i.e. axis-aligned) to the world border from the world center.
            Will be 0 if world is borderless
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.WorldSafeHalfExtent">
            <summary>
            Returns shortest distance (i.e. axis-aligned) to the world border from the world center, minus 600m to make spawning somewhat safer.
            WIll be 0 if world is borderless
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.GetEntitiesInAABB(VRageMath.BoundingBox@)">
            <summary>
            Get all rigid body elements touching a bounding box.
            Clear() the result list after you're done with it!
            </summary>
            <returns>The list of results.</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.GetEntitiesInSphere(VRageMath.BoundingSphereD@)">
            <summary>
            Get all rigid body elements touching a bounding sphere.
            Clear() the result list after you're done with it!
            </summary>
            <returns>The list of results.</returns>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.Remove(VRage.Game.Entity.MyEntity)">
            <summary>
            Removes the specified entity from scene
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.RemoveName(VRage.Game.Entity.MyEntity)">
            <summary>
            Remove name of entity from used names
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.Exist(VRage.Game.Entity.MyEntity)">
            <summary>
            Checks if entity exists in scene already
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="F:Sandbox.Game.Entities.MyEntities.m_hiddenTypes">
            <summary>
            Types in this set and their subtypes will be temporarily invisible.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.CreateAsync(VRage.ObjectBuilders.MyObjectBuilder_EntityBase,System.Boolean,System.Action{VRage.Game.Entity.MyEntity})">
            <summary>
            Creates object asynchronously and adds it into scene.
            DoneHandler is invoked from update thread when the object is added into scene.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.CreateFromObjectBuilderParallel(VRage.ObjectBuilders.MyObjectBuilder_EntityBase,System.Boolean,System.Action,VRage.Game.Entity.MyEntity,System.Boolean)">
            <summary>
            Create and asynchronously initialize and entity.
            </summary>
            <param name="completionCallback">Callback when the entity is initialized</param>
            <param name="entity">Already created entity you only want to init</param>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.Load(System.Collections.Generic.List{VRage.ObjectBuilders.MyObjectBuilder_EntityBase})">
            <summary>
            Returns false when not all entities were loaded
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyEntities.CreateEntityAndAdd(VRage.Game.MyDefinitionId,System.Boolean,System.Nullable{VRageMath.Vector3},System.Nullable{VRageMath.Vector3},System.Nullable{VRageMath.Vector3})">
            <summary>
            This method will try to retrieve a definition of components container of the entity and create the type of the entity.
            This wi
            </summary>
            <param name="entityContainerId">This is the id of container definition</param>
            <param name="setPosAndRot">Set true if want to set entity position, orientation</param>
            <returns></returns>
        </member>
        <member name="T:Sandbox.Game.Entities.MyEntities.InitEntityData">
            <summary>
            Holds data for asynchronous entity init
            </summary>
        </member>
        <member name="M:Sandbox.Game.Entities.MyGamePruningStructure.GetClosestPlanet(VRageMath.Vector3D)">
            Get the closest planet overlapping a position.
            
            This will not return anything if the position is not within the bounding box of the planet.
        </member>
        <member name="E:Sandbox.Game.Gui.MyGuiScreenLoading.OnScreenLoadingFinished">
            <summary>
            Event created once the screen has been loaded and added to gui manager.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Lights.MyLight.#ctor">
            <summary>
            IMPORTANT: This class isn't realy inicialized by constructor, but by Start()
            So don't initialize members here, do it in Start()
            </summary>
        </member>
        <member name="M:Sandbox.Game.Lights.MyLight.Clear">
            <summary>
            Can be called only from MyLights.RemoveLight.
            </summary>
        </member>
        <member name="M:Sandbox.Game.Lights.MyLight.SpotlightNotTooLarge(System.Single,System.Single)">
            <summary>
            When setting Reflector properties, use this function to test whether properties are in bounds and light AABB is not too large.
            Properties which affects calculations are ReflectorRange and ReflectorConeMaxAngleCos (ReflectorConeDegrees, ReflectorConeRadians)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Game.Lights.MyLight.UpdateReflectorRangeAndAngle(System.Single,System.Single)">
            <summary>
            Use when setting both values and previous state of both value is undefined
            </summary>
            <param name="reflectorConeMaxAngleCos"></param>
            <param name="range"></param>
        </member>
        <member name="M:Sandbox.Game.Lights.MyLight.Start">
            <summary>
            IMPORTANT: This class isn't realy inicialized by constructor, but by Start()
            </summary>
        </member>
        <member name="P:Sandbox.Game.Lights.MyLight.PointLightOffset">
            <summary>
            Value from 0 to 1 indication light offset in direction of reflector
            0 means zero offset, 1 means radius offset
            </summary>
        </member>
        <member name="P:Sandbox.Game.Lights.MyLight.Falloff">
            <summary>
            Exponential falloff (1 = linear, 2 = quadratic, etc)
            </summary>
        </member>
        <member name="P:Sandbox.Game.Lights.MyLight.LightOn">
            <summary>
            If true, we use the light in lighting calculation. Otherwise it's like turned off, but still in the buffer.
            </summary>
        </member>
        <member name="P:Sandbox.Game.Lights.MyLight.ReflectorIntensity">
            <summary>
            Reflector parameters are also parameters for spot light
            </summary>
        </member>
        <member name="P:Sandbox.Game.Lights.MyLight.ReflectorConeRadians">
            <summary>
            Sets reflector cone angle in degrees, minimum is 0, teoretical maximum is PI
            </summary>
        </member>
        <member name="P:Sandbox.Game.Lights.MyLight.ReflectorConeDegrees">
            <summary>
            Sets reflector cone angle in degrees, minimum is 0, teoretical maximum is 180
            </summary>
        </member>
        <member name="T:Sandbox.Game.Lights.MyLight.LightTypeEnum">
            <summary>
            Light type, flags, could be combined
            </summary>
        </member>
        <member name="M:Sandbox.Game.Utils.MyOctree.#ctor">
            <summary>
            Initializes a new instance of the MyOctree class.
            </summary>
            <param name="triangles">Input triangle array</param>
            <param name="sortedTriangles">Output triangle array (can be same as input triangle array)</param>
        </member>
        <member name="M:Sandbox.Game.Utils.MyOctree.GetNode(VRageMath.BoundingBox@)">
            <summary>
            Get the node id this triangle belongs to.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysics.CastRayInternal(VRageMath.Vector3D,VRageMath.Vector3D,System.Collections.Generic.List{VRageMath.Spatial.MyClusterTree.MyClusterQueryResult},System.Int32)">
            <summary>
            Cast a ray on given worlds and returns closest one from all of the worlds. WARNING: It does not clear worlds list after.
            </summary>
            <param name="from">Start of ray.</param>
            <param name="to">End of ray.</param>
            <param name="worlds">Worlds to make test on.</param>
            <param name="raycastFilterLayer">Collision filter.</param>
            <returns>Hit info. Null if no hit registered.</returns>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyPhysics.m_foundEntities">
            <summary>
            Used for saving result of search in CastLongRay. (For optimalisation rules)
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysics.CastLongRay(VRageMath.Vector3D,VRageMath.Vector3D,System.Boolean)">
            <summary>
            Finds closest or any object on the path of the ray from->to. Uses Storage for voxels for faster 
            search but only good for long rays (more or less more than 50m). Use it only in such cases.
            </summary>
            <param name="from">Start of the ray.</param>
            <param name="to">End of the ray.</param>
            <param name="any">Indicates if method should return any object found (May not be closest)</param>
            <returns>Hit info.</returns>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysics.EnsurePhysicsSpace(VRageMath.BoundingBoxD)">
            <summary>
            Ensure aabb is inside only one subspace. If no, reorder.
            </summary>
            <param name="aabb"></param>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysics.MoveObject(System.UInt64,VRageMath.BoundingBoxD,VRageMath.Vector3)">
            <summary>
            Change position of object in world. Move object between subspaces if necessary.
            </summary>
            <param name="id"></param>
            <param name="oldAabb"></param>
            <param name="aabb"></param>
            <param name="velocity"></param>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysics.RemoveObject(System.UInt64)">
            <summary>
            Remove object from world, remove also subspace if empty.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysics.GetObjectOffset(System.UInt64)">
            <summary>
            Return offset of objects subspace center.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Engine.Physics.MyPhysics.AddObject(VRageMath.BoundingBoxD,Sandbox.Engine.Physics.MyPhysicsBody,System.Nullable{System.UInt64},System.String,System.Int64)">
            <summary>
            Try add object to some subspace.
            Create new subspace if allowed (!SingleCluster.HasValue) and needed (object is outside of existing subspaces).
            If not allowed, mark object as left the world.
            </summary>
            <param name="bbox"></param>
            <param name="velocity"></param>
            <param name="activationHandler"></param>
            <param name="customId"></param>
            <returns></returns>
        </member>
        <member name="P:Sandbox.Engine.Physics.MyPhysics.StepsLastSecond">
            <summary>
            Number of physics steps done in last second
            </summary>
        </member>
        <member name="P:Sandbox.Engine.Physics.MyPhysics.SimulationRatio">
            <summary>
            Simulation ratio, when physics cannot keep up, this is smaller than 1
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Physics.MyPhysics.CollisionLayers">
            <summary>
            Collision layers that can be used to filter what collision should be found for casting methods.
            </summary>
            <remarks>!!** If new layer is added then also add conversion to "GetCollisionLayer" function **!! 
            Also max layer number is 31!!</remarks>
        </member>
        <member name="F:Sandbox.Engine.Physics.MyPhysics.CollisionLayers.NoVoxelCollisionLayer">
            <summary>
            Layer that works like 'DefaultCollisionLayer' but do not return collision with voxels (ex. Planet ground/asteroid).
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Physics.MyPhysicsConfig">
            <summary>
            Configuration parameters of physics system
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Utils.MyFakes.DETECT_LEAKS">
            <summary>
            This should be const
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Utils.MyFakes.ENABLE_STATIC_INVENTORY_MASS">
            <summary>
            If true, container grid mass will be static
            If false, container grid mass includes the content mass
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Utils.MyFakes.MP_ISLANDS">
            <summary>
            MULTIPLAYER RELATED FAKES
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyGridIntersection.Calculate(System.Collections.Generic.List{VRageMath.Vector3I},System.Single,VRageMath.Vector3D,VRageMath.Vector3D,VRageMath.Vector3I,VRageMath.Vector3I)">
            <summary>
            Calculates intersected cells, note that cells have their centers in the corners
            </summary>
        </member>
        <member name="P:Sandbox.Engine.Utils.MyLoadingPerformance.Instance">
            <summary>
            Gets the singleton instance.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Utils.MySpectatorCameraController.SwitchLight">
            <summary>
            Switch the light of the spectator - especially relevant during night time or dark zone
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyThirdPersonSpectator.RaycastOccludingObjects(VRage.Game.Entity.MyEntity,VRageMath.Vector3D@,VRageMath.Vector3D@,VRageMath.Vector3D@,VRageMath.Vector3D@)">
            <summary>
            Processes previously acquired raycast results.
            Returns safe camera eye position (As far from target as possible, but not colliding, best case = desired eye pos).
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyThirdPersonSpectator.HandleIntersection(VRage.Game.Entity.MyEntity)">
            <summary>
            Handles camera collisions with environment
            </summary>
            <returns>False if no correct position was found</returns>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyThirdPersonSpectator.ResetViewerDistance(System.Nullable{System.Double})">
            <summary>
            Reset the third person camera distance.
            </summary>
            <param name="newDistance">New camera distance. If null, it is not changed.</param>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyThirdPersonSpectator.ResetViewerAngle(System.Nullable{VRageMath.Vector2})">
            <summary>
            Reset the third person camera "head" angles.
            </summary>
            <param name="headAngle">new head angle</param>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyThirdPersonSpectator.GetViewerDistance">
            <summary>
            Get the distance from viewer to the target.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyThirdPersonSpectator.SaveSettings">
            <summary>
            Flag this spectator to save its settings next Update call.
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Utils.MyTriangle">
            <summary>
            Defines a 3d triangleVertexes. Each edge goes from the origin.
            Cross(edge0, edge1)  gives the triangleVertexes normal.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyTriangle.#ctor(VRageMath.Vector3,VRageMath.Vector3,VRageMath.Vector3)">
            <summary>
            Points specified so that pt1-pt0 is edge0 and p2-pt0 is edge1
            </summary>
            <param name="pt0"></param>
            <param name="pt1"></param>
            <param name="pt2"></param>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyTriangle.#ctor(VRageMath.Vector3@,VRageMath.Vector3@,VRageMath.Vector3@)">
            <summary>
            Points specified so that pt1-pt0 is edge0 and p2-pt0 is edge1
            </summary>
            <param name="pt0"></param>
            <param name="pt1"></param>
            <param name="pt2"></param>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyTriangle.GetPoint(System.Int32)">
            <summary>
            Same numbering as in the constructor
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyTriangle.GetPoint(System.Int32,VRageMath.Vector3@)">
            <summary>
            Same numbering as in the constructor
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Sandbox.Engine.Utils.MyTriangle.GetPoint(VRageMath.Vector3@,System.Int32)" -->
        <member name="M:Sandbox.Engine.Utils.MyTriangle.GetPoint(System.Single,System.Single)">
            <summary>
            Returns the point parameterised by t0 and t1
            </summary>
            <param name="t0"></param>
            <param name="t1"></param>
            <returns></returns>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyTriangle.GetSpan(System.Single@,System.Single@,VRageMath.Vector3)">
            <summary>
            Gets the minimum and maximum extents of the triangleVertexes along the axis
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <param name="axis"></param>
        </member>
        <member name="M:Sandbox.Engine.Utils.MyTriangle.GetSpan(System.Single@,System.Single@,VRageMath.Vector3@)">
            <summary>
            Gets the minimum and maximum extents of the triangle along the axis
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <param name="axis"></param>
        </member>
        <member name="P:Sandbox.Engine.Utils.MyTriangle.Edge2">
            <summary>
            Edge2 goes from pt1 to pt2
            </summary>
        </member>
        <member name="P:Sandbox.Engine.Utils.MyTriangle.Plane">
            <summary>
            Gets the plane containing the triangleVertexes
            </summary>
        </member>
        <member name="P:Sandbox.Engine.Utils.MyTriangle.Normal">
            <summary>
            Gets the triangleVertexes normal. If degenerate it will be normalised, but
            the direction may be wrong!
            </summary>
        </member>
        <member name="F:Sandbox.Engine.Platform.VideoMode.MyVideoSettingsManager.m_adapters">
            <summary>
            Adapters and their supported display modes as reported by the render.
            </summary>
        </member>
        <member name="P:Sandbox.Engine.Platform.VideoMode.MyVideoSettingsManager.RunningGraphicsRenderer">
            <summary>
            This is the renderer that is currently in use (the game was started with it).
            Current settings might have different one set, but change requires game restart.
            </summary>
        </member>
        <member name="M:Sandbox.Engine.Networking.MyLocalCache.LoadLastLoadedTimeFromCheckpoint(System.String)">
            <summary>
            Backward compatibility.
            </summary>
        </member>
        <member name="T:Sandbox.Engine.Networking.MySteam">
            <summary>
            Ingame shortcut for various things
            </summary>
        </member>
        <member name="T:Sandbox.MySteamService">
            <summary>
            Steam service, may be replaced by interface later.
            Don't use it directly in GameLib
            </summary>
        </member>
    </members>
</doc>
